Metadata-Version: 2.1
Name: damask-parse
Version: 0.2.30
Summary: Input file writers and output file readers for the crystal plasticity code DAMASK.
License: MPL 2.0
Author: Adam Plowman
Author-email: adam.plowman@manchester.ac.uk
Requires-Python: >=3.8,<3.13
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Requires-Dist: damask (>=3.0.0,<4.0.0)
Requires-Dist: h5py (>=3.11.0,<4.0.0)
Requires-Dist: numpy (>=1.24.4,<2.0.0) ; python_version < "3.9"
Requires-Dist: numpy (>=1.26.4) ; python_version >= "3.9"
Requires-Dist: pandas (>=2.0.3,<3.0.0)
Requires-Dist: ruamel.yaml (>=0.18.6,<0.19.0)
Requires-Dist: scipy (>=1.10.1,<2.0.0) ; python_version < "3.9"
Requires-Dist: scipy (>=1.13.0) ; python_version >= "3.9"
Description-Content-Type: text/markdown

[![PyPI version](https://badge.fury.io/py/damask-parse.svg)](https://badge.fury.io/py/damask-parse)

# damask-parse
Input file writers and output file readers for the crystal plasticity code DAMASK.

## Installation

`pip install damask-parse`

## Roadmap

### Readers:

- ✅ `read_table`
- ️✅ `read_geom`
- ✅ `read_spectral_stdout`
- ✅ `read_spectral_stderr`
- ❌ `read_load`
- ✅ `read_material`

### Writers:

- ✅ `write_geom`
- ✅ `write_load`
- ✅ `write_material_config`
- ✅ `write_numerics_config`

### Utilities:

- ✅ `get_header_lines`
- ✅ `get_num_header_lines`


## Examples

### Read an ASCII table file

The following example will read in the data from an ASCII table file. By default, this function will re-combine array columns (which are split into their individual components in the text file) into Numpy arrays.

```python
from damask_parse import read_table

table_path = 'path/to/table/file.txt'
table_data = read_table(table_path)

```

