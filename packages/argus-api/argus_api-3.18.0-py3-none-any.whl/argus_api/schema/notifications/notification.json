{
  "swagger": "2.0",
  "info": {},
  "basePath": "/",
  "tags": [
    {
      "name": "notifications/v1/settings"
    },
    {
      "name": "notifications/v1/notification"
    },
    {
      "name": "notifications/v1/device"
    }
  ],
  "paths": {
    "/notifications/v1/settings/case": {
      "get": {
        "tags": [
          "notifications/v1/settings"
        ],
        "summary": "Get notification settings for current user (INTERNAL)",
        "description": "",
        "operationId": "getSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/notifications/v1/settings/case/app": {
      "put": {
        "tags": [
          "notifications/v1/settings"
        ],
        "summary": "Set notification settings for current user APP notification (INTERNAL)",
        "description": "",
        "operationId": "setAppSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "App notification settings",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.notification.spi.request.CurrentUserSetCaseAppNotificationSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/notifications/v1/notification": {
      "post": {
        "tags": [
          "notifications/v1/notification"
        ],
        "summary": "Prepare a new notification (INTERNAL)",
        "description": "",
        "operationId": "prepareNotification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Notification request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.notification.spi.request.NotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.notification.spi.response.NotificationResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/notifications/v1/notification/{notificationID}/send": {
      "put": {
        "tags": [
          "notifications/v1/notification"
        ],
        "summary": "Send a pending notification (INTERNAL)",
        "description": "",
        "operationId": "sendNotification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "notificationID",
            "in": "path",
            "description": "Notification ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.notification.spi.response.NotificationResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/notifications/v1/device": {
      "get": {
        "tags": [
          "notifications/v1/device"
        ],
        "summary": "List current users notification device (INTERNAL)",
        "description": "",
        "operationId": "listDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of results",
            "required": false,
            "type": "integer",
            "default": 25,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip results",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.notification.spi.response.NotificationDevice-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "post": {
        "tags": [
          "notifications/v1/device"
        ],
        "summary": "Enroll notification device (INTERNAL)",
        "description": "",
        "operationId": "createDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Device enrollment request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.notification.spi.request.NotificationDeviceEnrollRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.notification.spi.response.NotificationDevice-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/notifications/v1/device/{id}": {
      "delete": {
        "tags": [
          "notifications/v1/device"
        ],
        "summary": "Revoke notification device (INTERNAL)",
        "description": "",
        "operationId": "revokeDevice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of device to revoke",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.notification.spi.response.NotificationDevice-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    }
  },
  "definitions": {
    "no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings": {
      "type": "object",
      "properties": {
        "user": {
          "position": 0,
          "description": "The user which these settings apply to.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "appSettings": {
          "position": 0,
          "description": "The app notification settings set for this user.",
          "$ref": "#/definitions/no.mnemonic.services.notification.spi.response.UserCaseNotificationAppSettings"
        }
      }
    },
    "no.mnemonic.services.notification.spi.response.NotificationResponseRecipient": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "position": 0,
          "description": "The type of this recipient",
          "enum": [
            "email",
            "sms",
            "app"
          ]
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of this recipient"
        },
        "destination": {
          "type": "string",
          "position": 0,
          "description": "The destination of this recipient (email, sms or other)"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "The flags of this recipient",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "verbose"
            ]
          }
        },
        "userID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The ID of the user this notification is bound to, or 0 if not a user"
        }
      }
    },
    "no.mnemonic.services.notification.spi.response.UserCaseNotificationAppSettings": {
      "type": "object",
      "properties": {
        "verbose": {
          "type": "boolean",
          "position": 0,
          "description": "If true, app notifications should be verbose."
        },
        "priority": {
          "type": "array",
          "position": 0,
          "description": "If set, only send app notifications for cases with these priorities.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          }
        }
      }
    },
    "NotificationRequestRecipient": {
      "type": "object",
      "required": [
        "format",
        "language",
        "type"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "If set, this ID referse to the user to notify",
          "minimum": 0
        },
        "format": {
          "type": "string",
          "position": 0,
          "description": "If applicable, format suggests the preferred notification format for this recipient. Defaults to brief.",
          "enum": [
            "brief",
            "verbose"
          ]
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Type specifies the preferred notification type for this recipient. Defaults to email.",
          "enum": [
            "sms",
            "email"
          ]
        },
        "language": {
          "type": "string",
          "position": 0,
          "description": "Type specifies the preferred notification language for this recipient. Defaults to english.",
          "enum": [
            "english",
            "norwegian"
          ]
        },
        "role": {
          "type": "string",
          "position": 0,
          "description": "This specifies the role this recipient has (why is the recipient being notified). Default is undefined.",
          "enum": [
            "serviceContact",
            "watcher",
            "copy",
            "currentUser"
          ]
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "This specifies the name of the recipient. Only applicable if the recipient is not referring to a user."
        },
        "email": {
          "type": "string",
          "position": 0,
          "description": "This specifies the notification email of the recipient. Only applicable for recipients of type email, which is not connected to a user."
        },
        "phone": {
          "type": "string",
          "position": 0,
          "description": "This specifies the notification phone number of the recipient. Only applicable for recipients of type sms, which is not connected to a user."
        }
      },
      "description": "Recipient object which is part of a NotificationRequest"
    },
    "no.mnemonic.services.argus.common.rest.model.ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "no.mnemonic.services.notification.spi.request.NotificationRequestRecipient": {
      "type": "object",
      "required": [
        "format",
        "language",
        "type"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "If set, this ID referse to the user to notify",
          "minimum": 0
        },
        "format": {
          "type": "string",
          "position": 0,
          "description": "If applicable, format suggests the preferred notification format for this recipient. Defaults to brief.",
          "enum": [
            "brief",
            "verbose"
          ]
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Type specifies the preferred notification type for this recipient. Defaults to email.",
          "enum": [
            "sms",
            "email"
          ]
        },
        "language": {
          "type": "string",
          "position": 0,
          "description": "Type specifies the preferred notification language for this recipient. Defaults to english.",
          "enum": [
            "english",
            "norwegian"
          ]
        },
        "role": {
          "type": "string",
          "position": 0,
          "description": "This specifies the role this recipient has (why is the recipient being notified). Default is undefined.",
          "enum": [
            "serviceContact",
            "watcher",
            "copy",
            "currentUser"
          ]
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "This specifies the name of the recipient. Only applicable if the recipient is not referring to a user."
        },
        "email": {
          "type": "string",
          "position": 0,
          "description": "This specifies the notification email of the recipient. Only applicable for recipients of type email, which is not connected to a user."
        },
        "phone": {
          "type": "string",
          "position": 0,
          "description": "This specifies the notification phone number of the recipient. Only applicable for recipients of type sms, which is not connected to a user."
        }
      },
      "description": "Recipient object which is part of a NotificationRequest"
    },
    "ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "no.mnemonic.services.notification.spi.response.NotificationDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string",
          "enum": [
            "iphone",
            "android"
          ]
        },
        "name": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "The subject's short name"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The subject's name"
        },
        "domain": {
          "position": 0,
          "description": "The subject's domain",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        },
        "customer": {
          "position": 0,
          "description": "The customer the subject belongs to",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "The subject's flags",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Type of the subject",
          "readOnly": true,
          "enum": [
            "user",
            "group"
          ]
        }
      },
      "description": "SPI UserInfo"
    },
    "JsonNode": {
      "type": "object"
    },
    "no.mnemonic.services.argus.common.spi.response.CustomerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the customer."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Shortname of the customer."
        },
        "domain": {
          "position": 0,
          "description": "Domain that this customer belongs to.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        }
      },
      "description": "SPI CustomerInfo"
    },
    "no.mnemonic.services.notification.spi.request.CurrentUserSetCaseAppNotificationSettingsRequest": {
      "type": "object",
      "properties": {
        "verbose": {
          "type": "boolean",
          "position": 0,
          "description": "If set, modify verbosity setting for app notifications."
        },
        "priority": {
          "type": "array",
          "position": 0,
          "description": "If set, only send app notifications for cases with these priorities.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          }
        }
      },
      "description": "Request to update current case notification settings for app notification"
    },
    "NotificationRequest": {
      "type": "object",
      "required": [
        "event",
        "recipients"
      ],
      "properties": {
        "customerID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Set the customer context of this notification request. If not set, it should default to the current users customer.",
          "minimum": 0
        },
        "event": {
          "type": "string",
          "position": 0,
          "description": "The name of the notification event to trigger. This will determine notification behaviour and rules."
        },
        "recipients": {
          "type": "array",
          "position": 0,
          "description": "Recipients to notify, either user or non-user.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.notification.spi.request.NotificationRequestRecipient"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "attachments": {
          "type": "array",
          "position": 0,
          "description": "Attachments to process in this notification. The notification rules and destinations will determine how these are used.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.notification.spi.request.NotificationRequestAttachment"
          }
        },
        "context": {
          "type": "object",
          "position": 0,
          "description": "The notification context objects. The notification event determines which context objects are expected. Each object should be JSON serializable.",
          "additionalProperties": {
            "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
          }
        }
      },
      "description": "Request to prepare sending notifications. This is only used for API testing, and is not permitted for ordinary users."
    },
    "CurrentUserSetCaseAppNotificationSettingsRequest": {
      "type": "object",
      "properties": {
        "verbose": {
          "type": "boolean",
          "position": 0,
          "description": "If set, modify verbosity setting for app notifications."
        },
        "priority": {
          "type": "array",
          "position": 0,
          "description": "If set, only send app notifications for cases with these priorities.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          }
        }
      },
      "description": "Request to update current case notification settings for app notification"
    },
    "ResultStash-no.mnemonic.services.notification.spi.response.NotificationDevice-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.notification.spi.response.NotificationDevice"
        }
      }
    },
    "no.mnemonic.services.argus.common.spi.response.DomainInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the domain."
        }
      },
      "description": "SPI DomainInfo"
    },
    "DomainInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the domain."
        }
      },
      "description": "SPI DomainInfo"
    },
    "com.fasterxml.jackson.databind.JsonNode": {
      "type": "object"
    },
    "NotificationResponseRecipient": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "position": 0,
          "description": "The type of this recipient",
          "enum": [
            "email",
            "sms",
            "app"
          ]
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of this recipient"
        },
        "destination": {
          "type": "string",
          "position": 0,
          "description": "The destination of this recipient (email, sms or other)"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "The flags of this recipient",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "verbose"
            ]
          }
        },
        "userID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The ID of the user this notification is bound to, or 0 if not a user"
        }
      }
    },
    "UserCaseNotificationSettings": {
      "type": "object",
      "properties": {
        "user": {
          "position": 0,
          "description": "The user which these settings apply to.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "appSettings": {
          "position": 0,
          "description": "The app notification settings set for this user.",
          "$ref": "#/definitions/no.mnemonic.services.notification.spi.response.UserCaseNotificationAppSettings"
        }
      }
    },
    "NotificationDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string",
          "enum": [
            "iphone",
            "android"
          ]
        },
        "name": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        }
      }
    },
    "no.mnemonic.services.argus.common.spi.response.UserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "The subject's short name"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The subject's name"
        },
        "domain": {
          "position": 0,
          "description": "The subject's domain",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        },
        "customer": {
          "position": 0,
          "description": "The customer the subject belongs to",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "The subject's flags",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Type of the subject",
          "readOnly": true,
          "enum": [
            "user",
            "group"
          ]
        }
      },
      "description": "SPI UserInfo"
    },
    "UserCaseNotificationAppSettings": {
      "type": "object",
      "properties": {
        "verbose": {
          "type": "boolean",
          "position": 0,
          "description": "If true, app notifications should be verbose."
        },
        "priority": {
          "type": "array",
          "position": 0,
          "description": "If set, only send app notifications for cases with these priorities.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          }
        }
      }
    },
    "no.mnemonic.services.argus.common.rest.model.ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResultStash-no.mnemonic.services.notification.spi.response.NotificationDevice-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.notification.spi.response.NotificationDevice"
          }
        }
      }
    },
    "ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NotificationRequestAttachment": {
      "type": "object",
      "required": [
        "contentType",
        "data",
        "fileName"
      ],
      "properties": {
        "contentType": {
          "type": "string",
          "position": 0,
          "description": "MIME Content type of this attachment."
        },
        "fileName": {
          "type": "string",
          "position": 0,
          "description": "Filename of this attachment."
        },
        "data": {
          "type": "string",
          "position": 0,
          "description": "The raw bytes of this attachment."
        }
      },
      "description": "Attachment object which is part of a NotificationRequest"
    },
    "NotificationDeviceEnrollRequest": {
      "type": "object",
      "required": [
        "name",
        "token",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "position": 0,
          "description": "The type of device to enroll.",
          "enum": [
            "iphone",
            "android"
          ]
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The display name of the enrolled device."
        },
        "token": {
          "type": "string",
          "position": 0,
          "description": "The notification token to enroll, to uniquely reference the device. This should be received from the notification service provider."
        }
      },
      "description": "Request to enroll a new notification device (for push notifications) for the current user"
    },
    "no.mnemonic.services.notification.spi.request.NotificationRequestAttachment": {
      "type": "object",
      "required": [
        "contentType",
        "data",
        "fileName"
      ],
      "properties": {
        "contentType": {
          "type": "string",
          "position": 0,
          "description": "MIME Content type of this attachment."
        },
        "fileName": {
          "type": "string",
          "position": 0,
          "description": "Filename of this attachment."
        },
        "data": {
          "type": "string",
          "position": 0,
          "description": "The raw bytes of this attachment."
        }
      },
      "description": "Attachment object which is part of a NotificationRequest"
    },
    "no.mnemonic.services.notification.spi.response.NotificationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the response object."
        },
        "recipients": {
          "type": "array",
          "position": 0,
          "description": "The recipients that this notification sends to",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.notification.spi.response.NotificationResponseRecipient"
          }
        },
        "state": {
          "type": "string",
          "position": 0,
          "description": "The state of this notification.",
          "enum": [
            "prepared",
            "sent"
          ]
        }
      }
    },
    "ResultStash-no.mnemonic.services.notification.spi.response.NotificationResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.notification.spi.response.NotificationResponse"
        }
      }
    },
    "no.mnemonic.services.notification.spi.request.NotificationDeviceEnrollRequest": {
      "type": "object",
      "required": [
        "name",
        "token",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "position": 0,
          "description": "The type of device to enroll.",
          "enum": [
            "iphone",
            "android"
          ]
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The display name of the enrolled device."
        },
        "token": {
          "type": "string",
          "position": 0,
          "description": "The notification token to enroll, to uniquely reference the device. This should be received from the notification service provider."
        }
      },
      "description": "Request to enroll a new notification device (for push notifications) for the current user"
    },
    "ResultStash-no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings"
        }
      }
    },
    "NotificationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the response object."
        },
        "recipients": {
          "type": "array",
          "position": 0,
          "description": "The recipients that this notification sends to",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.notification.spi.response.NotificationResponseRecipient"
          }
        },
        "state": {
          "type": "string",
          "position": 0,
          "description": "The state of this notification.",
          "enum": [
            "prepared",
            "sent"
          ]
        }
      }
    },
    "no.mnemonic.services.notification.spi.request.NotificationRequest": {
      "type": "object",
      "required": [
        "event",
        "recipients"
      ],
      "properties": {
        "customerID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Set the customer context of this notification request. If not set, it should default to the current users customer.",
          "minimum": 0
        },
        "event": {
          "type": "string",
          "position": 0,
          "description": "The name of the notification event to trigger. This will determine notification behaviour and rules."
        },
        "recipients": {
          "type": "array",
          "position": 0,
          "description": "Recipients to notify, either user or non-user.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.notification.spi.request.NotificationRequestRecipient"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "attachments": {
          "type": "array",
          "position": 0,
          "description": "Attachments to process in this notification. The notification rules and destinations will determine how these are used.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.notification.spi.request.NotificationRequestAttachment"
          }
        },
        "context": {
          "type": "object",
          "position": 0,
          "description": "The notification context objects. The notification event determines which context objects are expected. Each object should be JSON serializable.",
          "additionalProperties": {
            "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
          }
        }
      },
      "description": "Request to prepare sending notifications. This is only used for API testing, and is not permitted for ordinary users."
    },
    "CustomerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the customer."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Shortname of the customer."
        },
        "domain": {
          "position": 0,
          "description": "Domain that this customer belongs to.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        }
      },
      "description": "SPI CustomerInfo"
    }
  }
}