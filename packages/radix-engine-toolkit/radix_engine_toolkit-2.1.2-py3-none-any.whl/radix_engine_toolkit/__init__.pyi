import ctypes
import enum
import typing
from collections.abc import Generator
from typing import Any

class _UniffiRustBuffer(ctypes.Structure):
    @staticmethod
    def alloc(size): ...
    @staticmethod
    def reserve(rbuf, additional): ...
    def free(self): ...
    def alloc_with_builder(*args) -> Generator[Any, None, None]: ...
    def consume_with_stream(self) -> Generator[Any, None, None]: ...
    def read_with_stream(self) -> Generator[Any, None, None]: ...

class _UniffiForeignBytes(ctypes.Structure): ...

class _UniffiRustBufferStream:
    data: Any
    len: Any
    offset: int
    def __init__(self, data, len) -> None: ...
    @classmethod
    def from_rust_buffer(cls, buf): ...
    def remaining(self): ...
    def read(self, size): ...
    def read_i8(self): ...
    def read_u8(self): ...
    def read_i16(self): ...
    def read_u16(self): ...
    def read_i32(self): ...
    def read_u32(self): ...
    def read_i64(self): ...
    def read_u64(self): ...
    def read_float(self): ...
    def read_double(self): ...
    def read_c_size_t(self): ...

class _UniffiRustBufferBuilder:
    rbuf: Any
    def __init__(self) -> None: ...
    def finalize(self): ...
    def discard(self) -> None: ...
    def write(self, value) -> None: ...
    def write_i8(self, v) -> None: ...
    def write_u8(self, v) -> None: ...
    def write_i16(self, v) -> None: ...
    def write_u16(self, v) -> None: ...
    def write_i32(self, v) -> None: ...
    def write_u32(self, v) -> None: ...
    def write_i64(self, v) -> None: ...
    def write_u64(self, v) -> None: ...
    def write_float(self, v) -> None: ...
    def write_double(self, v) -> None: ...
    def write_c_size_t(self, v) -> None: ...

class InternalError(Exception): ...

class _UniffiRustCallStatus(ctypes.Structure):
    CALL_SUCCESS: int
    CALL_ERROR: int
    CALL_PANIC: int

class _UniffiPointerManagerCPython:
    def new_pointer(self, obj): ...
    def release_pointer(self, address): ...
    def lookup(self, address): ...

class _UniffiPointerManagerGeneral:
    def __init__(self) -> None: ...
    def new_pointer(self, obj): ...
    def release_pointer(self, handle): ...
    def lookup(self, handle): ...

class _UniffiConverterPrimitive:
    @classmethod
    def check(cls, value): ...
    @classmethod
    def lift(cls, value): ...
    @classmethod
    def lower(cls, value): ...
    @classmethod
    def lowerUnchecked(cls, value): ...
    @classmethod
    def write(cls, value, buf) -> None: ...

class _UniffiConverterPrimitiveInt(_UniffiConverterPrimitive):
    @classmethod
    def check(cls, value): ...

class _UniffiConverterPrimitiveFloat(_UniffiConverterPrimitive):
    @classmethod
    def check(cls, value): ...

class _UniffiConverterRustBuffer:
    @classmethod
    def lift(cls, rbuf): ...
    @classmethod
    def lower(cls, value): ...

class _UniffiConverterUInt8(_UniffiConverterPrimitiveInt):
    CLASS_NAME: str
    VALUE_MIN: int
    VALUE_MAX: Any
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write_unchecked(value, buf) -> None: ...

class _UniffiConverterInt8(_UniffiConverterPrimitiveInt):
    CLASS_NAME: str
    VALUE_MIN: Any
    VALUE_MAX: Any
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write_unchecked(value, buf) -> None: ...

class _UniffiConverterUInt16(_UniffiConverterPrimitiveInt):
    CLASS_NAME: str
    VALUE_MIN: int
    VALUE_MAX: Any
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write_unchecked(value, buf) -> None: ...

class _UniffiConverterInt16(_UniffiConverterPrimitiveInt):
    CLASS_NAME: str
    VALUE_MIN: Any
    VALUE_MAX: Any
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write_unchecked(value, buf) -> None: ...

class _UniffiConverterUInt32(_UniffiConverterPrimitiveInt):
    CLASS_NAME: str
    VALUE_MIN: int
    VALUE_MAX: Any
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write_unchecked(value, buf) -> None: ...

class _UniffiConverterInt32(_UniffiConverterPrimitiveInt):
    CLASS_NAME: str
    VALUE_MIN: Any
    VALUE_MAX: Any
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write_unchecked(value, buf) -> None: ...

class _UniffiConverterUInt64(_UniffiConverterPrimitiveInt):
    CLASS_NAME: str
    VALUE_MIN: int
    VALUE_MAX: Any
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write_unchecked(value, buf) -> None: ...

class _UniffiConverterInt64(_UniffiConverterPrimitiveInt):
    CLASS_NAME: str
    VALUE_MIN: Any
    VALUE_MAX: Any
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write_unchecked(value, buf) -> None: ...

class _UniffiConverterBool(_UniffiConverterPrimitive):
    @classmethod
    def check(cls, value): ...
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write_unchecked(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...

class _UniffiConverterString:
    @staticmethod
    def check(value): ...
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...
    @staticmethod
    def lift(buf): ...
    @staticmethod
    def lower(value): ...

class _UniffiConverterBytes(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class AccessRule:
    def __del__(self) -> None: ...
    @classmethod
    def allow_all(cls): ...
    @classmethod
    def deny_all(cls): ...
    @classmethod
    def require(cls, resource_or_non_fungible: ResourceOrNonFungible): ...
    @classmethod
    def require_all_of(cls, resources: typing.List[ResourceOrNonFungible]): ...
    @classmethod
    def require_amount(cls, amount: Decimal, resource: Address): ...
    @classmethod
    def require_any_of(cls, resources: typing.List[ResourceOrNonFungible]): ...
    @classmethod
    def require_count_of(
        cls, count: int, resources: typing.List[ResourceOrNonFungible]
    ): ...
    @classmethod
    def require_virtual_signature(cls, public_key: PublicKey): ...

class _UniffiConverterTypeAccessRule:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class Address:
    def __init__(self, address: str) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def from_raw(cls, node_id_bytes: bytes, network_id: int): ...
    @classmethod
    def resource_address_from_olympia_resource_address(
        cls, olympia_resource_address: OlympiaAddress, network_id: int
    ): ...
    @classmethod
    def virtual_account_address_from_olympia_address(
        cls, olympia_account_address: OlympiaAddress, network_id: int
    ): ...
    @classmethod
    def virtual_account_address_from_public_key(
        cls, public_key: PublicKey, network_id: int
    ): ...
    @classmethod
    def virtual_identity_address_from_public_key(
        cls, public_key: PublicKey, network_id: int
    ): ...
    def address_string(self) -> str: ...
    def as_str(self) -> str: ...
    def bytes(self) -> bytes: ...
    def entity_type(self) -> EntityType: ...
    def is_global(self) -> bool: ...
    def is_global_component(self) -> bool: ...
    def is_global_consensus_manager(self) -> bool: ...
    def is_global_fungible_resource_manager(self) -> bool: ...
    def is_global_non_fungible_resource_manager(self) -> bool: ...
    def is_global_package(self) -> bool: ...
    def is_global_resource_manager(self) -> bool: ...
    def is_global_virtual(self) -> bool: ...
    def is_internal(self) -> bool: ...
    def is_internal_fungible_vault(self) -> bool: ...
    def is_internal_kv_store(self) -> bool: ...
    def is_internal_non_fungible_vault(self) -> bool: ...
    def is_internal_vault(self) -> bool: ...
    def network_id(self) -> int: ...

class _UniffiConverterTypeAddress:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class Decimal:
    def __init__(self, value: str) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def from_le_bytes(cls, value: bytes): ...
    @classmethod
    def max(cls): ...
    @classmethod
    def min(cls): ...
    @classmethod
    def one(cls): ...
    @classmethod
    def zero(cls): ...
    def abs(self) -> Decimal: ...
    def add(self, other: Decimal) -> Decimal: ...
    def as_str(self) -> str: ...
    def cbrt(self) -> Decimal: ...
    def ceiling(self) -> Decimal: ...
    def div(self, other: Decimal) -> Decimal: ...
    def equal(self, other: Decimal) -> bool: ...
    def floor(self) -> Decimal: ...
    def greater_than(self, other: Decimal) -> bool: ...
    def greater_than_or_equal(self, other: Decimal) -> bool: ...
    def is_negative(self) -> bool: ...
    def is_positive(self) -> bool: ...
    def is_zero(self) -> bool: ...
    def less_than(self, other: Decimal) -> bool: ...
    def less_than_or_equal(self, other: Decimal) -> bool: ...
    def mantissa(self) -> str: ...
    def mul(self, other: Decimal) -> Decimal: ...
    def not_equal(self, other: Decimal) -> bool: ...
    def nth_root(self, n: int) -> typing.Optional[Decimal]: ...
    def powi(self, exp: int) -> Decimal: ...
    def round(self, decimal_places: int, rounding_mode: RoundingMode) -> Decimal: ...
    def sqrt(self) -> typing.Optional[Decimal]: ...
    def sub(self, other: Decimal) -> Decimal: ...
    def to_le_bytes(self) -> bytes: ...

class _UniffiConverterTypeDecimal:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class Hash:
    def __init__(self, hash: bytes) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def from_hex_string(cls, hash: str): ...
    @classmethod
    def from_unhashed_bytes(cls, bytes: bytes): ...
    @classmethod
    def sbor_decode(cls, bytes: bytes): ...
    def as_str(self) -> str: ...
    def bytes(self) -> bytes: ...

class _UniffiConverterTypeHash:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class Instructions:
    def __del__(self) -> None: ...
    @classmethod
    def from_instructions(
        cls, instructions: typing.List[Instruction], network_id: int
    ): ...
    @classmethod
    def from_string(cls, string: str, network_id: int): ...
    def as_str(self) -> str: ...
    def instructions_list(self) -> typing.List[Instruction]: ...
    def network_id(self) -> int: ...

class _UniffiConverterTypeInstructions:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class Intent:
    def __init__(
        self, header: TransactionHeader, manifest: TransactionManifest, message: Message
    ) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def decompile(cls, compiled_intent: bytes): ...
    def compile(self) -> bytes: ...
    def hash(self) -> TransactionHash: ...
    def header(self) -> TransactionHeader: ...
    def intent_hash(self) -> TransactionHash: ...
    def manifest(self) -> TransactionManifest: ...
    def message(self) -> Message: ...
    def statically_validate(self, validation_config: ValidationConfig): ...

class _UniffiConverterTypeIntent:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class ManifestBuilder:
    def __init__(self) -> None: ...
    def __del__(self) -> None: ...
    def access_controller_cancel_primary_role_badge_withdraw_attempt(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_cancel_primary_role_recovery_proposal(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_cancel_recovery_role_badge_withdraw_attempt(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_cancel_recovery_role_recovery_proposal(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_create(
        self,
        controlled_asset: ManifestBuilderBucket,
        rule_set: RuleSet,
        timed_recovery_delay_in_minutes: typing.Optional[int],
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def access_controller_create_proof(self, address: Address) -> ManifestBuilder: ...
    def access_controller_create_with_security_structure(
        self,
        controlled_asset: ManifestBuilderBucket,
        primary_role: SecurityStructureRole,
        recovery_role: SecurityStructureRole,
        confirmation_role: SecurityStructureRole,
        timed_recovery_delay_in_minutes: typing.Optional[int],
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def access_controller_initiate_badge_withdraw_as_primary(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_initiate_badge_withdraw_as_recovery(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_initiate_recovery_as_primary(
        self,
        address: Address,
        rule_set: RuleSet,
        timed_recovery_delay_in_minutes: typing.Optional[int],
    ) -> ManifestBuilder: ...
    def access_controller_initiate_recovery_as_recovery(
        self,
        address: Address,
        rule_set: RuleSet,
        timed_recovery_delay_in_minutes: typing.Optional[int],
    ) -> ManifestBuilder: ...
    def access_controller_lock_primary_role(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_mint_recovery_badges(
        self, address: Address, non_fungible_local_ids: typing.List[NonFungibleLocalId]
    ) -> ManifestBuilder: ...
    def access_controller_new_from_public_keys(
        self,
        controlled_asset: ManifestBuilderBucket,
        primary_role: PublicKey,
        recovery_role: PublicKey,
        confirmation_role: PublicKey,
        timed_recovery_delay_in_minutes: typing.Optional[int],
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def access_controller_quick_confirm_primary_role_badge_withdraw_attempt(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_quick_confirm_primary_role_recovery_proposal(
        self,
        address: Address,
        rule_set: RuleSet,
        timed_recovery_delay_in_minutes: typing.Optional[int],
    ) -> ManifestBuilder: ...
    def access_controller_quick_confirm_recovery_role_badge_withdraw_attempt(
        self, address: Address
    ) -> ManifestBuilder: ...
    def access_controller_quick_confirm_recovery_role_recovery_proposal(
        self,
        address: Address,
        rule_set: RuleSet,
        timed_recovery_delay_in_minutes: typing.Optional[int],
    ) -> ManifestBuilder: ...
    def access_controller_stop_timed_recovery(
        self,
        address: Address,
        rule_set: RuleSet,
        timed_recovery_delay_in_minutes: typing.Optional[int],
    ) -> ManifestBuilder: ...
    def access_controller_timed_confirm_recovery(
        self,
        address: Address,
        rule_set: RuleSet,
        timed_recovery_delay_in_minutes: typing.Optional[int],
    ) -> ManifestBuilder: ...
    def access_controller_unlock_primary_role(
        self, address: Address
    ) -> ManifestBuilder: ...
    def account_add_authorized_depositor(
        self, address: Address, badge: ResourceOrNonFungible
    ) -> ManifestBuilder: ...
    def account_burn(
        self, address: Address, resource_address: Address, amount: Decimal
    ) -> ManifestBuilder: ...
    def account_burn_non_fungibles(
        self,
        address: Address,
        resource_address: Address,
        ids: typing.List[NonFungibleLocalId],
    ) -> ManifestBuilder: ...
    def account_create(self) -> ManifestBuilder: ...
    def account_create_advanced(
        self,
        owner_role: OwnerRole,
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def account_create_proof_of_amount(
        self, address: Address, resource_address: Address, amount: Decimal
    ) -> ManifestBuilder: ...
    def account_create_proof_of_non_fungibles(
        self,
        address: Address,
        resource_address: Address,
        ids: typing.List[NonFungibleLocalId],
    ) -> ManifestBuilder: ...
    def account_deposit(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def account_deposit_batch(
        self, address: Address, buckets: typing.List[ManifestBuilderBucket]
    ) -> ManifestBuilder: ...
    def account_deposit_entire_worktop(
        self, account_address: Address
    ) -> ManifestBuilder: ...
    def account_lock_contingent_fee(
        self, address: Address, amount: Decimal
    ) -> ManifestBuilder: ...
    def account_lock_fee(
        self, address: Address, amount: Decimal
    ) -> ManifestBuilder: ...
    def account_lock_fee_and_withdraw(
        self,
        address: Address,
        amount_to_lock: Decimal,
        resource_address: Address,
        amount: Decimal,
    ) -> ManifestBuilder: ...
    def account_lock_fee_and_withdraw_non_fungibles(
        self,
        address: Address,
        amount_to_lock: Decimal,
        resource_address: Address,
        ids: typing.List[NonFungibleLocalId],
    ) -> ManifestBuilder: ...
    def account_locker_airdrop(
        self,
        address: Address,
        claimants: dict,
        bucket: ManifestBuilderBucket,
        try_direct_send: bool,
    ) -> ManifestBuilder: ...
    def account_locker_claim(
        self,
        address: Address,
        claimant: Address,
        resource_address: Address,
        amount: Decimal,
    ) -> ManifestBuilder: ...
    def account_locker_claim_non_fungibles(
        self,
        address: Address,
        claimant: Address,
        resource_address: Address,
        ids: typing.List[NonFungibleLocalId],
    ) -> ManifestBuilder: ...
    def account_locker_get_amount(
        self, address: Address, claimant: Address, resource_address: Address
    ) -> ManifestBuilder: ...
    def account_locker_get_non_fungible_local_ids(
        self, address: Address, claimant: Address, resource_address: Address, limit: int
    ) -> ManifestBuilder: ...
    def account_locker_instantiate(
        self,
        owner_role: OwnerRole,
        storer_role: AccessRule,
        storer_updater_role: AccessRule,
        recoverer_role: AccessRule,
        recoverer_updater_role: AccessRule,
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def account_locker_instantiate_simple(
        self, allow_recover: bool
    ) -> ManifestBuilder: ...
    def account_locker_recover(
        self,
        address: Address,
        claimant: Address,
        resource_address: Address,
        amount: Decimal,
    ) -> ManifestBuilder: ...
    def account_locker_recover_non_fungibles(
        self,
        address: Address,
        claimant: Address,
        resource_address: Address,
        ids: typing.List[NonFungibleLocalId],
    ) -> ManifestBuilder: ...
    def account_locker_store(
        self,
        address: Address,
        claimant: Address,
        bucket: ManifestBuilderBucket,
        try_direct_send: bool,
    ) -> ManifestBuilder: ...
    def account_remove_authorized_depositor(
        self, address: Address, badge: ResourceOrNonFungible
    ) -> ManifestBuilder: ...
    def account_remove_resource_preference(
        self, address: Address, resource_address: Address
    ) -> ManifestBuilder: ...
    def account_securify(self, address: Address) -> ManifestBuilder: ...
    def account_set_default_deposit_rule(
        self, address: Address, default_deposit_rule: AccountDefaultDepositRule
    ) -> ManifestBuilder: ...
    def account_set_resource_preference(
        self,
        address: Address,
        resource_address: Address,
        resource_preference: ResourcePreference,
    ) -> ManifestBuilder: ...
    def account_try_deposit_batch_or_abort(
        self,
        address: Address,
        buckets: typing.List[ManifestBuilderBucket],
        authorized_depositor_badge: typing.Optional[ResourceOrNonFungible],
    ) -> ManifestBuilder: ...
    def account_try_deposit_batch_or_refund(
        self,
        address: Address,
        buckets: typing.List[ManifestBuilderBucket],
        authorized_depositor_badge: typing.Optional[ResourceOrNonFungible],
    ) -> ManifestBuilder: ...
    def account_try_deposit_entire_worktop_or_abort(
        self,
        account_address: Address,
        authorized_depositor_badge: typing.Optional[ResourceOrNonFungible],
    ) -> ManifestBuilder: ...
    def account_try_deposit_entire_worktop_or_refund(
        self,
        account_address: Address,
        authorized_depositor_badge: typing.Optional[ResourceOrNonFungible],
    ) -> ManifestBuilder: ...
    def account_try_deposit_or_abort(
        self,
        address: Address,
        bucket: ManifestBuilderBucket,
        authorized_depositor_badge: typing.Optional[ResourceOrNonFungible],
    ) -> ManifestBuilder: ...
    def account_try_deposit_or_refund(
        self,
        address: Address,
        bucket: ManifestBuilderBucket,
        authorized_depositor_badge: typing.Optional[ResourceOrNonFungible],
    ) -> ManifestBuilder: ...
    def account_withdraw(
        self, address: Address, resource_address: Address, amount: Decimal
    ) -> ManifestBuilder: ...
    def account_withdraw_non_fungibles(
        self,
        address: Address,
        resource_address: Address,
        ids: typing.List[NonFungibleLocalId],
    ) -> ManifestBuilder: ...
    def allocate_global_address(
        self,
        package_address: Address,
        blueprint_name: str,
        into_address_reservation: ManifestBuilderAddressReservation,
        into_named_address: ManifestBuilderNamedAddress,
    ) -> ManifestBuilder: ...
    def assert_worktop_contains(
        self, resource_address: Address, amount: Decimal
    ) -> ManifestBuilder: ...
    def assert_worktop_contains_any(
        self, resource_address: Address
    ) -> ManifestBuilder: ...
    def assert_worktop_contains_non_fungibles(
        self, resource_address: Address, ids: typing.List[NonFungibleLocalId]
    ) -> ManifestBuilder: ...
    def build(self, network_id: int) -> TransactionManifest: ...
    def burn_resource(self, bucket: ManifestBuilderBucket) -> ManifestBuilder: ...
    def call_access_rules_method(
        self,
        address: ManifestBuilderAddress,
        method_name: str,
        args: typing.List[ManifestBuilderValue],
    ) -> ManifestBuilder: ...
    def call_direct_vault_method(
        self,
        address: Address,
        method_name: str,
        args: typing.List[ManifestBuilderValue],
    ) -> ManifestBuilder: ...
    def call_function(
        self,
        address: ManifestBuilderAddress,
        blueprint_name: str,
        function_name: str,
        args: typing.List[ManifestBuilderValue],
    ) -> ManifestBuilder: ...
    def call_metadata_method(
        self,
        address: ManifestBuilderAddress,
        method_name: str,
        args: typing.List[ManifestBuilderValue],
    ) -> ManifestBuilder: ...
    def call_method(
        self,
        address: ManifestBuilderAddress,
        method_name: str,
        args: typing.List[ManifestBuilderValue],
    ) -> ManifestBuilder: ...
    def call_royalty_method(
        self,
        address: ManifestBuilderAddress,
        method_name: str,
        args: typing.List[ManifestBuilderValue],
    ) -> ManifestBuilder: ...
    def clone_proof(
        self, proof: ManifestBuilderProof, into_proof: ManifestBuilderProof
    ) -> ManifestBuilder: ...
    def create_fungible_resource_manager(
        self,
        owner_role: OwnerRole,
        track_total_supply: bool,
        divisibility: int,
        initial_supply: typing.Optional[Decimal],
        resource_roles: FungibleResourceRoles,
        metadata: MetadataModuleConfig,
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def create_proof_from_auth_zone_of_all(
        self, resource_address: Address, into_proof: ManifestBuilderProof
    ) -> ManifestBuilder: ...
    def create_proof_from_auth_zone_of_amount(
        self,
        resource_address: Address,
        amount: Decimal,
        into_proof: ManifestBuilderProof,
    ) -> ManifestBuilder: ...
    def create_proof_from_auth_zone_of_non_fungibles(
        self,
        resource_address: Address,
        ids: typing.List[NonFungibleLocalId],
        into_proof: ManifestBuilderProof,
    ) -> ManifestBuilder: ...
    def create_proof_from_bucket_of_all(
        self, bucket: ManifestBuilderBucket, into_proof: ManifestBuilderProof
    ) -> ManifestBuilder: ...
    def create_proof_from_bucket_of_amount(
        self,
        amount: Decimal,
        bucket: ManifestBuilderBucket,
        into_proof: ManifestBuilderProof,
    ) -> ManifestBuilder: ...
    def create_proof_from_bucket_of_non_fungibles(
        self,
        ids: typing.List[NonFungibleLocalId],
        bucket: ManifestBuilderBucket,
        into_proof: ManifestBuilderProof,
    ) -> ManifestBuilder: ...
    def drop_all_proofs(self) -> ManifestBuilder: ...
    def drop_auth_zone_proofs(self) -> ManifestBuilder: ...
    def drop_auth_zone_signature_proofs(self) -> ManifestBuilder: ...
    def drop_proof(self, proof: ManifestBuilderProof) -> ManifestBuilder: ...
    def faucet_free_xrd(self) -> ManifestBuilder: ...
    def faucet_lock_fee(self) -> ManifestBuilder: ...
    def identity_create(self) -> ManifestBuilder: ...
    def identity_create_advanced(self, owner_role: OwnerRole) -> ManifestBuilder: ...
    def identity_securify(self, address: Address) -> ManifestBuilder: ...
    def metadata_get(self, address: Address, key: str) -> ManifestBuilder: ...
    def metadata_lock(self, address: Address, key: str) -> ManifestBuilder: ...
    def metadata_remove(self, address: Address, key: str) -> ManifestBuilder: ...
    def metadata_set(
        self, address: Address, key: str, value: MetadataValue
    ) -> ManifestBuilder: ...
    def mint_fungible(
        self, resource_address: Address, amount: Decimal
    ) -> ManifestBuilder: ...
    def multi_resource_pool_contribute(
        self, address: Address, buckets: typing.List[ManifestBuilderBucket]
    ) -> ManifestBuilder: ...
    def multi_resource_pool_get_redemption_value(
        self, address: Address, amount_of_pool_units: Decimal
    ) -> ManifestBuilder: ...
    def multi_resource_pool_get_vault_amount(
        self, address: Address
    ) -> ManifestBuilder: ...
    def multi_resource_pool_instantiate(
        self,
        owner_role: OwnerRole,
        pool_manager_rule: AccessRule,
        resource_addresses: typing.List[Address],
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def multi_resource_pool_protected_deposit(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def multi_resource_pool_protected_withdraw(
        self,
        address: Address,
        resource_address: Address,
        amount: Decimal,
        withdraw_strategy: WithdrawStrategy,
    ) -> ManifestBuilder: ...
    def multi_resource_pool_redeem(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def one_resource_pool_contribute(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def one_resource_pool_get_redemption_value(
        self, address: Address, amount_of_pool_units: Decimal
    ) -> ManifestBuilder: ...
    def one_resource_pool_get_vault_amount(
        self, address: Address
    ) -> ManifestBuilder: ...
    def one_resource_pool_instantiate(
        self,
        owner_role: OwnerRole,
        pool_manager_rule: AccessRule,
        resource_address: Address,
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def one_resource_pool_protected_deposit(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def one_resource_pool_protected_withdraw(
        self, address: Address, amount: Decimal, withdraw_strategy: WithdrawStrategy
    ) -> ManifestBuilder: ...
    def one_resource_pool_redeem(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def package_claim_royalty(self, address: Address) -> ManifestBuilder: ...
    def package_publish(
        self, code: bytes, definition: bytes, metadata: dict
    ) -> ManifestBuilder: ...
    def package_publish_advanced(
        self,
        owner_role: OwnerRole,
        code: bytes,
        definition: bytes,
        metadata: dict,
        package_address: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def pop_from_auth_zone(
        self, into_proof: ManifestBuilderProof
    ) -> ManifestBuilder: ...
    def push_to_auth_zone(self, proof: ManifestBuilderProof) -> ManifestBuilder: ...
    def return_to_worktop(self, bucket: ManifestBuilderBucket) -> ManifestBuilder: ...
    def role_assignment_get(
        self, address: Address, module: ModuleId, role_key: str
    ) -> ManifestBuilder: ...
    def role_assignment_lock_owner(self, address: Address) -> ManifestBuilder: ...
    def role_assignment_set(
        self, address: Address, module: ModuleId, role_key: str, rule: AccessRule
    ) -> ManifestBuilder: ...
    def role_assignment_set_owner(
        self, address: Address, rule: AccessRule
    ) -> ManifestBuilder: ...
    def royalty_claim(self, address: Address) -> ManifestBuilder: ...
    def royalty_lock(self, address: Address, method: str) -> ManifestBuilder: ...
    def royalty_set(
        self, address: Address, method: str, amount: RoyaltyAmount
    ) -> ManifestBuilder: ...
    def take_all_from_worktop(
        self, resource_address: Address, into_bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def take_from_worktop(
        self,
        resource_address: Address,
        amount: Decimal,
        into_bucket: ManifestBuilderBucket,
    ) -> ManifestBuilder: ...
    def take_non_fungibles_from_worktop(
        self,
        resource_address: Address,
        ids: typing.List[NonFungibleLocalId],
        into_bucket: ManifestBuilderBucket,
    ) -> ManifestBuilder: ...
    def two_resource_pool_contribute(
        self, address: Address, buckets: typing.List[ManifestBuilderBucket]
    ) -> ManifestBuilder: ...
    def two_resource_pool_get_redemption_value(
        self, address: Address, amount_of_pool_units: Decimal
    ) -> ManifestBuilder: ...
    def two_resource_pool_get_vault_amount(
        self, address: Address
    ) -> ManifestBuilder: ...
    def two_resource_pool_instantiate(
        self,
        owner_role: OwnerRole,
        pool_manager_rule: AccessRule,
        resource_addresses: typing.List[Address],
        address_reservation: typing.Optional[ManifestBuilderAddressReservation],
    ) -> ManifestBuilder: ...
    def two_resource_pool_protected_deposit(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def two_resource_pool_protected_withdraw(
        self,
        address: Address,
        resource_address: Address,
        amount: Decimal,
        withdraw_strategy: WithdrawStrategy,
    ) -> ManifestBuilder: ...
    def two_resource_pool_redeem(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def validator_accepts_delegated_stake(
        self, address: Address
    ) -> ManifestBuilder: ...
    def validator_claim_xrd(
        self, address: Address, bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def validator_finish_unlock_owner_stake_units(
        self, address: Address
    ) -> ManifestBuilder: ...
    def validator_get_protocol_update_readiness(
        self, address: Address
    ) -> ManifestBuilder: ...
    def validator_get_redemption_value(
        self, address: Address, amount_of_stake_units: Decimal
    ) -> ManifestBuilder: ...
    def validator_lock_owner_stake_units(
        self, address: Address, stake_unit_bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def validator_register(self, address: Address) -> ManifestBuilder: ...
    def validator_signal_protocol_update_readiness(
        self, address: Address, vote: str
    ) -> ManifestBuilder: ...
    def validator_stake(
        self, address: Address, stake: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def validator_stake_as_owner(
        self, address: Address, stake: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def validator_start_unlock_owner_stake_units(
        self, address: Address, requested_stake_unit_amount: Decimal
    ) -> ManifestBuilder: ...
    def validator_total_stake_unit_supply(
        self, address: Address
    ) -> ManifestBuilder: ...
    def validator_total_stake_xrd_amount(self, address: Address) -> ManifestBuilder: ...
    def validator_unregister(self, address: Address) -> ManifestBuilder: ...
    def validator_unstake(
        self, address: Address, stake_unit_bucket: ManifestBuilderBucket
    ) -> ManifestBuilder: ...
    def validator_update_accept_delegated_stake(
        self, address: Address, accept_delegated_stake: bool
    ) -> ManifestBuilder: ...
    def validator_update_fee(
        self, address: Address, new_fee_factor: Decimal
    ) -> ManifestBuilder: ...
    def validator_update_key(
        self, address: Address, key: PublicKey
    ) -> ManifestBuilder: ...

class _UniffiConverterTypeManifestBuilder:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class MessageValidationConfig:
    def __init__(
        self,
        max_plaintext_message_length: int,
        max_encrypted_message_length: int,
        max_mime_type_length: int,
        max_decryptors: int,
    ) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def default(cls): ...
    def max_decryptors(self) -> int: ...
    def max_encrypted_message_length(self) -> int: ...
    def max_mime_type_length(self) -> int: ...
    def max_plaintext_message_length(self) -> int: ...

class _UniffiConverterTypeMessageValidationConfig:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class NonFungibleGlobalId:
    def __init__(self, non_fungible_global_id: str) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def from_parts(
        cls, resource_address: Address, non_fungible_local_id: NonFungibleLocalId
    ): ...
    @classmethod
    def global_caller_badge(cls, component_address: Address, network_id: int): ...
    @classmethod
    def package_of_direct_caller_badge(
        cls, package_address: Address, network_id: int
    ): ...
    @classmethod
    def virtual_signature_badge(cls, public_key: PublicKey, network_id: int): ...
    def as_str(self) -> str: ...
    def local_id(self) -> NonFungibleLocalId: ...
    def resource_address(self) -> Address: ...

class _UniffiConverterTypeNonFungibleGlobalId:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class NotarizedTransaction:
    def __init__(
        self, signed_intent: SignedIntent, notary_signature: Signature
    ) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def decompile(cls, compiled_notarized_transaction: bytes): ...
    def compile(self) -> bytes: ...
    def hash(self) -> TransactionHash: ...
    def intent_hash(self) -> TransactionHash: ...
    def notarized_transaction_hash(self) -> TransactionHash: ...
    def notary_signature(self) -> Signature: ...
    def signed_intent(self) -> SignedIntent: ...
    def signed_intent_hash(self) -> TransactionHash: ...
    def statically_validate(self, validation_config: ValidationConfig): ...

class _UniffiConverterTypeNotarizedTransaction:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class OlympiaAddress:
    def __init__(self, address: str) -> None: ...
    def __del__(self) -> None: ...
    def as_str(self) -> str: ...
    def public_key(self) -> PublicKey: ...

class _UniffiConverterTypeOlympiaAddress:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class PreciseDecimal:
    def __init__(self, value: str) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def from_le_bytes(cls, value: bytes): ...
    @classmethod
    def max(cls): ...
    @classmethod
    def min(cls): ...
    @classmethod
    def one(cls): ...
    @classmethod
    def zero(cls): ...
    def abs(self) -> PreciseDecimal: ...
    def add(self, other: PreciseDecimal) -> PreciseDecimal: ...
    def as_str(self) -> str: ...
    def cbrt(self) -> PreciseDecimal: ...
    def ceiling(self) -> PreciseDecimal: ...
    def div(self, other: PreciseDecimal) -> PreciseDecimal: ...
    def equal(self, other: PreciseDecimal) -> bool: ...
    def floor(self) -> PreciseDecimal: ...
    def greater_than(self, other: PreciseDecimal) -> bool: ...
    def greater_than_or_equal(self, other: PreciseDecimal) -> bool: ...
    def is_negative(self) -> bool: ...
    def is_positive(self) -> bool: ...
    def is_zero(self) -> bool: ...
    def less_than(self, other: PreciseDecimal) -> bool: ...
    def less_than_or_equal(self, other: PreciseDecimal) -> bool: ...
    def mantissa(self) -> str: ...
    def mul(self, other: PreciseDecimal) -> PreciseDecimal: ...
    def not_equal(self, other: PreciseDecimal) -> bool: ...
    def nth_root(self, n: int) -> typing.Optional[PreciseDecimal]: ...
    def powi(self, exp: int) -> PreciseDecimal: ...
    def round(
        self, decimal_places: int, rounding_mode: RoundingMode
    ) -> PreciseDecimal: ...
    def sqrt(self) -> typing.Optional[PreciseDecimal]: ...
    def sub(self, other: PreciseDecimal) -> PreciseDecimal: ...
    def to_le_bytes(self) -> bytes: ...

class _UniffiConverterTypePreciseDecimal:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class PrivateKey:
    def __init__(self, bytes: bytes, curve: Curve) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def new_ed25519(cls, bytes: bytes): ...
    @classmethod
    def new_secp256k1(cls, bytes: bytes): ...
    def curve(self) -> Curve: ...
    def public_key(self) -> PublicKey: ...
    def public_key_bytes(self) -> bytes: ...
    def raw(self) -> bytes: ...
    def raw_hex(self) -> str: ...
    def sign(self, hash: Hash) -> bytes: ...
    def sign_to_signature(self, hash: Hash) -> Signature: ...
    def sign_to_signature_with_public_key(
        self, hash: Hash
    ) -> SignatureWithPublicKey: ...

class _UniffiConverterTypePrivateKey:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class SignedIntent:
    def __init__(
        self, intent: Intent, intent_signatures: typing.List[SignatureWithPublicKey]
    ) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def decompile(cls, compiled_signed_intent: bytes): ...
    def compile(self) -> bytes: ...
    def hash(self) -> TransactionHash: ...
    def intent(self) -> Intent: ...
    def intent_hash(self) -> TransactionHash: ...
    def intent_signatures(self) -> typing.List[SignatureWithPublicKey]: ...
    def signed_intent_hash(self) -> TransactionHash: ...
    def statically_validate(self, validation_config: ValidationConfig): ...

class _UniffiConverterTypeSignedIntent:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class TransactionBuilder:
    def __init__(self) -> None: ...
    def __del__(self) -> None: ...
    def header(self, header: TransactionHeader) -> TransactionBuilderHeaderStep: ...

class _UniffiConverterTypeTransactionBuilder:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class TransactionBuilderHeaderStep:
    def __del__(self) -> None: ...
    def manifest(
        self, manifest: TransactionManifest
    ) -> TransactionBuilderMessageStep: ...

class _UniffiConverterTypeTransactionBuilderHeaderStep:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class TransactionBuilderIntentSignaturesStep:
    def __init__(self, message_step: TransactionBuilderMessageStep) -> None: ...
    def __del__(self) -> None: ...
    def notarize_with_private_key(
        self, private_key: PrivateKey
    ) -> NotarizedTransaction: ...
    def notarize_with_signer(self, signer: Signer) -> NotarizedTransaction: ...
    def sign_with_private_key(
        self, private_key: PrivateKey
    ) -> TransactionBuilderIntentSignaturesStep: ...
    def sign_with_signer(
        self, signer: Signer
    ) -> TransactionBuilderIntentSignaturesStep: ...

class _UniffiConverterTypeTransactionBuilderIntentSignaturesStep:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class TransactionBuilderMessageStep:
    def __del__(self) -> None: ...
    def message(self, message: Message) -> TransactionBuilderIntentSignaturesStep: ...
    def sign_with_private_key(
        self, private_key: PrivateKey
    ) -> TransactionBuilderIntentSignaturesStep: ...
    def sign_with_signer(
        self, signer: Signer
    ) -> TransactionBuilderIntentSignaturesStep: ...

class _UniffiConverterTypeTransactionBuilderMessageStep:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class TransactionHash:
    def __del__(self) -> None: ...
    @classmethod
    def from_str(cls, string: str, network_id: int): ...
    def as_hash(self) -> Hash: ...
    def as_str(self) -> str: ...
    def bytes(self) -> bytes: ...
    def network_id(self) -> int: ...

class _UniffiConverterTypeTransactionHash:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class TransactionManifest:
    def __init__(
        self, instructions: Instructions, blobs: typing.List[bytes]
    ) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def decompile(cls, compiled: bytes, network_id: int): ...
    def blobs(self) -> typing.List[bytes]: ...
    def compile(self) -> bytes: ...
    def execution_summary(
        self, network_id: int, toolkit_receipt: str
    ) -> ExecutionSummary: ...
    def extract_addresses(self) -> dict: ...
    def instructions(self) -> Instructions: ...
    def modify(
        self, modifications: TransactionManifestModifications
    ) -> TransactionManifest: ...
    def statically_validate(self) -> None: ...
    def summary(self, network_id: int) -> ManifestSummary: ...

class _UniffiConverterTypeTransactionManifest:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class ValidationConfig:
    def __init__(
        self,
        network_id: int,
        max_notarized_payload_size: int,
        min_tip_percentage: int,
        max_tip_percentage: int,
        max_epoch_range: int,
        message_validation: MessageValidationConfig,
    ) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def default(cls, network_id: int): ...
    def max_epoch_range(self) -> int: ...
    def max_notarized_payload_size(self) -> int: ...
    def max_tip_percentage(self) -> int: ...
    def message_validation(self) -> MessageValidationConfig: ...
    def min_tip_percentage(self) -> int: ...
    def network_id(self) -> int: ...

class _UniffiConverterTypeValidationConfig:
    @classmethod
    def read(cls, buf): ...
    @classmethod
    def write(cls, value, buf) -> None: ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

class AccountAddAuthorizedDepositorEvent:
    authorized_depositor_badge: ResourceOrNonFungible
    def __init__(self, authorized_depositor_badge) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeAccountAddAuthorizedDepositorEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class AccountRemoveAuthorizedDepositorEvent:
    authorized_depositor_badge: ResourceOrNonFungible
    def __init__(self, authorized_depositor_badge) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeAccountRemoveAuthorizedDepositorEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class AccountRemoveResourcePreferenceEvent:
    resource_address: Address
    def __init__(self, resource_address) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeAccountRemoveResourcePreferenceEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class AccountSetDefaultDepositRuleEvent:
    default_deposit_rule: AccountDefaultDepositRule
    def __init__(self, default_deposit_rule) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeAccountSetDefaultDepositRuleEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class AccountSetResourcePreferenceEvent:
    resource_address: Address
    preference: ResourcePreference
    def __init__(self, resource_address, preference) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeAccountSetResourcePreferenceEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class BadgeWithdrawEvent:
    proposer: Proposer
    def __init__(self, proposer) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeBadgeWithdrawEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class BuildInformation:
    version: str
    scrypto_dependency: DependencyInformation
    def __init__(self, version, scrypto_dependency) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeBuildInformation(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class BurnFungibleResourceEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeBurnFungibleResourceEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class BurnNonFungibleResourceEvent:
    ids: typing.List[NonFungibleLocalId]
    def __init__(self, ids) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeBurnNonFungibleResourceEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class CancelBadgeWithdrawAttemptEvent:
    proposer: Proposer
    def __init__(self, proposer) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeCancelBadgeWithdrawAttemptEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class CancelRecoveryProposalEvent:
    proposer: Proposer
    def __init__(self, proposer) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeCancelRecoveryProposalEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ClaimEvent:
    claimant: Address
    resource_address: Address
    resources: ResourceSpecifier
    def __init__(self, claimant, resource_address, resources) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeClaimEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ClaimXrdEvent:
    claimed_xrd: Decimal
    def __init__(self, claimed_xrd) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeClaimXrdEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ComponentAddresses:
    consensus_manager: Address
    genesis_helper: Address
    faucet: Address
    def __init__(self, consensus_manager, genesis_helper, faucet) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeComponentAddresses(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class DepositRecoveryXrdEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeDepositRecoveryXrdEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class Ed25519PublicKey:
    value: bytes
    def __init__(self, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeEd25519PublicKey(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class EncryptedMessage:
    encrypted: bytes
    decryptors_by_curve: dict
    def __init__(self, encrypted, decryptors_by_curve) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeEncryptedMessage(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class EpochChangeEvent:
    epoch: int
    validator_set: dict
    def __init__(self, epoch, validator_set) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeEpochChangeEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class EventTypeIdentifier:
    emitter: Emitter
    event_name: str
    def __init__(self, emitter, event_name) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeEventTypeIdentifier(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ExecutionSummary:
    account_withdraws: dict
    account_deposits: dict
    presented_proofs: dict
    new_entities: NewEntities
    encountered_entities: typing.List[Address]
    accounts_requiring_auth: typing.List[Address]
    identities_requiring_auth: typing.List[Address]
    reserved_instructions: typing.List[ReservedInstruction]
    fee_locks: FeeLocks
    fee_summary: FeeSummary
    detailed_classification: typing.List[DetailedManifestClass]
    newly_created_non_fungibles: typing.List[NonFungibleGlobalId]
    def __init__(
        self,
        account_withdraws,
        account_deposits,
        presented_proofs,
        new_entities,
        encountered_entities,
        accounts_requiring_auth,
        identities_requiring_auth,
        reserved_instructions,
        fee_locks,
        fee_summary,
        detailed_classification,
        newly_created_non_fungibles,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeExecutionSummary(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class FeeLocks:
    lock: Decimal
    contingent_lock: Decimal
    def __init__(self, lock, contingent_lock) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeFeeLocks(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class FeeSummary:
    execution_cost: Decimal
    finalization_cost: Decimal
    storage_expansion_cost: Decimal
    royalty_cost: Decimal
    def __init__(
        self, execution_cost, finalization_cost, storage_expansion_cost, royalty_cost
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeFeeSummary(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class FungibleResourceRoles:
    mint_roles: typing.Optional[ResourceManagerRole]
    burn_roles: typing.Optional[ResourceManagerRole]
    freeze_roles: typing.Optional[ResourceManagerRole]
    recall_roles: typing.Optional[ResourceManagerRole]
    withdraw_roles: typing.Optional[ResourceManagerRole]
    deposit_roles: typing.Optional[ResourceManagerRole]
    def __init__(
        self,
        mint_roles,
        burn_roles,
        freeze_roles,
        recall_roles,
        withdraw_roles,
        deposit_roles,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeFungibleResourceRoles(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class FungibleVaultDepositEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeFungibleVaultDepositEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class FungibleVaultLockFeeEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeFungibleVaultLockFeeEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class FungibleVaultPayFeeEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeFungibleVaultPayFeeEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class FungibleVaultRecallEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeFungibleVaultRecallEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class FungibleVaultWithdrawEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeFungibleVaultWithdrawEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class IndexedAssertion:
    index: int
    assertion: Assertion
    def __init__(self, index, assertion) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeIndexedAssertion(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class InitiateBadgeWithdrawAttemptEvent:
    proposer: Proposer
    def __init__(self, proposer) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeInitiateBadgeWithdrawAttemptEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class InitiateRecoveryEvent:
    proposer: Proposer
    proposal: RecoveryProposal
    def __init__(self, proposer, proposal) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeInitiateRecoveryEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class KnownAddresses:
    resource_addresses: ResourceAddresses
    package_addresses: PackageAddresses
    component_addresses: ComponentAddresses
    def __init__(
        self, resource_addresses, package_addresses, component_addresses
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeKnownAddresses(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class LockFeeModification:
    account_address: Address
    amount: Decimal
    def __init__(self, account_address, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeLockFeeModification(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class LockOwnerRoleEvent:
    placeholder_field: bool
    def __init__(self, placeholder_field) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeLockOwnerRoleEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class LockPrimaryRoleEvent:
    placeholder_field: bool
    def __init__(self, placeholder_field) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeLockPrimaryRoleEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class LockRoleEvent:
    role_key: str
    def __init__(self, role_key) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeLockRoleEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestAddressReservation:
    value: int
    def __init__(self, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestAddressReservation(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestBlobRef:
    value: Hash
    def __init__(self, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestBlobRef(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestBucket:
    value: int
    def __init__(self, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestBucket(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestBuilderAddressReservation:
    name: str
    def __init__(self, name) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestBuilderAddressReservation(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestBuilderBucket:
    name: str
    def __init__(self, name) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestBuilderBucket(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestBuilderMapEntry:
    key: ManifestBuilderValue
    value: ManifestBuilderValue
    def __init__(self, key, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestBuilderMapEntry(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestBuilderNamedAddress:
    name: str
    def __init__(self, name) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestBuilderNamedAddress(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestBuilderProof:
    name: str
    def __init__(self, name) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestBuilderProof(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestProof:
    value: int
    def __init__(self, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestProof(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ManifestSummary:
    presented_proofs: dict
    accounts_withdrawn_from: typing.List[Address]
    accounts_deposited_into: typing.List[Address]
    encountered_entities: typing.List[Address]
    accounts_requiring_auth: typing.List[Address]
    identities_requiring_auth: typing.List[Address]
    reserved_instructions: typing.List[ReservedInstruction]
    classification: typing.List[ManifestClass]
    def __init__(
        self,
        presented_proofs,
        accounts_withdrawn_from,
        accounts_deposited_into,
        encountered_entities,
        accounts_requiring_auth,
        identities_requiring_auth,
        reserved_instructions,
        classification,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeManifestSummary(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MapEntry:
    key: ManifestValue
    value: ManifestValue
    def __init__(self, key, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMapEntry(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MetadataInitEntry:
    value: typing.Optional[MetadataValue]
    lock: bool
    def __init__(self, value, lock) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMetadataInitEntry(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MetadataModuleConfig:
    init: dict
    roles: dict
    def __init__(self, init, roles) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMetadataModuleConfig(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MintFungibleResourceEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMintFungibleResourceEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MintNonFungibleResourceEvent:
    ids: typing.List[NonFungibleLocalId]
    def __init__(self, ids) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMintNonFungibleResourceEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MultiResourcePoolContributionEvent:
    contributed_resources: dict
    pool_units_minted: Decimal
    def __init__(self, contributed_resources, pool_units_minted) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMultiResourcePoolContributionEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MultiResourcePoolDepositEvent:
    resource_address: Address
    amount: Decimal
    def __init__(self, resource_address, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMultiResourcePoolDepositEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MultiResourcePoolRedemptionEvent:
    pool_unit_tokens_redeemed: Decimal
    redeemed_resources: dict
    def __init__(self, pool_unit_tokens_redeemed, redeemed_resources) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMultiResourcePoolRedemptionEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class MultiResourcePoolWithdrawEvent:
    resource_address: Address
    amount: Decimal
    def __init__(self, resource_address, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeMultiResourcePoolWithdrawEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class NewEntities:
    component_addresses: typing.List[Address]
    resource_addresses: typing.List[Address]
    package_addresses: typing.List[Address]
    metadata: dict
    def __init__(
        self, component_addresses, resource_addresses, package_addresses, metadata
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeNewEntities(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class NonFungibleVaultDepositEvent:
    ids: typing.List[NonFungibleLocalId]
    def __init__(self, ids) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeNonFungibleVaultDepositEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class NonFungibleVaultRecallEvent:
    ids: typing.List[NonFungibleLocalId]
    def __init__(self, ids) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeNonFungibleVaultRecallEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class NonFungibleVaultWithdrawEvent:
    ids: typing.List[NonFungibleLocalId]
    def __init__(self, ids) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeNonFungibleVaultWithdrawEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class OneResourcePoolContributionEvent:
    amount_of_resources_contributed: Decimal
    pool_units_minted: Decimal
    def __init__(self, amount_of_resources_contributed, pool_units_minted) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeOneResourcePoolContributionEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class OneResourcePoolDepositEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeOneResourcePoolDepositEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class OneResourcePoolRedemptionEvent:
    pool_unit_tokens_redeemed: Decimal
    redeemed_amount: Decimal
    def __init__(self, pool_unit_tokens_redeemed, redeemed_amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeOneResourcePoolRedemptionEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class OneResourcePoolWithdrawEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeOneResourcePoolWithdrawEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class PackageAddresses:
    package_package: Address
    resource_package: Address
    account_package: Address
    identity_package: Address
    consensus_manager_package: Address
    access_controller_package: Address
    pool_package: Address
    transaction_processor_package: Address
    metadata_module_package: Address
    royalty_module_package: Address
    role_assignment_module_package: Address
    genesis_helper_package: Address
    faucet_package: Address
    def __init__(
        self,
        package_package,
        resource_package,
        account_package,
        identity_package,
        consensus_manager_package,
        access_controller_package,
        pool_package,
        transaction_processor_package,
        metadata_module_package,
        royalty_module_package,
        role_assignment_module_package,
        genesis_helper_package,
        faucet_package,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypePackageAddresses(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class PlainTextMessage:
    mime_type: str
    message: MessageContent
    def __init__(self, mime_type, message) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypePlainTextMessage(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class PredictedDecimal:
    value: Decimal
    instruction_index: int
    def __init__(self, value, instruction_index) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypePredictedDecimal(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class PredictedNonFungibleIds:
    value: typing.List[NonFungibleLocalId]
    instruction_index: int
    def __init__(self, value, instruction_index) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypePredictedNonFungibleIds(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ProtocolUpdateReadinessSignalEvent:
    protocol_version_name: str
    def __init__(self, protocol_version_name) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeProtocolUpdateReadinessSignalEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class PublicKeyFingerprint:
    bytes: HashableBytes
    def __init__(self, bytes) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypePublicKeyFingerprint(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class RecoverEvent:
    claimant: Address
    resource_address: Address
    resources: ResourceSpecifier
    def __init__(self, claimant, resource_address, resources) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeRecoverEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class RecoveryProposal:
    rule_set: RuleSet
    timed_recovery_delay_in_minutes: typing.Optional[int]
    def __init__(self, rule_set, timed_recovery_delay_in_minutes) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeRecoveryProposal(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class RegisterValidatorEvent:
    placeholder_field: bool
    def __init__(self, placeholder_field) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeRegisterValidatorEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class RemoveMetadataEvent:
    key: str
    def __init__(self, key) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeRemoveMetadataEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ResourceAddresses:
    xrd: Address
    secp256k1_signature_virtual_badge: Address
    ed25519_signature_virtual_badge: Address
    package_of_direct_caller_virtual_badge: Address
    global_caller_virtual_badge: Address
    system_transaction_badge: Address
    package_owner_badge: Address
    validator_owner_badge: Address
    account_owner_badge: Address
    identity_owner_badge: Address
    def __init__(
        self,
        xrd,
        secp256k1_signature_virtual_badge,
        ed25519_signature_virtual_badge,
        package_of_direct_caller_virtual_badge,
        global_caller_virtual_badge,
        system_transaction_badge,
        package_owner_badge,
        validator_owner_badge,
        account_owner_badge,
        identity_owner_badge,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeResourceAddresses(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ResourceManagerRole:
    role: typing.Optional[AccessRule]
    role_updater: typing.Optional[AccessRule]
    def __init__(self, role, role_updater) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeResourceManagerRole(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class RoundChangeEvent:
    round: int
    def __init__(self, round) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeRoundChangeEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class RuleSet:
    primary_role: AccessRule
    recovery_role: AccessRule
    confirmation_role: AccessRule
    def __init__(self, primary_role, recovery_role, confirmation_role) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeRuleSet(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class RuleSetUpdateEvent:
    proposer: Proposer
    proposal: RecoveryProposal
    def __init__(self, proposer, proposal) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeRuleSetUpdateEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class Schema:
    local_type_id: LocalTypeId
    schema: bytes
    def __init__(self, local_type_id, schema) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeSchema(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class Secp256k1PublicKey:
    value: bytes
    def __init__(self, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeSecp256k1PublicKey(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class SecurityStructureRole:
    super_admin_factors: typing.List[PublicKey]
    threshold_factors: typing.List[PublicKey]
    threshold: int
    def __init__(self, super_admin_factors, threshold_factors, threshold) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeSecurityStructureRole(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class SetAndLockRoleEvent:
    role_key: str
    rule: AccessRule
    def __init__(self, role_key, rule) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeSetAndLockRoleEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class SetMetadataEvent:
    key: str
    value: MetadataValue
    def __init__(self, key, value) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeSetMetadataEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class SetOwnerRoleEvent:
    rule: AccessRule
    def __init__(self, rule) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeSetOwnerRoleEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class SetRoleEvent:
    role_key: str
    rule: AccessRule
    def __init__(self, role_key, rule) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeSetRoleEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class StakeEvent:
    xrd_staked: Decimal
    def __init__(self, xrd_staked) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeStakeEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class StopTimedRecoveryEvent:
    placeholder_field: bool
    def __init__(self, placeholder_field) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeStopTimedRecoveryEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class StoreEvent:
    claimant: Address
    resource_address: Address
    resources: ResourceSpecifier
    def __init__(self, claimant, resource_address, resources) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeStoreEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TrackedPoolContribution:
    pool_address: Address
    contributed_resources: dict
    pool_units_resource_address: Address
    pool_units_amount: Decimal
    def __init__(
        self,
        pool_address,
        contributed_resources,
        pool_units_resource_address,
        pool_units_amount,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTrackedPoolContribution(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TrackedPoolRedemption:
    pool_address: Address
    pool_units_resource_address: Address
    pool_units_amount: Decimal
    redeemed_resources: dict
    def __init__(
        self,
        pool_address,
        pool_units_resource_address,
        pool_units_amount,
        redeemed_resources,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTrackedPoolRedemption(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TrackedValidatorClaim:
    validator_address: Address
    claim_nft_address: Address
    claim_nft_ids: typing.List[NonFungibleLocalId]
    xrd_amount: Decimal
    def __init__(
        self, validator_address, claim_nft_address, claim_nft_ids, xrd_amount
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTrackedValidatorClaim(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TrackedValidatorStake:
    validator_address: Address
    xrd_amount: Decimal
    liquid_stake_unit_address: Address
    liquid_stake_unit_amount: Decimal
    def __init__(
        self,
        validator_address,
        xrd_amount,
        liquid_stake_unit_address,
        liquid_stake_unit_amount,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTrackedValidatorStake(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TrackedValidatorUnstake:
    validator_address: Address
    liquid_stake_unit_address: Address
    liquid_stake_unit_amount: Decimal
    claim_nft_address: Address
    claim_nft_ids: typing.List[NonFungibleLocalId]
    def __init__(
        self,
        validator_address,
        liquid_stake_unit_address,
        liquid_stake_unit_amount,
        claim_nft_address,
        claim_nft_ids,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTrackedValidatorUnstake(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TransactionHeader:
    network_id: int
    start_epoch_inclusive: int
    end_epoch_exclusive: int
    nonce: int
    notary_public_key: PublicKey
    notary_is_signatory: bool
    tip_percentage: int
    def __init__(
        self,
        network_id,
        start_epoch_inclusive,
        end_epoch_exclusive,
        nonce,
        notary_public_key,
        notary_is_signatory,
        tip_percentage,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTransactionHeader(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TransactionManifestModifications:
    add_access_controller_proofs: typing.List[Address]
    add_lock_fee: typing.Optional[LockFeeModification]
    add_assertions: typing.List[IndexedAssertion]
    def __init__(
        self, add_access_controller_proofs, add_lock_fee, add_assertions
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTransactionManifestModifications(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TwoResourcePoolContributionEvent:
    contributed_resources: dict
    pool_units_minted: Decimal
    def __init__(self, contributed_resources, pool_units_minted) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTwoResourcePoolContributionEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TwoResourcePoolDepositEvent:
    resource_address: Address
    amount: Decimal
    def __init__(self, resource_address, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTwoResourcePoolDepositEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TwoResourcePoolRedemptionEvent:
    pool_unit_tokens_redeemed: Decimal
    redeemed_resources: dict
    def __init__(self, pool_unit_tokens_redeemed, redeemed_resources) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTwoResourcePoolRedemptionEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class TwoResourcePoolWithdrawEvent:
    resource_address: Address
    amount: Decimal
    def __init__(self, resource_address, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeTwoResourcePoolWithdrawEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class UnlockPrimaryRoleEvent:
    placeholder_field: bool
    def __init__(self, placeholder_field) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeUnlockPrimaryRoleEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class UnregisterValidatorEvent:
    placeholder_field: bool
    def __init__(self, placeholder_field) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeUnregisterValidatorEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class UnstakeData:
    name: str
    claim_epoch: int
    claim_amount: Decimal
    def __init__(self, name, claim_epoch, claim_amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeUnstakeData(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class UnstakeDataEntry:
    non_fungible_global_id: NonFungibleGlobalId
    data: UnstakeData
    def __init__(self, non_fungible_global_id, data) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeUnstakeDataEntry(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class UnstakeEvent:
    stake_units: Decimal
    def __init__(self, stake_units) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeUnstakeEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class UpdateAcceptingStakeDelegationStateEvent:
    accepts_delegation: bool
    def __init__(self, accepts_delegation) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeUpdateAcceptingStakeDelegationStateEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ValidatorEmissionAppliedEvent:
    epoch: int
    starting_stake_pool_xrd: Decimal
    stake_pool_added_xrd: Decimal
    total_stake_unit_supply: Decimal
    validator_fee_xrd: Decimal
    proposals_made: int
    proposals_missed: int
    def __init__(
        self,
        epoch,
        starting_stake_pool_xrd,
        stake_pool_added_xrd,
        total_stake_unit_supply,
        validator_fee_xrd,
        proposals_made,
        proposals_missed,
    ) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeValidatorEmissionAppliedEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ValidatorInfo:
    key: Secp256k1PublicKey
    stake: Decimal
    def __init__(self, key, stake) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeValidatorInfo(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class ValidatorRewardAppliedEvent:
    epoch: int
    amount: Decimal
    def __init__(self, epoch, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeValidatorRewardAppliedEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class VaultCreationEvent:
    vault_id: Address
    def __init__(self, vault_id) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeVaultCreationEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class WithdrawRecoveryXrdEvent:
    amount: Decimal
    def __init__(self, amount) -> None: ...
    def __eq__(self, other): ...

class _UniffiConverterTypeWithdrawRecoveryXrdEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class AccountDefaultDepositRule(enum.Enum):
    ACCEPT: int
    REJECT: int
    ALLOW_EXISTING: int

class _UniffiConverterTypeAccountDefaultDepositRule(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class AccountDepositEvent:
    def __init__(self) -> None: ...

    class FUNGIBLE:
        resource_address: Address
        amount: Decimal
        def __init__(self, resource_address, amount) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE:
        resource_address: Address
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, resource_address, ids) -> None: ...
        def __eq__(self, other): ...

    def is_fungible(self) -> bool: ...
    def is_non_fungible(self) -> bool: ...

class _UniffiConverterTypeAccountDepositEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class AccountRejectedDepositEvent:
    def __init__(self) -> None: ...

    class FUNGIBLE:
        resource_address: Address
        amount: Decimal
        def __init__(self, resource_address, amount) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE:
        resource_address: Address
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, resource_address, ids) -> None: ...
        def __eq__(self, other): ...

    def is_fungible(self) -> bool: ...
    def is_non_fungible(self) -> bool: ...

class _UniffiConverterTypeAccountRejectedDepositEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class AccountWithdrawEvent:
    def __init__(self) -> None: ...

    class FUNGIBLE:
        resource_address: Address
        amount: Decimal
        def __init__(self, resource_address, amount) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE:
        resource_address: Address
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, resource_address, ids) -> None: ...
        def __eq__(self, other): ...

    def is_fungible(self) -> bool: ...
    def is_non_fungible(self) -> bool: ...

class _UniffiConverterTypeAccountWithdrawEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Assertion:
    def __init__(self) -> None: ...

    class AMOUNT:
        resource_address: Address
        amount: Decimal
        def __init__(self, resource_address, amount) -> None: ...
        def __eq__(self, other): ...

    class IDS:
        resource_address: Address
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, resource_address, ids) -> None: ...
        def __eq__(self, other): ...

    def is_amount(self) -> bool: ...
    def is_ids(self) -> bool: ...

class _UniffiConverterTypeAssertion(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Curve(enum.Enum):
    SECP256K1: int
    ED25519: int

class _UniffiConverterTypeCurve(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class CurveType(enum.Enum):
    ED25519: int
    SECP256K1: int

class _UniffiConverterTypeCurveType(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class DecryptorsByCurve:
    def __init__(self) -> None: ...

    class ED25519:
        dh_ephemeral_public_key: Ed25519PublicKey
        decryptors: dict
        def __init__(self, dh_ephemeral_public_key, decryptors) -> None: ...
        def __eq__(self, other): ...

    class SECP256K1:
        dh_ephemeral_public_key: Secp256k1PublicKey
        decryptors: dict
        def __init__(self, dh_ephemeral_public_key, decryptors) -> None: ...
        def __eq__(self, other): ...

    def is_ed25519(self) -> bool: ...
    def is_secp256k1(self) -> bool: ...

class _UniffiConverterTypeDecryptorsByCurve(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class DependencyInformation:
    def __init__(self) -> None: ...

    class VERSION:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class TAG:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BRANCH:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class REV:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_version(self) -> bool: ...
    def is_tag(self) -> bool: ...
    def is_branch(self) -> bool: ...
    def is_rev(self) -> bool: ...

class _UniffiConverterTypeDependencyInformation(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class DepositResourceEvent:
    def __init__(self) -> None: ...

    class AMOUNT:
        value: Decimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class IDS:
        value: typing.List[NonFungibleLocalId]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_amount(self) -> bool: ...
    def is_ids(self) -> bool: ...

class _UniffiConverterTypeDepositResourceEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class DetailedManifestClass:
    def __init__(self) -> None: ...

    class GENERAL:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class TRANSFER:
        is_one_to_one: bool
        def __init__(self, is_one_to_one) -> None: ...
        def __eq__(self, other): ...

    class POOL_CONTRIBUTION:
        pool_addresses: typing.List[Address]
        pool_contributions: typing.List[TrackedPoolContribution]
        def __init__(self, pool_addresses, pool_contributions) -> None: ...
        def __eq__(self, other): ...

    class POOL_REDEMPTION:
        pool_addresses: typing.List[Address]
        pool_redemptions: typing.List[TrackedPoolRedemption]
        def __init__(self, pool_addresses, pool_redemptions) -> None: ...
        def __eq__(self, other): ...

    class VALIDATOR_STAKE:
        validator_addresses: typing.List[Address]
        validator_stakes: typing.List[TrackedValidatorStake]
        def __init__(self, validator_addresses, validator_stakes) -> None: ...
        def __eq__(self, other): ...

    class VALIDATOR_UNSTAKE:
        validator_addresses: typing.List[Address]
        validator_unstakes: typing.List[TrackedValidatorUnstake]
        claims_non_fungible_data: typing.List[UnstakeDataEntry]
        def __init__(
            self, validator_addresses, validator_unstakes, claims_non_fungible_data
        ) -> None: ...
        def __eq__(self, other): ...

    class VALIDATOR_CLAIM:
        validator_addresses: typing.List[Address]
        validator_claims: typing.List[TrackedValidatorClaim]
        def __init__(self, validator_addresses, validator_claims) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT_DEPOSIT_SETTINGS_UPDATE:
        resource_preferences_updates: dict
        deposit_mode_updates: dict
        authorized_depositors_added: dict
        authorized_depositors_removed: dict
        def __init__(
            self,
            resource_preferences_updates,
            deposit_mode_updates,
            authorized_depositors_added,
            authorized_depositors_removed,
        ) -> None: ...
        def __eq__(self, other): ...

    def is_general(self) -> bool: ...
    def is_transfer(self) -> bool: ...
    def is_pool_contribution(self) -> bool: ...
    def is_pool_redemption(self) -> bool: ...
    def is_validator_stake(self) -> bool: ...
    def is_validator_unstake(self) -> bool: ...
    def is_validator_claim(self) -> bool: ...
    def is_account_deposit_settings_update(self) -> bool: ...

class _UniffiConverterTypeDetailedManifestClass(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Emitter:
    def __init__(self) -> None: ...

    class FUNCTION:
        address: Address
        blueprint_name: str
        def __init__(self, address, blueprint_name) -> None: ...
        def __eq__(self, other): ...

    class METHOD:
        address: Address
        object_module_id: ModuleId
        def __init__(self, address, object_module_id) -> None: ...
        def __eq__(self, other): ...

    def is_function(self) -> bool: ...
    def is_method(self) -> bool: ...

class _UniffiConverterTypeEmitter(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class EntityType(enum.Enum):
    GLOBAL_PACKAGE: int
    GLOBAL_FUNGIBLE_RESOURCE_MANAGER: int
    GLOBAL_NON_FUNGIBLE_RESOURCE_MANAGER: int
    GLOBAL_CONSENSUS_MANAGER: int
    GLOBAL_VALIDATOR: int
    GLOBAL_ACCESS_CONTROLLER: int
    GLOBAL_ACCOUNT: int
    GLOBAL_IDENTITY: int
    GLOBAL_GENERIC_COMPONENT: int
    GLOBAL_VIRTUAL_SECP256K1_ACCOUNT: int
    GLOBAL_VIRTUAL_ED25519_ACCOUNT: int
    GLOBAL_VIRTUAL_SECP256K1_IDENTITY: int
    GLOBAL_VIRTUAL_ED25519_IDENTITY: int
    GLOBAL_ONE_RESOURCE_POOL: int
    GLOBAL_TWO_RESOURCE_POOL: int
    GLOBAL_MULTI_RESOURCE_POOL: int
    GLOBAL_ACCOUNT_LOCKER: int
    GLOBAL_TRANSACTION_TRACKER: int
    INTERNAL_FUNGIBLE_VAULT: int
    INTERNAL_NON_FUNGIBLE_VAULT: int
    INTERNAL_GENERIC_COMPONENT: int
    INTERNAL_KEY_VALUE_STORE: int

class _UniffiConverterTypeEntityType(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class FungibleResourceIndicator:
    def __init__(self) -> None: ...

    class GUARANTEED:
        amount: Decimal
        def __init__(self, amount) -> None: ...
        def __eq__(self, other): ...

    class PREDICTED:
        predicted_amount: PredictedDecimal
        def __init__(self, predicted_amount) -> None: ...
        def __eq__(self, other): ...

    def is_guaranteed(self) -> bool: ...
    def is_predicted(self) -> bool: ...

class _UniffiConverterTypeFungibleResourceIndicator(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Instruction:
    def __init__(self) -> None: ...

    class TAKE_ALL_FROM_WORKTOP:
        resource_address: Address
        def __init__(self, resource_address) -> None: ...
        def __eq__(self, other): ...

    class TAKE_FROM_WORKTOP:
        resource_address: Address
        amount: Decimal
        def __init__(self, resource_address, amount) -> None: ...
        def __eq__(self, other): ...

    class TAKE_NON_FUNGIBLES_FROM_WORKTOP:
        resource_address: Address
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, resource_address, ids) -> None: ...
        def __eq__(self, other): ...

    class RETURN_TO_WORKTOP:
        bucket_id: ManifestBucket
        def __init__(self, bucket_id) -> None: ...
        def __eq__(self, other): ...

    class ASSERT_WORKTOP_CONTAINS:
        resource_address: Address
        amount: Decimal
        def __init__(self, resource_address, amount) -> None: ...
        def __eq__(self, other): ...

    class ASSERT_WORKTOP_CONTAINS_ANY:
        resource_address: Address
        def __init__(self, resource_address) -> None: ...
        def __eq__(self, other): ...

    class ASSERT_WORKTOP_CONTAINS_NON_FUNGIBLES:
        resource_address: Address
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, resource_address, ids) -> None: ...
        def __eq__(self, other): ...

    class POP_FROM_AUTH_ZONE:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class PUSH_TO_AUTH_ZONE:
        proof_id: ManifestProof
        def __init__(self, proof_id) -> None: ...
        def __eq__(self, other): ...

    class CREATE_PROOF_FROM_AUTH_ZONE_OF_AMOUNT:
        resource_address: Address
        amount: Decimal
        def __init__(self, resource_address, amount) -> None: ...
        def __eq__(self, other): ...

    class CREATE_PROOF_FROM_AUTH_ZONE_OF_NON_FUNGIBLES:
        resource_address: Address
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, resource_address, ids) -> None: ...
        def __eq__(self, other): ...

    class CREATE_PROOF_FROM_AUTH_ZONE_OF_ALL:
        resource_address: Address
        def __init__(self, resource_address) -> None: ...
        def __eq__(self, other): ...

    class DROP_ALL_PROOFS:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class DROP_NAMED_PROOFS:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class DROP_AUTH_ZONE_PROOFS:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class DROP_AUTH_ZONE_REGULAR_PROOFS:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class DROP_AUTH_ZONE_SIGNATURE_PROOFS:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class CREATE_PROOF_FROM_BUCKET_OF_AMOUNT:
        bucket_id: ManifestBucket
        amount: Decimal
        def __init__(self, bucket_id, amount) -> None: ...
        def __eq__(self, other): ...

    class CREATE_PROOF_FROM_BUCKET_OF_NON_FUNGIBLES:
        bucket_id: ManifestBucket
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, bucket_id, ids) -> None: ...
        def __eq__(self, other): ...

    class CREATE_PROOF_FROM_BUCKET_OF_ALL:
        bucket_id: ManifestBucket
        def __init__(self, bucket_id) -> None: ...
        def __eq__(self, other): ...

    class BURN_RESOURCE:
        bucket_id: ManifestBucket
        def __init__(self, bucket_id) -> None: ...
        def __eq__(self, other): ...

    class CLONE_PROOF:
        proof_id: ManifestProof
        def __init__(self, proof_id) -> None: ...
        def __eq__(self, other): ...

    class DROP_PROOF:
        proof_id: ManifestProof
        def __init__(self, proof_id) -> None: ...
        def __eq__(self, other): ...

    class CALL_FUNCTION:
        package_address: ManifestAddress
        blueprint_name: str
        function_name: str
        args: ManifestValue
        def __init__(
            self, package_address, blueprint_name, function_name, args
        ) -> None: ...
        def __eq__(self, other): ...

    class CALL_METHOD:
        address: ManifestAddress
        method_name: str
        args: ManifestValue
        def __init__(self, address, method_name, args) -> None: ...
        def __eq__(self, other): ...

    class CALL_ROYALTY_METHOD:
        address: ManifestAddress
        method_name: str
        args: ManifestValue
        def __init__(self, address, method_name, args) -> None: ...
        def __eq__(self, other): ...

    class CALL_METADATA_METHOD:
        address: ManifestAddress
        method_name: str
        args: ManifestValue
        def __init__(self, address, method_name, args) -> None: ...
        def __eq__(self, other): ...

    class CALL_ROLE_ASSIGNMENT_METHOD:
        address: ManifestAddress
        method_name: str
        args: ManifestValue
        def __init__(self, address, method_name, args) -> None: ...
        def __eq__(self, other): ...

    class CALL_DIRECT_VAULT_METHOD:
        address: Address
        method_name: str
        args: ManifestValue
        def __init__(self, address, method_name, args) -> None: ...
        def __eq__(self, other): ...

    class ALLOCATE_GLOBAL_ADDRESS:
        package_address: Address
        blueprint_name: str
        def __init__(self, package_address, blueprint_name) -> None: ...
        def __eq__(self, other): ...

    def is_take_all_from_worktop(self) -> bool: ...
    def is_take_from_worktop(self) -> bool: ...
    def is_take_non_fungibles_from_worktop(self) -> bool: ...
    def is_return_to_worktop(self) -> bool: ...
    def is_assert_worktop_contains(self) -> bool: ...
    def is_assert_worktop_contains_any(self) -> bool: ...
    def is_assert_worktop_contains_non_fungibles(self) -> bool: ...
    def is_pop_from_auth_zone(self) -> bool: ...
    def is_push_to_auth_zone(self) -> bool: ...
    def is_create_proof_from_auth_zone_of_amount(self) -> bool: ...
    def is_create_proof_from_auth_zone_of_non_fungibles(self) -> bool: ...
    def is_create_proof_from_auth_zone_of_all(self) -> bool: ...
    def is_drop_all_proofs(self) -> bool: ...
    def is_drop_named_proofs(self) -> bool: ...
    def is_drop_auth_zone_proofs(self) -> bool: ...
    def is_drop_auth_zone_regular_proofs(self) -> bool: ...
    def is_drop_auth_zone_signature_proofs(self) -> bool: ...
    def is_create_proof_from_bucket_of_amount(self) -> bool: ...
    def is_create_proof_from_bucket_of_non_fungibles(self) -> bool: ...
    def is_create_proof_from_bucket_of_all(self) -> bool: ...
    def is_burn_resource(self) -> bool: ...
    def is_clone_proof(self) -> bool: ...
    def is_drop_proof(self) -> bool: ...
    def is_call_function(self) -> bool: ...
    def is_call_method(self) -> bool: ...
    def is_call_royalty_method(self) -> bool: ...
    def is_call_metadata_method(self) -> bool: ...
    def is_call_role_assignment_method(self) -> bool: ...
    def is_call_direct_vault_method(self) -> bool: ...
    def is_allocate_global_address(self) -> bool: ...

class _UniffiConverterTypeInstruction(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class LocalTypeId:
    def __init__(self) -> None: ...

    class WELL_KNOWN:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class SCHEMA_LOCAL_INDEX:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_well_known(self) -> bool: ...
    def is_schema_local_index(self) -> bool: ...

class _UniffiConverterTypeLocalTypeId(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestAddress:
    def __init__(self) -> None: ...

    class NAMED:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class STATIC:
        value: Address
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_named(self) -> bool: ...
    def is_static(self) -> bool: ...

class _UniffiConverterTypeManifestAddress(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestBuilderAddress:
    def __init__(self) -> None: ...

    class NAMED:
        value: ManifestBuilderNamedAddress
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class STATIC:
        value: Address
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_named(self) -> bool: ...
    def is_static(self) -> bool: ...

class _UniffiConverterTypeManifestBuilderAddress(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestBuilderValue:
    def __init__(self) -> None: ...

    class BOOL_VALUE:
        value: bool
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I8_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I16_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I32_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I64_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I128_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U8_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U16_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U32_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U64_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U128_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class STRING_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ENUM_VALUE:
        discriminator: int
        fields: typing.List[ManifestBuilderValue]
        def __init__(self, discriminator, fields) -> None: ...
        def __eq__(self, other): ...

    class ARRAY_VALUE:
        element_value_kind: ManifestBuilderValueKind
        elements: typing.List[ManifestBuilderValue]
        def __init__(self, element_value_kind, elements) -> None: ...
        def __eq__(self, other): ...

    class TUPLE_VALUE:
        fields: typing.List[ManifestBuilderValue]
        def __init__(self, fields) -> None: ...
        def __eq__(self, other): ...

    class MAP_VALUE:
        key_value_kind: ManifestBuilderValueKind
        value_value_kind: ManifestBuilderValueKind
        entries: typing.List[ManifestBuilderMapEntry]
        def __init__(self, key_value_kind, value_value_kind, entries) -> None: ...
        def __eq__(self, other): ...

    class ADDRESS_VALUE:
        value: ManifestBuilderAddress
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BUCKET_VALUE:
        value: ManifestBuilderBucket
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PROOF_VALUE:
        value: ManifestBuilderProof
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class EXPRESSION_VALUE:
        value: ManifestExpression
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BLOB_VALUE:
        value: ManifestBlobRef
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class DECIMAL_VALUE:
        value: Decimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PRECISE_DECIMAL_VALUE:
        value: PreciseDecimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_LOCAL_ID_VALUE:
        value: NonFungibleLocalId
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ADDRESS_RESERVATION_VALUE:
        value: ManifestBuilderAddressReservation
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_bool_value(self) -> bool: ...
    def is_i8_value(self) -> bool: ...
    def is_i16_value(self) -> bool: ...
    def is_i32_value(self) -> bool: ...
    def is_i64_value(self) -> bool: ...
    def is_i128_value(self) -> bool: ...
    def is_u8_value(self) -> bool: ...
    def is_u16_value(self) -> bool: ...
    def is_u32_value(self) -> bool: ...
    def is_u64_value(self) -> bool: ...
    def is_u128_value(self) -> bool: ...
    def is_string_value(self) -> bool: ...
    def is_enum_value(self) -> bool: ...
    def is_array_value(self) -> bool: ...
    def is_tuple_value(self) -> bool: ...
    def is_map_value(self) -> bool: ...
    def is_address_value(self) -> bool: ...
    def is_bucket_value(self) -> bool: ...
    def is_proof_value(self) -> bool: ...
    def is_expression_value(self) -> bool: ...
    def is_blob_value(self) -> bool: ...
    def is_decimal_value(self) -> bool: ...
    def is_precise_decimal_value(self) -> bool: ...
    def is_non_fungible_local_id_value(self) -> bool: ...
    def is_address_reservation_value(self) -> bool: ...

class _UniffiConverterTypeManifestBuilderValue(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestBuilderValueKind(enum.Enum):
    BOOL_VALUE: int
    I8_VALUE: int
    I16_VALUE: int
    I32_VALUE: int
    I64_VALUE: int
    I128_VALUE: int
    U8_VALUE: int
    U16_VALUE: int
    U32_VALUE: int
    U64_VALUE: int
    U128_VALUE: int
    STRING_VALUE: int
    ENUM_VALUE: int
    ARRAY_VALUE: int
    TUPLE_VALUE: int
    MAP_VALUE: int
    ADDRESS_VALUE: int
    BUCKET_VALUE: int
    PROOF_VALUE: int
    EXPRESSION_VALUE: int
    BLOB_VALUE: int
    DECIMAL_VALUE: int
    PRECISE_DECIMAL_VALUE: int
    NON_FUNGIBLE_LOCAL_ID_VALUE: int
    ADDRESS_RESERVATION_VALUE: int

class _UniffiConverterTypeManifestBuilderValueKind(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestClass(enum.Enum):
    GENERAL: int
    TRANSFER: int
    POOL_CONTRIBUTION: int
    POOL_REDEMPTION: int
    VALIDATOR_STAKE: int
    VALIDATOR_UNSTAKE: int
    VALIDATOR_CLAIM: int
    ACCOUNT_DEPOSIT_SETTINGS_UPDATE: int

class _UniffiConverterTypeManifestClass(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestExpression(enum.Enum):
    ENTIRE_WORKTOP: int
    ENTIRE_AUTH_ZONE: int

class _UniffiConverterTypeManifestExpression(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestSborStringRepresentation:
    def __init__(self) -> None: ...

    class MANIFEST_STRING:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class JSON:
        value: SerializationMode
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_manifest_string(self) -> bool: ...
    def is_json(self) -> bool: ...

class _UniffiConverterTypeManifestSborStringRepresentation(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestValue:
    def __init__(self) -> None: ...

    class BOOL_VALUE:
        value: bool
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I8_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I16_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I32_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I64_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I128_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U8_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U16_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U32_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U64_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U128_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class STRING_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ENUM_VALUE:
        discriminator: int
        fields: typing.List[ManifestValue]
        def __init__(self, discriminator, fields) -> None: ...
        def __eq__(self, other): ...

    class ARRAY_VALUE:
        element_value_kind: ManifestValueKind
        elements: typing.List[ManifestValue]
        def __init__(self, element_value_kind, elements) -> None: ...
        def __eq__(self, other): ...

    class TUPLE_VALUE:
        fields: typing.List[ManifestValue]
        def __init__(self, fields) -> None: ...
        def __eq__(self, other): ...

    class MAP_VALUE:
        key_value_kind: ManifestValueKind
        value_value_kind: ManifestValueKind
        entries: typing.List[MapEntry]
        def __init__(self, key_value_kind, value_value_kind, entries) -> None: ...
        def __eq__(self, other): ...

    class ADDRESS_VALUE:
        value: ManifestAddress
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BUCKET_VALUE:
        value: ManifestBucket
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PROOF_VALUE:
        value: ManifestProof
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class EXPRESSION_VALUE:
        value: ManifestExpression
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BLOB_VALUE:
        value: ManifestBlobRef
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class DECIMAL_VALUE:
        value: Decimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PRECISE_DECIMAL_VALUE:
        value: PreciseDecimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_LOCAL_ID_VALUE:
        value: NonFungibleLocalId
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ADDRESS_RESERVATION_VALUE:
        value: ManifestAddressReservation
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_bool_value(self) -> bool: ...
    def is_i8_value(self) -> bool: ...
    def is_i16_value(self) -> bool: ...
    def is_i32_value(self) -> bool: ...
    def is_i64_value(self) -> bool: ...
    def is_i128_value(self) -> bool: ...
    def is_u8_value(self) -> bool: ...
    def is_u16_value(self) -> bool: ...
    def is_u32_value(self) -> bool: ...
    def is_u64_value(self) -> bool: ...
    def is_u128_value(self) -> bool: ...
    def is_string_value(self) -> bool: ...
    def is_enum_value(self) -> bool: ...
    def is_array_value(self) -> bool: ...
    def is_tuple_value(self) -> bool: ...
    def is_map_value(self) -> bool: ...
    def is_address_value(self) -> bool: ...
    def is_bucket_value(self) -> bool: ...
    def is_proof_value(self) -> bool: ...
    def is_expression_value(self) -> bool: ...
    def is_blob_value(self) -> bool: ...
    def is_decimal_value(self) -> bool: ...
    def is_precise_decimal_value(self) -> bool: ...
    def is_non_fungible_local_id_value(self) -> bool: ...
    def is_address_reservation_value(self) -> bool: ...

class _UniffiConverterTypeManifestValue(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ManifestValueKind(enum.Enum):
    BOOL_VALUE: int
    I8_VALUE: int
    I16_VALUE: int
    I32_VALUE: int
    I64_VALUE: int
    I128_VALUE: int
    U8_VALUE: int
    U16_VALUE: int
    U32_VALUE: int
    U64_VALUE: int
    U128_VALUE: int
    STRING_VALUE: int
    ENUM_VALUE: int
    ARRAY_VALUE: int
    TUPLE_VALUE: int
    MAP_VALUE: int
    ADDRESS_VALUE: int
    BUCKET_VALUE: int
    PROOF_VALUE: int
    EXPRESSION_VALUE: int
    BLOB_VALUE: int
    DECIMAL_VALUE: int
    PRECISE_DECIMAL_VALUE: int
    NON_FUNGIBLE_LOCAL_ID_VALUE: int
    ADDRESS_RESERVATION_VALUE: int

class _UniffiConverterTypeManifestValueKind(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Message:
    def __init__(self) -> None: ...

    class NONE:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class PLAIN_TEXT:
        value: PlainTextMessage
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ENCRYPTED:
        value: EncryptedMessage
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_none(self) -> bool: ...
    def is_plain_text(self) -> bool: ...
    def is_encrypted(self) -> bool: ...

class _UniffiConverterTypeMessage(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class MessageContent:
    def __init__(self) -> None: ...

    class STR:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BYTES:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_str(self) -> bool: ...
    def is_bytes(self) -> bool: ...

class _UniffiConverterTypeMessageContent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class MetadataValue:
    def __init__(self) -> None: ...

    class STRING_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BOOL_VALUE:
        value: bool
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U8_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U32_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U64_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I32_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I64_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class DECIMAL_VALUE:
        value: Decimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class GLOBAL_ADDRESS_VALUE:
        value: Address
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PUBLIC_KEY_VALUE:
        value: PublicKey
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_GLOBAL_ID_VALUE:
        value: NonFungibleGlobalId
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_LOCAL_ID_VALUE:
        value: NonFungibleLocalId
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class INSTANT_VALUE:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class URL_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ORIGIN_VALUE:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PUBLIC_KEY_HASH_VALUE:
        value: PublicKeyHash
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class STRING_ARRAY_VALUE:
        value: typing.List[str]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BOOL_ARRAY_VALUE:
        value: typing.List[bool]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U8_ARRAY_VALUE:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U32_ARRAY_VALUE:
        value: typing.List[int]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class U64_ARRAY_VALUE:
        value: typing.List[int]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I32_ARRAY_VALUE:
        value: typing.List[int]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class I64_ARRAY_VALUE:
        value: typing.List[int]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class DECIMAL_ARRAY_VALUE:
        value: typing.List[Decimal]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class GLOBAL_ADDRESS_ARRAY_VALUE:
        value: typing.List[Address]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PUBLIC_KEY_ARRAY_VALUE:
        value: typing.List[PublicKey]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_GLOBAL_ID_ARRAY_VALUE:
        value: typing.List[NonFungibleGlobalId]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_LOCAL_ID_ARRAY_VALUE:
        value: typing.List[NonFungibleLocalId]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class INSTANT_ARRAY_VALUE:
        value: typing.List[int]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class URL_ARRAY_VALUE:
        value: typing.List[str]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ORIGIN_ARRAY_VALUE:
        value: typing.List[str]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PUBLIC_KEY_HASH_ARRAY_VALUE:
        value: typing.List[PublicKeyHash]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_string_value(self) -> bool: ...
    def is_bool_value(self) -> bool: ...
    def is_u8_value(self) -> bool: ...
    def is_u32_value(self) -> bool: ...
    def is_u64_value(self) -> bool: ...
    def is_i32_value(self) -> bool: ...
    def is_i64_value(self) -> bool: ...
    def is_decimal_value(self) -> bool: ...
    def is_global_address_value(self) -> bool: ...
    def is_public_key_value(self) -> bool: ...
    def is_non_fungible_global_id_value(self) -> bool: ...
    def is_non_fungible_local_id_value(self) -> bool: ...
    def is_instant_value(self) -> bool: ...
    def is_url_value(self) -> bool: ...
    def is_origin_value(self) -> bool: ...
    def is_public_key_hash_value(self) -> bool: ...
    def is_string_array_value(self) -> bool: ...
    def is_bool_array_value(self) -> bool: ...
    def is_u8_array_value(self) -> bool: ...
    def is_u32_array_value(self) -> bool: ...
    def is_u64_array_value(self) -> bool: ...
    def is_i32_array_value(self) -> bool: ...
    def is_i64_array_value(self) -> bool: ...
    def is_decimal_array_value(self) -> bool: ...
    def is_global_address_array_value(self) -> bool: ...
    def is_public_key_array_value(self) -> bool: ...
    def is_non_fungible_global_id_array_value(self) -> bool: ...
    def is_non_fungible_local_id_array_value(self) -> bool: ...
    def is_instant_array_value(self) -> bool: ...
    def is_url_array_value(self) -> bool: ...
    def is_origin_array_value(self) -> bool: ...
    def is_public_key_hash_array_value(self) -> bool: ...

class _UniffiConverterTypeMetadataValue(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ModuleId(enum.Enum):
    MAIN: int
    METADATA: int
    ROYALTY: int
    ROLE_ASSIGNMENT: int

class _UniffiConverterTypeModuleId(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class NameRecordError:
    def __init__(self) -> None: ...

    class OBJECT_NAME_IS_ALREADY_TAKEN:
        object: str
        name: str
        def __init__(self, object, name) -> None: ...
        def __eq__(self, other): ...

    class OBJECT_DOES_NOT_EXIST:
        object: str
        name: str
        def __init__(self, object, name) -> None: ...
        def __eq__(self, other): ...

    def is_object_name_is_already_taken(self) -> bool: ...
    def is_object_does_not_exist(self) -> bool: ...

class _UniffiConverterTypeNameRecordError(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class NonFungibleLocalId:
    def __init__(self) -> None: ...

    class INTEGER:
        value: int
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class STR:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BYTES:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class RUID:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_integer(self) -> bool: ...
    def is_str(self) -> bool: ...
    def is_bytes(self) -> bool: ...
    def is_ruid(self) -> bool: ...

class _UniffiConverterTypeNonFungibleLocalId(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class NonFungibleResourceIndicator:
    def __init__(self) -> None: ...

    class BY_ALL:
        predicted_amount: PredictedDecimal
        predicted_ids: PredictedNonFungibleIds
        def __init__(self, predicted_amount, predicted_ids) -> None: ...
        def __eq__(self, other): ...

    class BY_AMOUNT:
        amount: Decimal
        predicted_ids: PredictedNonFungibleIds
        def __init__(self, amount, predicted_ids) -> None: ...
        def __eq__(self, other): ...

    class BY_IDS:
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, ids) -> None: ...
        def __eq__(self, other): ...

    def is_by_all(self) -> bool: ...
    def is_by_amount(self) -> bool: ...
    def is_by_ids(self) -> bool: ...

class _UniffiConverterTypeNonFungibleResourceIndicator(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class OlympiaNetwork(enum.Enum):
    MAINNET: int
    STOKENET: int
    RELEASENET: int
    RC_NET: int
    MILESTONENET: int
    DEVOPSNET: int
    SANDPITNET: int
    LOCALNET: int

class _UniffiConverterTypeOlympiaNetwork(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Operation(enum.Enum):
    ADD: int
    REMOVE: int

class _UniffiConverterTypeOperation(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class OwnerRole:
    def __init__(self) -> None: ...

    class NONE:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class FIXED:
        value: AccessRule
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class UPDATABLE:
        value: AccessRule
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_none(self) -> bool: ...
    def is_fixed(self) -> bool: ...
    def is_updatable(self) -> bool: ...

class _UniffiConverterTypeOwnerRole(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Proposer(enum.Enum):
    PRIMARY: int
    RECOVERY: int

class _UniffiConverterTypeProposer(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class PublicKey:
    def __init__(self) -> None: ...

    class SECP256K1:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ED25519:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_secp256k1(self) -> bool: ...
    def is_ed25519(self) -> bool: ...

class _UniffiConverterTypePublicKey(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class PublicKeyHash:
    def __init__(self) -> None: ...

    class SECP256K1:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ED25519:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_secp256k1(self) -> bool: ...
    def is_ed25519(self) -> bool: ...

class _UniffiConverterTypePublicKeyHash(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class RadixEngineToolkitError(Exception): ...

class RadixEngineToolkitError:
    class InvalidLength(_UniffiTempRadixEngineToolkitError):
        expected: Any
        actual: Any
        data: Any
        def __init__(self, expected, actual, data) -> None: ...

    class FailedToExtractNetwork(_UniffiTempRadixEngineToolkitError):
        address: Any
        def __init__(self, address) -> None: ...

    class Bech32DecodeError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class ParseError(_UniffiTempRadixEngineToolkitError):
        type_name: Any
        error: Any
        def __init__(self, type_name, error) -> None: ...

    class NonFungibleContentValidationError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class EntityTypeMismatchError(_UniffiTempRadixEngineToolkitError):
        expected: Any
        actual: Any
        def __init__(self, expected, actual) -> None: ...

    class DerivationError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class InvalidPublicKey(_UniffiTempRadixEngineToolkitError):
        def __init__(self) -> None: ...

    class CompileError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class DecompileError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class PrepareError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class EncodeError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class DecodeError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class TransactionValidationFailed(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class ExecutionModuleError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class ManifestSborError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class ScryptoSborError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class TypedNativeEventError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class FailedToDecodeTransactionHash(_UniffiTempRadixEngineToolkitError):
        def __init__(self) -> None: ...

    class ManifestBuilderNameRecordError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class ManifestModificationError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class InvalidEntityTypeIdError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class DecimalError(_UniffiTempRadixEngineToolkitError):
        def __init__(self) -> None: ...

    class SignerError(_UniffiTempRadixEngineToolkitError):
        error: Any
        def __init__(self, error) -> None: ...

    class InvalidReceipt(_UniffiTempRadixEngineToolkitError):
        def __init__(self) -> None: ...

class _UniffiConverterTypeRadixEngineToolkitError(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    @staticmethod
    def write(value, buf) -> None: ...

class RecallResourceEvent:
    def __init__(self) -> None: ...

    class AMOUNT:
        value: Decimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class IDS:
        value: typing.List[NonFungibleLocalId]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_amount(self) -> bool: ...
    def is_ids(self) -> bool: ...

class _UniffiConverterTypeRecallResourceEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ReservedInstruction(enum.Enum):
    ACCOUNT_LOCK_FEE: int
    ACCOUNT_SECURIFY: int
    IDENTITY_SECURIFY: int
    ACCESS_CONTROLLER_METHOD: int

class _UniffiConverterTypeReservedInstruction(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ResourceIndicator:
    def __init__(self) -> None: ...

    class FUNGIBLE:
        resource_address: Address
        indicator: FungibleResourceIndicator
        def __init__(self, resource_address, indicator) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE:
        resource_address: Address
        indicator: NonFungibleResourceIndicator
        def __init__(self, resource_address, indicator) -> None: ...
        def __eq__(self, other): ...

    def is_fungible(self) -> bool: ...
    def is_non_fungible(self) -> bool: ...

class _UniffiConverterTypeResourceIndicator(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ResourceOrNonFungible:
    def __init__(self) -> None: ...

    class NON_FUNGIBLE:
        value: NonFungibleGlobalId
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class RESOURCE:
        value: Address
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_non_fungible(self) -> bool: ...
    def is_resource(self) -> bool: ...

class _UniffiConverterTypeResourceOrNonFungible(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ResourcePreference(enum.Enum):
    ALLOWED: int
    DISALLOWED: int

class _UniffiConverterTypeResourcePreference(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ResourcePreferenceUpdate:
    def __init__(self) -> None: ...

    class SET:
        value: ResourcePreference
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class REMOVE:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    def is_set(self) -> bool: ...
    def is_remove(self) -> bool: ...

class _UniffiConverterTypeResourcePreferenceUpdate(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ResourceSpecifier:
    def __init__(self) -> None: ...

    class AMOUNT:
        resource_address: Address
        amount: Decimal
        def __init__(self, resource_address, amount) -> None: ...
        def __eq__(self, other): ...

    class IDS:
        resource_address: Address
        ids: typing.List[NonFungibleLocalId]
        def __init__(self, resource_address, ids) -> None: ...
        def __eq__(self, other): ...

    def is_amount(self) -> bool: ...
    def is_ids(self) -> bool: ...

class _UniffiConverterTypeResourceSpecifier(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Role(enum.Enum):
    PRIMARY: int
    RECOVERY: int
    CONFIRMATION: int

class _UniffiConverterTypeRole(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class RoundingMode(enum.Enum):
    TO_POSITIVE_INFINITY: int
    TO_NEGATIVE_INFINITY: int
    TO_ZERO: int
    AWAY_FROM_ZERO: int
    TO_NEAREST_MIDPOINT_TOWARD_ZERO: int
    TO_NEAREST_MIDPOINT_AWAY_FROM_ZERO: int
    TO_NEAREST_MIDPOINT_TO_EVEN: int

class _UniffiConverterTypeRoundingMode(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class RoyaltyAmount:
    def __init__(self) -> None: ...

    class FREE:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class XRD:
        value: Decimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class USD:
        value: Decimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_free(self) -> bool: ...
    def is_xrd(self) -> bool: ...
    def is_usd(self) -> bool: ...

class _UniffiConverterTypeRoyaltyAmount(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ScryptoSborString:
    def __init__(self) -> None: ...

    class PROGRAMMATIC_JSON:
        value: str
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_programmatic_json(self) -> bool: ...

class _UniffiConverterTypeScryptoSborString(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class SerializationMode(enum.Enum):
    PROGRAMMATIC: int
    NATURAL: int

class _UniffiConverterTypeSerializationMode(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class Signature:
    def __init__(self) -> None: ...

    class SECP256K1:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ED25519:
        value: bytes
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_secp256k1(self) -> bool: ...
    def is_ed25519(self) -> bool: ...

class _UniffiConverterTypeSignature(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class SignatureWithPublicKey:
    def __init__(self) -> None: ...

    class SECP256K1:
        signature: bytes
        def __init__(self, signature) -> None: ...
        def __eq__(self, other): ...

    class ED25519:
        signature: bytes
        public_key: bytes
        def __init__(self, signature, public_key) -> None: ...
        def __eq__(self, other): ...

    def is_secp256k1(self) -> bool: ...
    def is_ed25519(self) -> bool: ...

class _UniffiConverterTypeSignatureWithPublicKey(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedAccessControllerBlueprintEvent:
    def __init__(self) -> None: ...

    class INITIATE_RECOVERY_EVENT_VALUE:
        value: InitiateRecoveryEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class INITIATE_BADGE_WITHDRAW_ATTEMPT_EVENT_VALUE:
        value: InitiateBadgeWithdrawAttemptEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class RULE_SET_UPDATE_EVENT_VALUE:
        value: RuleSetUpdateEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BADGE_WITHDRAW_EVENT_VALUE:
        value: BadgeWithdrawEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class CANCEL_RECOVERY_PROPOSAL_EVENT_VALUE:
        value: CancelRecoveryProposalEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class CANCEL_BADGE_WITHDRAW_ATTEMPT_EVENT_VALUE:
        value: CancelBadgeWithdrawAttemptEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class LOCK_PRIMARY_ROLE_EVENT_VALUE:
        value: LockPrimaryRoleEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class UNLOCK_PRIMARY_ROLE_EVENT_VALUE:
        value: UnlockPrimaryRoleEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class STOP_TIMED_RECOVERY_EVENT_VALUE:
        value: StopTimedRecoveryEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class DEPOSIT_RECOVERY_XRD_EVENT_VALUE:
        value: DepositRecoveryXrdEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class WITHDRAW_RECOVERY_XRD_EVENT_VALUE:
        value: WithdrawRecoveryXrdEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_initiate_recovery_event_value(self) -> bool: ...
    def is_initiate_badge_withdraw_attempt_event_value(self) -> bool: ...
    def is_rule_set_update_event_value(self) -> bool: ...
    def is_badge_withdraw_event_value(self) -> bool: ...
    def is_cancel_recovery_proposal_event_value(self) -> bool: ...
    def is_cancel_badge_withdraw_attempt_event_value(self) -> bool: ...
    def is_lock_primary_role_event_value(self) -> bool: ...
    def is_unlock_primary_role_event_value(self) -> bool: ...
    def is_stop_timed_recovery_event_value(self) -> bool: ...
    def is_deposit_recovery_xrd_event_value(self) -> bool: ...
    def is_withdraw_recovery_xrd_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedAccessControllerBlueprintEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedAccessControllerPackageEvent:
    def __init__(self) -> None: ...

    class ACCESS_CONTROLLER:
        value: TypedAccessControllerBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_access_controller(self) -> bool: ...

class _UniffiConverterTypeTypedAccessControllerPackageEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedAccountBlueprintEvent:
    def __init__(self) -> None: ...

    class ACCOUNT_WITHDRAW_EVENT_VALUE:
        value: AccountWithdrawEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT_DEPOSIT_EVENT_VALUE:
        value: AccountDepositEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT_REJECTED_DEPOSIT_EVENT_VALUE:
        value: AccountRejectedDepositEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT_SET_RESOURCE_PREFERENCE_EVENT_VALUE:
        value: AccountSetResourcePreferenceEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT_REMOVE_RESOURCE_PREFERENCE_EVENT_VALUE:
        value: AccountRemoveResourcePreferenceEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT_SET_DEFAULT_DEPOSIT_RULE_EVENT_VALUE:
        value: AccountSetDefaultDepositRuleEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT_ADD_AUTHORIZED_DEPOSITOR_EVENT_VALUE:
        value: AccountAddAuthorizedDepositorEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT_REMOVE_AUTHORIZED_DEPOSITOR_EVENT_VALUE:
        value: AccountRemoveAuthorizedDepositorEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_account_withdraw_event_value(self) -> bool: ...
    def is_account_deposit_event_value(self) -> bool: ...
    def is_account_rejected_deposit_event_value(self) -> bool: ...
    def is_account_set_resource_preference_event_value(self) -> bool: ...
    def is_account_remove_resource_preference_event_value(self) -> bool: ...
    def is_account_set_default_deposit_rule_event_value(self) -> bool: ...
    def is_account_add_authorized_depositor_event_value(self) -> bool: ...
    def is_account_remove_authorized_depositor_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedAccountBlueprintEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedAccountLockerBlueprintEvent:
    def __init__(self) -> None: ...

    class STORE_EVENT_VALUE:
        value: StoreEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class RECOVER_EVENT_VALUE:
        value: RecoverEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class CLAIM_EVENT_VALUE:
        value: ClaimEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_store_event_value(self) -> bool: ...
    def is_recover_event_value(self) -> bool: ...
    def is_claim_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedAccountLockerBlueprintEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedAccountPackageEvent:
    def __init__(self) -> None: ...

    class ACCOUNT:
        value: TypedAccountBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_account(self) -> bool: ...

class _UniffiConverterTypeTypedAccountPackageEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedConsensusManagerBlueprintEvent:
    def __init__(self) -> None: ...

    class ROUND_CHANGE_EVENT_VALUE:
        value: RoundChangeEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class EPOCH_CHANGE_EVENT_VALUE:
        value: EpochChangeEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_round_change_event_value(self) -> bool: ...
    def is_epoch_change_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedConsensusManagerBlueprintEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedConsensusManagerPackageEvent:
    def __init__(self) -> None: ...

    class CONSENSUS_MANAGER:
        value: TypedConsensusManagerBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class VALIDATOR:
        value: TypedValidatorBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_consensus_manager(self) -> bool: ...
    def is_validator(self) -> bool: ...

class _UniffiConverterTypeTypedConsensusManagerPackageEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedFungibleResourceManagerBlueprintEvent:
    def __init__(self) -> None: ...

    class VAULT_CREATION_EVENT_VALUE:
        value: VaultCreationEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class MINT_FUNGIBLE_RESOURCE_EVENT_VALUE:
        value: MintFungibleResourceEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BURN_FUNGIBLE_RESOURCE_EVENT_VALUE:
        value: BurnFungibleResourceEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_vault_creation_event_value(self) -> bool: ...
    def is_mint_fungible_resource_event_value(self) -> bool: ...
    def is_burn_fungible_resource_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedFungibleResourceManagerBlueprintEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedFungibleVaultBlueprintEvent:
    def __init__(self) -> None: ...

    class FUNGIBLE_VAULT_LOCK_FEE_EVENT_VALUE:
        value: FungibleVaultLockFeeEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class FUNGIBLE_VAULT_WITHDRAW_EVENT_VALUE:
        value: FungibleVaultWithdrawEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class FUNGIBLE_VAULT_DEPOSIT_EVENT_VALUE:
        value: FungibleVaultDepositEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class FUNGIBLE_VAULT_RECALL_EVENT_VALUE:
        value: FungibleVaultRecallEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class FUNGIBLE_VAULT_PAY_FEE_EVENT_VALUE:
        value: FungibleVaultPayFeeEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_fungible_vault_lock_fee_event_value(self) -> bool: ...
    def is_fungible_vault_withdraw_event_value(self) -> bool: ...
    def is_fungible_vault_deposit_event_value(self) -> bool: ...
    def is_fungible_vault_recall_event_value(self) -> bool: ...
    def is_fungible_vault_pay_fee_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedFungibleVaultBlueprintEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedLockerPackageEvent:
    def __init__(self) -> None: ...

    class ACCOUNT_LOCKER:
        value: TypedAccountLockerBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_account_locker(self) -> bool: ...

class _UniffiConverterTypeTypedLockerPackageEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedMetadataBlueprintEvent:
    def __init__(self) -> None: ...

    class SET_METADATA_EVENT_VALUE:
        value: SetMetadataEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class REMOVE_METADATA_EVENT_VALUE:
        value: RemoveMetadataEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_set_metadata_event_value(self) -> bool: ...
    def is_remove_metadata_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedMetadataBlueprintEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedMetadataPackageEvent:
    def __init__(self) -> None: ...

    class METADATA:
        value: TypedMetadataBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_metadata(self) -> bool: ...

class _UniffiConverterTypeTypedMetadataPackageEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedMultiResourcePoolBlueprintEvent:
    def __init__(self) -> None: ...

    class MULTI_RESOURCE_POOL_CONTRIBUTION_EVENT_VALUE:
        value: MultiResourcePoolContributionEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class MULTI_RESOURCE_POOL_REDEMPTION_EVENT_VALUE:
        value: MultiResourcePoolRedemptionEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class MULTI_RESOURCE_POOL_WITHDRAW_EVENT_VALUE:
        value: MultiResourcePoolWithdrawEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class MULTI_RESOURCE_POOL_DEPOSIT_EVENT_VALUE:
        value: MultiResourcePoolDepositEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_multi_resource_pool_contribution_event_value(self) -> bool: ...
    def is_multi_resource_pool_redemption_event_value(self) -> bool: ...
    def is_multi_resource_pool_withdraw_event_value(self) -> bool: ...
    def is_multi_resource_pool_deposit_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedMultiResourcePoolBlueprintEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedNativeEvent:
    def __init__(self) -> None: ...

    class ACCESS_CONTROLLER:
        value: TypedAccessControllerPackageEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ACCOUNT:
        value: TypedAccountPackageEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class CONSENSUS_MANAGER:
        value: TypedConsensusManagerPackageEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class POOL:
        value: TypedPoolPackageEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class RESOURCE:
        value: TypedResourcePackageEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ROLE_ASSIGNMENT:
        value: TypedRoleAssignmentPackageEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class METADATA:
        value: TypedMetadataPackageEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class LOCKER:
        value: TypedLockerPackageEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_access_controller(self) -> bool: ...
    def is_account(self) -> bool: ...
    def is_consensus_manager(self) -> bool: ...
    def is_pool(self) -> bool: ...
    def is_resource(self) -> bool: ...
    def is_role_assignment(self) -> bool: ...
    def is_metadata(self) -> bool: ...
    def is_locker(self) -> bool: ...

class _UniffiConverterTypeTypedNativeEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedNonFungibleResourceManagerBlueprintEvent:
    def __init__(self) -> None: ...

    class VAULT_CREATION_EVENT_VALUE:
        value: VaultCreationEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class MINT_NON_FUNGIBLE_RESOURCE_EVENT_VALUE:
        value: MintNonFungibleResourceEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class BURN_NON_FUNGIBLE_RESOURCE_EVENT_VALUE:
        value: BurnNonFungibleResourceEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_vault_creation_event_value(self) -> bool: ...
    def is_mint_non_fungible_resource_event_value(self) -> bool: ...
    def is_burn_non_fungible_resource_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedNonFungibleResourceManagerBlueprintEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedNonFungibleVaultBlueprintEvent:
    def __init__(self) -> None: ...

    class NON_FUNGIBLE_VAULT_WITHDRAW_EVENT_VALUE:
        value: NonFungibleVaultWithdrawEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_VAULT_DEPOSIT_EVENT_VALUE:
        value: NonFungibleVaultDepositEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_VAULT_RECALL_EVENT_VALUE:
        value: NonFungibleVaultRecallEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_non_fungible_vault_withdraw_event_value(self) -> bool: ...
    def is_non_fungible_vault_deposit_event_value(self) -> bool: ...
    def is_non_fungible_vault_recall_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedNonFungibleVaultBlueprintEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedOneResourcePoolBlueprintEvent:
    def __init__(self) -> None: ...

    class ONE_RESOURCE_POOL_CONTRIBUTION_EVENT_VALUE:
        value: OneResourcePoolContributionEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ONE_RESOURCE_POOL_REDEMPTION_EVENT_VALUE:
        value: OneResourcePoolRedemptionEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ONE_RESOURCE_POOL_WITHDRAW_EVENT_VALUE:
        value: OneResourcePoolWithdrawEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class ONE_RESOURCE_POOL_DEPOSIT_EVENT_VALUE:
        value: OneResourcePoolDepositEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_one_resource_pool_contribution_event_value(self) -> bool: ...
    def is_one_resource_pool_redemption_event_value(self) -> bool: ...
    def is_one_resource_pool_withdraw_event_value(self) -> bool: ...
    def is_one_resource_pool_deposit_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedOneResourcePoolBlueprintEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedPoolPackageEvent:
    def __init__(self) -> None: ...

    class ONE_RESOURCE_POOL:
        value: TypedOneResourcePoolBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class TWO_RESOURCE_POOL:
        value: TypedTwoResourcePoolBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class MULTI_RESOURCE_POOL:
        value: TypedMultiResourcePoolBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_one_resource_pool(self) -> bool: ...
    def is_two_resource_pool(self) -> bool: ...
    def is_multi_resource_pool(self) -> bool: ...

class _UniffiConverterTypeTypedPoolPackageEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedResourcePackageEvent:
    def __init__(self) -> None: ...

    class FUNGIBLE_VAULT:
        value: TypedFungibleVaultBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_VAULT:
        value: TypedNonFungibleVaultBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class FUNGIBLE_RESOURCE_MANAGER:
        value: TypedFungibleResourceManagerBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class NON_FUNGIBLE_RESOURCE_MANAGER:
        value: TypedNonFungibleResourceManagerBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_fungible_vault(self) -> bool: ...
    def is_non_fungible_vault(self) -> bool: ...
    def is_fungible_resource_manager(self) -> bool: ...
    def is_non_fungible_resource_manager(self) -> bool: ...

class _UniffiConverterTypeTypedResourcePackageEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedRoleAssignmentBlueprintEvent:
    def __init__(self) -> None: ...

    class SET_ROLE_EVENT_VALUE:
        value: SetRoleEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class SET_OWNER_ROLE_EVENT_VALUE:
        value: SetOwnerRoleEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class LOCK_OWNER_ROLE_EVENT_VALUE:
        value: LockOwnerRoleEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_set_role_event_value(self) -> bool: ...
    def is_set_owner_role_event_value(self) -> bool: ...
    def is_lock_owner_role_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedRoleAssignmentBlueprintEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedRoleAssignmentPackageEvent:
    def __init__(self) -> None: ...

    class ROLE_ASSIGNMENT:
        value: TypedRoleAssignmentBlueprintEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_role_assignment(self) -> bool: ...

class _UniffiConverterTypeTypedRoleAssignmentPackageEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedTwoResourcePoolBlueprintEvent:
    def __init__(self) -> None: ...

    class TWO_RESOURCE_POOL_CONTRIBUTION_EVENT_VALUE:
        value: TwoResourcePoolContributionEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class TWO_RESOURCE_POOL_REDEMPTION_EVENT_VALUE:
        value: TwoResourcePoolRedemptionEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class TWO_RESOURCE_POOL_WITHDRAW_EVENT_VALUE:
        value: TwoResourcePoolWithdrawEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class TWO_RESOURCE_POOL_DEPOSIT_EVENT_VALUE:
        value: TwoResourcePoolDepositEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_two_resource_pool_contribution_event_value(self) -> bool: ...
    def is_two_resource_pool_redemption_event_value(self) -> bool: ...
    def is_two_resource_pool_withdraw_event_value(self) -> bool: ...
    def is_two_resource_pool_deposit_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedTwoResourcePoolBlueprintEvent(
    _UniffiConverterRustBuffer
):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class TypedValidatorBlueprintEvent:
    def __init__(self) -> None: ...

    class REGISTER_VALIDATOR_EVENT_VALUE:
        value: RegisterValidatorEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class UNREGISTER_VALIDATOR_EVENT_VALUE:
        value: UnregisterValidatorEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class STAKE_EVENT_VALUE:
        value: StakeEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class UNSTAKE_EVENT_VALUE:
        value: UnstakeEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class CLAIM_XRD_EVENT_VALUE:
        value: ClaimXrdEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class UPDATE_ACCEPTING_STAKE_DELEGATION_STATE_EVENT_VALUE:
        value: UpdateAcceptingStakeDelegationStateEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class PROTOCOL_UPDATE_READINESS_SIGNAL_EVENT_VALUE:
        value: ProtocolUpdateReadinessSignalEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class VALIDATOR_EMISSION_APPLIED_EVENT_VALUE:
        value: ValidatorEmissionAppliedEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class VALIDATOR_REWARD_APPLIED_EVENT_VALUE:
        value: ValidatorRewardAppliedEvent
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_register_validator_event_value(self) -> bool: ...
    def is_unregister_validator_event_value(self) -> bool: ...
    def is_stake_event_value(self) -> bool: ...
    def is_unstake_event_value(self) -> bool: ...
    def is_claim_xrd_event_value(self) -> bool: ...
    def is_update_accepting_stake_delegation_state_event_value(self) -> bool: ...
    def is_protocol_update_readiness_signal_event_value(self) -> bool: ...
    def is_validator_emission_applied_event_value(self) -> bool: ...
    def is_validator_reward_applied_event_value(self) -> bool: ...

class _UniffiConverterTypeTypedValidatorBlueprintEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class WithdrawResourceEvent:
    def __init__(self) -> None: ...

    class AMOUNT:
        value: Decimal
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    class IDS:
        value: typing.List[NonFungibleLocalId]
        def __init__(self, value) -> None: ...
        def __eq__(self, other): ...

    def is_amount(self) -> bool: ...
    def is_ids(self) -> bool: ...

class _UniffiConverterTypeWithdrawResourceEvent(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class WithdrawStrategy:
    def __init__(self) -> None: ...

    class EXACT:
        def __init__(self) -> None: ...
        def __eq__(self, other): ...

    class ROUNDED:
        rounding_mode: RoundingMode
        def __init__(self, rounding_mode) -> None: ...
        def __eq__(self, other): ...

    def is_exact(self) -> bool: ...
    def is_rounded(self) -> bool: ...

class _UniffiConverterTypeWithdrawStrategy(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf): ...
    def write(value, buf) -> None: ...

class ConcurrentHandleMap:
    def __init__(self) -> None: ...
    def insert(self, obj): ...
    def get(self, handle): ...
    def remove(self, handle): ...

class _UniffiConverterCallbackInterface:
    def __init__(self, cb) -> None: ...
    def drop(self, handle) -> None: ...
    @classmethod
    def lift(cls, handle): ...
    @classmethod
    def read(cls, buf) -> None: ...
    @classmethod
    def lower(cls, cb): ...
    @classmethod
    def write(cls, cb, buf) -> None: ...

class Signer:
    def sign(self, hash: Hash): ...
    def sign_to_signature(self, hash: Hash): ...
    def sign_to_signature_with_public_key(self, hash: Hash): ...
    def public_key(self) -> None: ...

class _UniffiConverterOptionalUInt32(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypeAccessRule(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypeDecimal(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypePreciseDecimal(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypeLockFeeModification(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypeManifestBuilderAddressReservation(
    _UniffiConverterRustBuffer
):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypeResourceManagerRole(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypeSchema(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypeMetadataValue(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterOptionalTypeResourceOrNonFungible(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceUInt32(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceInt32(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceUInt64(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceInt64(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceBool(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceString(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceBytes(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeAddress(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeDecimal(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeNonFungibleGlobalId(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeIndexedAssertion(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeManifestBuilderBucket(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeManifestBuilderMapEntry(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeMapEntry(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeTrackedPoolContribution(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeTrackedPoolRedemption(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeTrackedValidatorClaim(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeTrackedValidatorStake(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeTrackedValidatorUnstake(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeUnstakeDataEntry(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeDetailedManifestClass(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeEntityType(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeInstruction(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeManifestBuilderValue(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeManifestClass(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeManifestValue(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeNonFungibleLocalId(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypePublicKey(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypePublicKeyHash(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeReservedInstruction(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeResourceIndicator(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeResourceOrNonFungible(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeResourceSpecifier(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterSequenceTypeSignatureWithPublicKey(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, value, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringTypeDecimal(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringTypeMetadataInitEntry(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringTypeValidatorInfo(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringTypeAccountDefaultDepositRule(
    _UniffiConverterRustBuffer
):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringTypeResourcePreferenceUpdate(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringTypeResourceSpecifier(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringOptionalTypeAccessRule(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringOptionalTypeMetadataValue(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringSequenceTypeResourceIndicator(
    _UniffiConverterRustBuffer
):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringSequenceTypeResourceOrNonFungible(
    _UniffiConverterRustBuffer
):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringSequenceTypeResourceSpecifier(
    _UniffiConverterRustBuffer
):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringMapStringTypeResourcePreferenceUpdate(
    _UniffiConverterRustBuffer
):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapStringMapStringOptionalTypeMetadataValue(
    _UniffiConverterRustBuffer
):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapTypePublicKeyFingerprintBytes(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapTypeCurveTypeTypeDecryptorsByCurve(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

class _UniffiConverterMapTypeEntityTypeSequenceTypeAddress(_UniffiConverterRustBuffer):
    @classmethod
    def write(cls, items, buf) -> None: ...
    @classmethod
    def read(cls, buf): ...

HashableBytes = bytes

class _UniffiConverterTypeHashableBytes:
    @staticmethod
    def write(value, buf) -> None: ...
    @staticmethod
    def read(buf): ...
    @staticmethod
    def lift(value): ...
    @staticmethod
    def lower(value): ...

def derive_olympia_account_address_from_public_key(
    public_key: PublicKey, olympia_network: OlympiaNetwork
) -> OlympiaAddress: ...
def derive_public_key_from_olympia_account_address(
    olympia_resource_address: OlympiaAddress,
) -> PublicKey: ...
def derive_resource_address_from_olympia_resource_address(
    olympia_resource_address: OlympiaAddress, network_id: int
) -> Address: ...
def derive_virtual_account_address_from_olympia_account_address(
    olympia_account_address: OlympiaAddress, network_id: int
) -> Address: ...
def derive_virtual_account_address_from_public_key(
    public_key: PublicKey, network_id: int
) -> Address: ...
def derive_virtual_global_caller_non_fungible_global_id_from_component_address(
    component_address: Address, network_id: int
) -> NonFungibleGlobalId: ...
def derive_virtual_identity_address_from_public_key(
    public_key: PublicKey, network_id: int
) -> Address: ...
def derive_virtual_package_of_direct_caller_non_fungible_global_id_from_component_address(
    package_address: Address, network_id: int
) -> NonFungibleGlobalId: ...
def derive_virtual_signature_non_fungible_global_id_from_public_key(
    public_key: PublicKey, network_id: int
) -> NonFungibleGlobalId: ...
def get_build_information() -> BuildInformation: ...
def get_hash(data: bytes) -> Hash: ...
def get_known_addresses(network_id: int) -> KnownAddresses: ...
def manifest_sbor_decode_to_string_representation(
    bytes: bytes,
    representation: ManifestSborStringRepresentation,
    network_id: int,
    schema: typing.Optional[Schema],
) -> str: ...
def metadata_sbor_decode(bytes: bytes, network_id: int) -> MetadataValue: ...
def metadata_sbor_encode(value: MetadataValue) -> bytes: ...
def non_fungible_local_id_as_str(value: NonFungibleLocalId) -> str: ...
def non_fungible_local_id_from_str(string: str) -> NonFungibleLocalId: ...
def non_fungible_local_id_sbor_decode(bytes: bytes) -> NonFungibleLocalId: ...
def non_fungible_local_id_sbor_encode(value: NonFungibleLocalId) -> bytes: ...
def public_key_fingerprint_from_vec(bytes: bytes) -> PublicKeyFingerprint: ...
def public_key_fingerprint_to_vec(value: PublicKeyFingerprint) -> bytes: ...
def sbor_decode_to_string_representation(
    bytes: bytes,
    representation: SerializationMode,
    network_id: int,
    schema: typing.Optional[Schema],
) -> str: ...
def sbor_decode_to_typed_native_event(
    event_type_identifier: EventTypeIdentifier, event_data: bytes, network_id: int
) -> TypedNativeEvent: ...
def scrypto_sbor_decode_to_string_representation(
    bytes: bytes,
    representation: SerializationMode,
    network_id: int,
    schema: typing.Optional[Schema],
) -> str: ...
def scrypto_sbor_encode_string_representation(
    representation: ScryptoSborString,
) -> bytes: ...
def test_panic(message: str): ...
