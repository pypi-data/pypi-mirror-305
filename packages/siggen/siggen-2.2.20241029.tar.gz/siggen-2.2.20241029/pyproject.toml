[project]
name = "siggen"
description = "Socorro signature generation extracted as a Python library"
# x.y.YYYYMMDD or x.y.YYYYMMDD.dev0 -- calver
version = "2.2.20241029"
readme = "README.rst"
keywords = ["socorro"]
authors = [{name = "Will Kahn-Greene"}]
license = {text = "MPLv2"}
requires-python = ">=3.9"
dependencies = [
    "glom",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
urls.Homepage = "https://github.com/willkg/socorro-siggen"
urls.Source = "https://github.com/willkg/socorro-siggen"
urls.Issues = "https://github.com/willkg/socorro-siggen"

[project.scripts]
signify = "siggen.cmd_signify:main"
fetch-data = "siggen.cmd_fetch_data:main"
signature = "siggen.cmd_signature:main"

[project.optional-dependencies]
cli = [
    "requests<3",
]
dev = [
    "build",
    "check-manifest",
    "pytest",
    "requests<3",
    "ruff",
    "tox",
    "tox-gh-actions",
    "twine",
    "wheel",
]


[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"


[tool.ruff]
line-length = 88
target-version = "py39"
src = ["setup.py", "siggen"]

[tool.ruff.lint]
# Enable pycodestyle (E), pyflakes (F), and bugbear (B) rules
select = ["E", "F", "B"]
ignore = ["E501"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"


[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist =
    py39
    py310
    py311
    py312
    py313
    py39-lint
    py39-norequests

[gh-actions]
python =
    3.9: py39, py39-lint, py39-norequests
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[testenv]
extras = dev,cli
allowlist_externals = {toxinidir}/bin/run_cmd_tests.sh
commands = 
    pytest {posargs}
    {toxinidir}/bin/run_cmd_tests.sh

[testenv:py39-lint]
extras = dev,cli
allowlist_externals = ruff
commands =
    ruff format --check siggen
    ruff check siggen

[testenv:py39-norequests]
extras =
allowlist_externals = {toxinidir}/bin/run_cmd_tests.sh
commands =
    {toxinidir}/bin/run_cmd_tests.sh --no-requests
"""
