##################################################################################
#                       Auto-generated Metaflow stub file                        #
# MF version: 2.12.28                                                            #
# Generated on 2024-11-01T10:21:04.537970                                        #
##################################################################################

from __future__ import annotations

import typing
if typing.TYPE_CHECKING:
    import metaflow.exception

class MetaflowException(Exception, metaclass=type):
    def __init__(self, msg = "", lineno = None):
        ...
    def __str__(self):
        ...
    ...

KUBERNETES_NAMESPACE: str

class KubernetesJob(object, metaclass=type):
    def __init__(self, client, **kwargs):
        ...
    def create_job_spec(self):
        ...
    def create(self):
        ...
    def execute(self):
        ...
    def step_name(self, step_name):
        ...
    def namespace(self, namespace):
        ...
    def name(self, name):
        ...
    def command(self, command):
        ...
    def image(self, image):
        ...
    def cpu(self, cpu):
        ...
    def memory(self, mem):
        ...
    def environment_variable(self, name, value):
        ...
    def label(self, name, value):
        ...
    def annotation(self, name, value):
        ...
    ...

class KubernetesJobSet(object, metaclass=type):
    def __init__(self, client, name = None, namespace = None, num_parallel = None, **kwargs):
        ...
    @property
    def jobset_control_addr(self):
        ...
    @property
    def worker(self):
        ...
    @property
    def control(self):
        ...
    def environment_variable_from_selector(self, name, label_value):
        ...
    def environment_variables_from_selectors(self, env_dict):
        ...
    def environment_variable(self, name, value):
        ...
    def label(self, name, value):
        ...
    def annotation(self, name, value):
        ...
    def secret(self, name):
        ...
    def dump(self):
        ...
    def execute(self):
        ...
    ...

CLIENT_REFRESH_INTERVAL_SECONDS: int

class KubernetesClientException(metaflow.exception.MetaflowException, metaclass=type):
    ...

class KubernetesClient(object, metaclass=type):
    def __init__(self):
        ...
    def get(self):
        ...
    def list(self, flow_name, run_id, user):
        ...
    def kill_pods(self, flow_name, run_id, user, echo):
        ...
    def jobset(self, **kwargs):
        ...
    def job(self, **kwargs):
        ...
    ...

