[tool.poetry]
name = "remotivelabs-cli"
version = "0.0.32"
description = "CLI for operating RemotiveCloud and RemotiveBroker"
authors = ["Johan Rask <johan.rask@remotivelabs.com>"]
readme = "README.md"

packages = [{ include = "cli" }]

[tool.poetry.scripts]
remotive = "cli.remotive:app"

[tool.poetry.dependencies]
trogon = ">=0.5.0"
python = ">=3.8,<3.12"
typer = "0.12.5"
remotivelabs-broker = "~=0.1.17"
rich = "~=13.7.0"
pyjwt = "~=2.6"
zeroconf = "~=0.127.0"
websocket-client = "~=1.6"
plotext = "~=5.2"
python-socketio = ">=4.6.1"
python-can = ">=4.3.1"
grpc-stubs = ">=1.53.0.5"
mypy-protobuf = ">=3.0.0"
types-requests = "^2.32.0.20240622"

[tool.poetry.group.test.dependencies]
pytest = "^8.3"
pytest-cov = "^5.0"

[tool.poetry.group.lint.dependencies]
ruff = "^0.6.5"
pylint = "^3.2.7"
pylint-protobuf = "^0.22.0"
mypy = "^1.11"

[tool.poe.tasks]
test = [{ cmd = "pytest --cov=cli ." }]
pylint = [{ cmd = "pylint ." }]
lint = [{ cmd = "ruff check ." }, { cmd = "ruff format --check --diff ." }]
format = [{ cmd = "ruff format ." }, { cmd = "ruff check --fix ." }]
mypy = [{ cmd = "mypy -p cli" }]
check = ["lint", "pylint", "mypy"]

[tool.pytest.ini_options]
markers = ["itests: run tests with custom flag"]

[tool.ruff]
line-length = 140

[tool.ruff.lint]
select = [
  "ARG",
  "B034",
  "C901",
  "E",
  "EXE",
  "F",
  "FA",
  "I",
  "N",
  "UP032",
  "RET",
  "W",
]

[tool.pylint]
recursive = true
ignore-paths = '^.venv/.*$'
load-plugins = ["pylint_protobuf"]

[tool.pylint.format]
max-line-length = 140
max-module-lines = 1000

[tool.pylint.messages_control]
disable = [
  'wrong-import-order',
  'missing-module-docstring',
  'missing-class-docstring',
  'missing-function-docstring',
  'duplicate-code',
  'logging-fstring-interpolation',
  'too-few-public-methods',
]

[tool.mypy]
python_version = "3.8"
strict = true
explicit_package_bases = true
mypy_path = "."
packages = ["cli", "tests"]

# See https://mypy.readthedocs.io/en/stable/config_file.html
disallow_untyped_calls = false
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
hide_error_codes = false

[[tool.mypy.overrides]]
module = "someip.*"
ignore_missing_imports = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
