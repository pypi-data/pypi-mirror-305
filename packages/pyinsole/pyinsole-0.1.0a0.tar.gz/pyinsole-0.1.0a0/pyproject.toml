[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyinsole"
version = "0.1.0-alpha"
description = "Asynchronous message dispatcher for concurrent tasks processing"
readme = "README.md"
license = "MIT"
authors = [
    "Eduardo Neto <edopneto@gmail.com>",
    "Christian Hartung <hartung@live.com>",
]
keywords = ["asyncio", "message", "dispatcher", "tasks", "microservices"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Distributed Computing",
]

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
python = ">=3.11"
aiobotocore = "^2.15.2"
sentry-sdk = "^2.17.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-deadfixtures = "^2.2.1"
pytest-envvars = "^1.2.1"
pytest-cov = "^5.0.0"
ruff = "^0.7.1"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "-vv --cov-report=term-missing --cov=src/pyinsole --cov-branch"
asyncio_mode = "strict"
pytestenvvars__env_files = [".env"]

[tool.coverage.report]
omit = [
    "*/__init__.py"
]

[tool.black]
line-length = 110
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 110
known_first_party = []
known_local_folder = ["tests", "src"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

[tool.ruff]
target-version = "py311"
line-length = 110
lint.ignore = ["E203"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
]
