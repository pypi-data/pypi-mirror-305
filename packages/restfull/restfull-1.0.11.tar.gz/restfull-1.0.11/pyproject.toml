[tool.poetry]
name = "restfull"
description = "Python REST API Frontend"
version = "1.0.11"
readme = "README.md"
authors = ["Michael Minichino <info@unix.us.com>"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
keywords = ["utilities", "rest", "api"]
packages = [
    { include = "restfull" }
]

[tool.poetry.urls]
"Homepage" = "https://github.com/mminichino/restfull"

[[tool.poetry.source]]
name = "pypi-public"
url = "https://pypi.org/simple/"

[tool.poetry.dependencies]
python = ">=3.8,<4"
attrs = ">=23.1.0"
requests = ">=2.31.0"
aiohttp = ">=3.9.3"
pytoolbase = ">=1.0.2"
certifi = ">=2024.8.30"

[tool.poetry.group.test.dependencies]
pytest = ">=8.1.1"
pytest-asyncio = ">=0.23.6"

[tool.poetry.group.dev.dependencies]
bumpversion = "^0.6.0"
poetry-core = ">=1.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
addopts = "-rE --no-header -v -p no:warnings"
log_file = "pytest.log"
log_file_level = "DEBUG"
pythonpath = [
    ".",
    "tests"
]
testpaths = [
    "tests",
]
python_classes = [
    "Test*"
]
python_files = [
    "test_[0-9]*.py"
]
markers = [
    "rest_api: marks a test as a standard API test",
    "http_test: marks a test as a general protocol test"
]

[tool.tox]
requires = ["tox>=4.19"]
env_list = ["py313", "py312", "py38", "win312", "win38"]
no_package = true

[tool.tox.env_run_base]
skip_install = true
allowlist_externals = ["poetry"]

[tool.tox.env.py38]
description = "Posix 3.8 full test"
env_python = "python3.8"
commands_pre = [["poetry", "env", "use", "3.8"], ["poetry", "install"]]
commands = [["poetry", "run", "pytest", "-m", "rest_api"]]

[tool.tox.env.py312]
description = "Posix 3.12 full test"
env_python = "python3.12"
commands_pre = [["poetry", "env", "use", "3.12"], ["poetry", "install"]]
commands = [["poetry", "run", "pytest", "-m", "rest_api"]]

[tool.tox.env.py313]
description = "Posix 3.13 full test"
env_python = "python3.13"
commands_pre = [["poetry", "env", "use", "3.13"], ["poetry", "install"]]
commands = [["poetry", "run", "pytest", "-m", "rest_api"]]

[tool.tox.env.win38]
description = "Windows 3.8 full test"
env_python = "python38"
commands_pre = [["poetry", "env", "remove", "38"], ["poetry", "env", "use", "38"], ["poetry", "install"]]
commands = [["poetry", "run", "pytest", "-m", "rest_api"]]

[tool.tox.env.win312]
description = "Windows 3.12 full test"
env_python = "python312"
commands_pre = [["poetry", "env", "remove", "312"], ["poetry", "env", "use", "312"], ["poetry", "install"]]
commands = [["poetry", "run", "pytest", "-m", "rest_api"]]
