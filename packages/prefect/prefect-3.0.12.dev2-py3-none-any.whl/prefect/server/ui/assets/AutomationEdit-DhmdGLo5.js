import{d as A,f as y,W as b,L as g,g as h,c as w,h as a,j as k,u as v,o as C,k as u,l as e,E as P,G as r,B,K as E,P as d,Y as W}from"./index-BwaNCR84.js";import{_ as D}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-BtAU6tGK.js";import{u as I}from"./usePageTitle-Bm8pLAPB.js";import{u as K}from"./usePrefectApi-DvvrmeTs.js";const $=A({__name:"AutomationEdit",async setup(N){let o,m;const i=K(),c=y(),_=v(),p=b("automationId"),s=([o,m]=g(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);I(`Edit Automation: ${s.name}`);const f=h(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function x(l){try{await i.automations.updateAutomation(p.value,l),d(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=W(t,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=k("p-layout-default");return C(),w(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(E),{crumbs:f.value},{actions:a(()=>[u(e(P),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[B(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(D,{automation:e(s),editing:"",onSubmit:x},null,8,["automation"])]),_:1})}}});export{$ as default};
//# sourceMappingURL=AutomationEdit-DhmdGLo5.js.map
