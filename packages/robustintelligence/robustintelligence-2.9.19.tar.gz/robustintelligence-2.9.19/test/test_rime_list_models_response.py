# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.rime_list_models_response import RimeListModelsResponse

class TestRimeListModelsResponse(unittest.TestCase):
    """RimeListModelsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RimeListModelsResponse:
        """Test RimeListModelsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RimeListModelsResponse`
        """
        model = RimeListModelsResponse()
        if include_optional:
            return RimeListModelsResponse(
                models = [
                    ri.apiclient.models.rime_model_with_owner_details.rimeModelWithOwnerDetails(
                        model = ri.apiclient.models.model_model.modelModel(
                            name = '', 
                            model_id = ri.apiclient.models.rime_uuid.rimeUUID(
                                uuid = '', ), 
                            project_ids = [
                                ri.apiclient.models.rime_uuid.rimeUUID(
                                    uuid = '', )
                                ], 
                            creator_id = , 
                            creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            external_id = '', 
                            user_metadata = ri.apiclient.models.registry_metadata.registryMetadata(
                                tags = [
                                    ''
                                    ], 
                                extra_info = '', ), 
                            model_info = ri.apiclient.models.registry_model_info.registryModelInfo(
                                model_path = ri.apiclient.models.registry_model_path_info.registryModelPathInfo(
                                    path = '', ), 
                                hugging_face = ri.apiclient.models.registry_hugging_face_model_info.registryHuggingFaceModelInfo(
                                    model_uri = '', 
                                    kwargs = '', ), ), 
                            validity_status = 'VALIDITY_STATUS_UNSPECIFIED', 
                            integration_id = , 
                            model_endpoint_integration_id = , 
                            validity_status_message = '', ), 
                        owner_details = ri.apiclient.models.owner_details_returns_a_limited_details_about_a_user
to_provide_identity_of_the_owner_of_the_project.OwnerDetails returns a limited details about a user
to provide identity of the owner of the Project(
                            name = '', 
                            email = '', ), )
                    ],
                next_page_token = '',
                has_more = True
            )
        else:
            return RimeListModelsResponse(
        )
        """

    def testRimeListModelsResponse(self):
        """Test RimeListModelsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()