# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.model_model import ModelModel

class TestModelModel(unittest.TestCase):
    """ModelModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelModel:
        """Test ModelModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelModel`
        """
        model = ModelModel()
        if include_optional:
            return ModelModel(
                name = '',
                model_id = ri.apiclient.models.rime_uuid.rimeUUID(
                    uuid = '', ),
                project_ids = [
                    ri.apiclient.models.rime_uuid.rimeUUID(
                        uuid = '', )
                    ],
                creator_id = ri.apiclient.models.rime_uuid.rimeUUID(
                    uuid = '', ),
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                external_id = '',
                user_metadata = ri.apiclient.models.registry_metadata.registryMetadata(
                    tags = [
                        ''
                        ], 
                    extra_info = '', ),
                model_info = ri.apiclient.models.registry_model_info.registryModelInfo(
                    model_path = ri.apiclient.models.registry_model_path_info.registryModelPathInfo(
                        path = '', ), 
                    hugging_face = ri.apiclient.models.registry_hugging_face_model_info.registryHuggingFaceModelInfo(
                        model_uri = '', 
                        kwargs = '', ), ),
                validity_status = 'VALIDITY_STATUS_UNSPECIFIED',
                integration_id = ri.apiclient.models.rime_uuid.rimeUUID(
                    uuid = '', ),
                model_endpoint_integration_id = ri.apiclient.models.rime_uuid.rimeUUID(
                    uuid = '', ),
                validity_status_message = ''
            )
        else:
            return ModelModel(
        )
        """

    def testModelModel(self):
        """Test ModelModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()