# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.testrun_profiling_config import TestrunProfilingConfig

class TestTestrunProfilingConfig(unittest.TestCase):
    """TestrunProfilingConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestrunProfilingConfig:
        """Test TestrunProfilingConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestrunProfilingConfig`
        """
        model = TestrunProfilingConfig()
        if include_optional:
            return TestrunProfilingConfig(
                data_profiling = ri.apiclient.models.testrun_data_profiling.testrunDataProfiling(
                    num_quantiles = '', 
                    num_subsets = '', 
                    column_type_info = ri.apiclient.models.data_profiling_column_type_info.DataProfilingColumnTypeInfo(
                        min_nunique_for_numeric = '', 
                        numeric_violation_threshold = 1.337, 
                        categorical_violation_threshold = 1.337, 
                        min_unique_prop = 1.337, 
                        allow_float_unique = True, 
                        numeric_range_inference_threshold = 1.337, 
                        unseen_values_allowed_criteria = 1.337, ), 
                    feature_relationship_info = ri.apiclient.models.data_profiling_feature_relationship_info.DataProfilingFeatureRelationshipInfo(
                        num_feats_to_profile = '', 
                        compute_feature_relationships = True, 
                        compute_numeric_feature_relationships = True, 
                        ignore_nan_for_feature_relationships = True, ), ),
                model_profiling = ri.apiclient.models.testrun_model_profiling.testrunModelProfiling(
                    nrows_for_summary = '', 
                    nrows_for_feature_importance = '', 
                    metric_configs_json = '', 
                    impact_metric = '', 
                    impact_label_threshold = 1.337, 
                    drift_impact_metric = '', 
                    subset_summary_metric = '', 
                    num_feats_for_subset_summary = '', 
                    custom_metrics = [
                        ri.apiclient.models.testrun_custom_metric.testrunCustomMetric(
                            name = '', 
                            file_path = '', 
                            range_lower_bound = 1.337, 
                            range_upper_bound = 1.337, 
                            run_subset_performance = True, 
                            run_subset_performance_drift = True, 
                            run_overall_performance = True, 
                            metadata = ri.apiclient.models.custom_metric_custom_metric_metadata.CustomMetricCustomMetricMetadata(
                                short_description = '', 
                                starter_description = '', 
                                why_it_matters_description = '', 
                                configuration_description = '', 
                                example_description = '', ), )
                        ], )
            )
        else:
            return TestrunProfilingConfig(
        )
        """

    def testTestrunProfilingConfig(self):
        """Test TestrunProfilingConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()