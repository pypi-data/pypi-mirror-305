# coding: utf-8

"""
    Robust Intelligence Firewall REST API

    API methods for Robust Intelligence. Users must authenticate using the `X-Firewall-Auth-Token` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.fwclient.models.rule_evaluation_metadata_model_info import RuleEvaluationMetadataModelInfo

class TestRuleEvaluationMetadataModelInfo(unittest.TestCase):
    """RuleEvaluationMetadataModelInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RuleEvaluationMetadataModelInfo:
        """Test RuleEvaluationMetadataModelInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RuleEvaluationMetadataModelInfo`
        """
        model = RuleEvaluationMetadataModelInfo()
        if include_optional:
            return RuleEvaluationMetadataModelInfo(
                model_version = '',
                chunk_scores = [
                    ri.fwclient.models.generativefirewall_raw_model_prediction.generativefirewallRawModelPrediction(
                        classification_pred = ri.fwclient.models.raw_model_prediction_text_classification_pred.RawModelPredictionTextClassificationPred(
                            scores = [
                                1.337
                                ], ), )
                    ]
            )
        else:
            return RuleEvaluationMetadataModelInfo(
        )
        """

    def testRuleEvaluationMetadataModelInfo(self):
        """Test RuleEvaluationMetadataModelInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()