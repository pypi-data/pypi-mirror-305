# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.schemafilescanning_repo_metadata import SchemafilescanningRepoMetadata

class TestSchemafilescanningRepoMetadata(unittest.TestCase):
    """SchemafilescanningRepoMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SchemafilescanningRepoMetadata:
        """Test SchemafilescanningRepoMetadata
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SchemafilescanningRepoMetadata`
        """
        model = SchemafilescanningRepoMetadata()
        if include_optional:
            return SchemafilescanningRepoMetadata(
                purl = ri.apiclient.models.filescanning_package_url.filescanningPackageURL(
                    type = 'PACKAGE_TYPE_UNSPECIFIED', 
                    namespace = '', 
                    name = '', 
                    version = '', 
                    qualifiers = {
                        'key' : ''
                        }, 
                    subpath = '', ),
                repo_last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                tags = [
                    ''
                    ],
                reputation = ri.apiclient.models.schemafilescanning_repo_metadata_reputation.schemafilescanningRepoMetadataReputation(
                    downloads = '', 
                    likes = '', 
                    stars = '', 
                    forks = '', ),
                license = ri.apiclient.models.schemafilescanning_repo_metadata_license.schemafilescanningRepoMetadataLicense(
                    name = '', ),
                author = ''
            )
        else:
            return SchemafilescanningRepoMetadata(
        )
        """

    def testSchemafilescanningRepoMetadata(self):
        """Test SchemafilescanningRepoMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()