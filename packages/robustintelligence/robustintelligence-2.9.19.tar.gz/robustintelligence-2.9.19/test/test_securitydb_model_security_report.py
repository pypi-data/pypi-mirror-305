# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.securitydb_model_security_report import SecuritydbModelSecurityReport

class TestSecuritydbModelSecurityReport(unittest.TestCase):
    """SecuritydbModelSecurityReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecuritydbModelSecurityReport:
        """Test SecuritydbModelSecurityReport
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecuritydbModelSecurityReport`
        """
        model = SecuritydbModelSecurityReport()
        if include_optional:
            return SecuritydbModelSecurityReport(
                repo_id = '',
                description = '',
                repo_metadata = ri.apiclient.models.schemasecuritydb_repo_metadata.schemasecuritydbRepoMetadata(
                    version_info = '', 
                    repo_last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    tags = [
                        ''
                        ], 
                    reputation = ri.apiclient.models.schemasecuritydb_repo_metadata_reputation.schemasecuritydbRepoMetadataReputation(
                        downloads = 56, 
                        likes = 56, 
                        stars = 56, 
                        forks = 56, ), 
                    license = ri.apiclient.models.schemasecuritydb_repo_metadata_license.schemasecuritydbRepoMetadataLicense(
                        name = '', ), 
                    author = '', ),
                file_scan_result = ri.apiclient.models.schemasecuritydb_file_scan_result.schemasecuritydbFileScanResult(
                    result_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    file_security_reports = [
                        ri.apiclient.models.schemasecuritydb_file_security_report.schemasecuritydbFileSecurityReport(
                            filepath = '', 
                            size = 56, 
                            sha256 = '', 
                            creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            dependencies = [
                                ri.apiclient.models.file_security_report_dependency.FileSecurityReportDependency(
                                    name = '', 
                                    description = '', 
                                    severity = 'SEVERITY_NONE', )
                                ], 
                            unsafe_dependencies = [
                                ri.apiclient.models.file_security_report_dependency.FileSecurityReportDependency(
                                    name = '', 
                                    description = '', )
                                ], )
                        ], 
                    scanned_file_paths = [
                        ''
                        ], 
                    severity = 'SEVERITY_NONE', )
            )
        else:
            return SecuritydbModelSecurityReport(
        )
        """

    def testSecuritydbModelSecurityReport(self):
        """Test SecuritydbModelSecurityReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()