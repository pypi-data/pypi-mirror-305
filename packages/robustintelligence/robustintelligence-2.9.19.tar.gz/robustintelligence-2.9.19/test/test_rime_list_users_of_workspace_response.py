# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.rime_list_users_of_workspace_response import RimeListUsersOfWorkspaceResponse

class TestRimeListUsersOfWorkspaceResponse(unittest.TestCase):
    """RimeListUsersOfWorkspaceResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RimeListUsersOfWorkspaceResponse:
        """Test RimeListUsersOfWorkspaceResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RimeListUsersOfWorkspaceResponse`
        """
        model = RimeListUsersOfWorkspaceResponse()
        if include_optional:
            return RimeListUsersOfWorkspaceResponse(
                workspace_id = ri.apiclient.models.rime_uuid.rimeUUID(
                    uuid = '', ),
                users = [
                    ri.apiclient.models.rime_user_detail_with_role.rimeUserDetailWithRole(
                        user_detail = ri.apiclient.models.user_user_detail.userUserDetail(
                            id = ri.apiclient.models.rime_uuid.rimeUUID(
                                uuid = '', ), 
                            name = '', 
                            role = 'ROLE_UNSPECIFIED', 
                            email = '', 
                            full_name = '', 
                            show_tutorial = True, 
                            org_role = 'ACTOR_ROLE_UNSPECIFIED', 
                            private_info = ri.apiclient.models.user_private_info.userPrivateInfo(
                                favorite_projects = [
                                    ri.apiclient.models.user_favorite_projects.userFavoriteProjects(
                                        workspace_id = ri.apiclient.models.rime_uuid.rimeUUID(
                                            uuid = '', ), 
                                        project_ids = [
                                            
                                            ], )
                                    ], ), ), 
                        user_role = 'ACTOR_ROLE_UNSPECIFIED', 
                        implicit_grant = True, )
                    ],
                next_page_token = '',
                has_more = True
            )
        else:
            return RimeListUsersOfWorkspaceResponse(
        )
        """

    def testRimeListUsersOfWorkspaceResponse(self):
        """Test RimeListUsersOfWorkspaceResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()