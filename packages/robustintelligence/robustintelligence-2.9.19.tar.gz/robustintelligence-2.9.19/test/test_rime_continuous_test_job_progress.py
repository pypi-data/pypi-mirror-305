# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.rime_continuous_test_job_progress import RimeContinuousTestJobProgress

class TestRimeContinuousTestJobProgress(unittest.TestCase):
    """RimeContinuousTestJobProgress unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RimeContinuousTestJobProgress:
        """Test RimeContinuousTestJobProgress
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RimeContinuousTestJobProgress`
        """
        model = RimeContinuousTestJobProgress()
        if include_optional:
            return RimeContinuousTestJobProgress(
                test_runs = [
                    ri.apiclient.models.rime_continuous_test_run_progress.rimeContinuousTestRunProgress(
                        test_run = ri.apiclient.models.rime_test_run_progress.rimeTestRunProgress(
                            test_run_id = '', 
                            status = 'TEST_TASK_STATUS_UNSPECIFIED', 
                            test_batches = [
                                ri.apiclient.models.test_run_progress_test_batch_progress.TestRunProgressTestBatchProgress(
                                    type = '', )
                                ], ), 
                        bin_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        bin_end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return RimeContinuousTestJobProgress(
        )
        """

    def testRimeContinuousTestJobProgress(self):
        """Test RimeContinuousTestJobProgress"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()