<?xml version='1.0' encoding='UTF-8'?>
<glyph name="uni04B0" format="2">
  <advance width="644"/>
  <unicode hex="04B0"/>
  <outline>
    <contour>
      <point x="180" y="50" type="line"/>
      <point x="272" y="50" type="line"/>
      <point x="272" y="235" type="line"/>
      <point x="129" y="235" type="line"/>
      <point x="129" y="287" type="line"/>
      <point x="269" y="287" type="line"/>
      <point x="73" y="648" type="line"/>
      <point x="21" y="648" type="line"/>
      <point x="21" y="698" type="line"/>
      <point x="272" y="698" type="line"/>
      <point x="272" y="648" type="line"/>
      <point x="186" y="648" type="line"/>
      <point x="344" y="347" type="line"/>
      <point x="348" y="347" type="line"/>
      <point x="506" y="648" type="line"/>
      <point x="420" y="648" type="line"/>
      <point x="420" y="698" type="line"/>
      <point x="623" y="698" type="line"/>
      <point x="623" y="648" type="line"/>
      <point x="571" y="648" type="line"/>
      <point x="372" y="287" type="line"/>
      <point x="516" y="287" type="line"/>
      <point x="516" y="235" type="line"/>
      <point x="373" y="235" type="line"/>
      <point x="373" y="50" type="line"/>
      <point x="464" y="50" type="line"/>
      <point x="464" y="0" type="line"/>
      <point x="180" y="0" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 28
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  16
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  16 28
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  27
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  27 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
0 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 8 27
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
4 6
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>6bf34280ef2cba6fb4af246b8cce9a001b28a1f9e78e968d42065db7b1a253e969472b23b35b59e255f33d533ee211a6759276eff974fea2383c4c5381c12612</string>
      </dict>
    </dict>
  </lib>
</glyph>
