<?xml version='1.0' encoding='UTF-8'?>
<glyph name="tugrik" format="2">
  <advance width="664"/>
  <unicode hex="20AE"/>
  <outline>
    <contour>
      <point x="189" y="50" type="line"/>
      <point x="283" y="50" type="line"/>
      <point x="283" y="181" type="line"/>
      <point x="162" y="122" type="line"/>
      <point x="162" y="177" type="line"/>
      <point x="283" y="236" type="line"/>
      <point x="283" y="334" type="line"/>
      <point x="162" y="275" type="line"/>
      <point x="162" y="330" type="line"/>
      <point x="283" y="389" type="line"/>
      <point x="283" y="644" type="line"/>
      <point x="115" y="644" type="line"/>
      <point x="115" y="527" type="line"/>
      <point x="35" y="527" type="line"/>
      <point x="35" y="698" type="line"/>
      <point x="630" y="698" type="line"/>
      <point x="630" y="527" type="line"/>
      <point x="550" y="527" type="line"/>
      <point x="550" y="644" type="line"/>
      <point x="384" y="644" type="line"/>
      <point x="384" y="438" type="line"/>
      <point x="505" y="498" type="line"/>
      <point x="505" y="443" type="line"/>
      <point x="384" y="384" type="line"/>
      <point x="384" y="286" type="line"/>
      <point x="505" y="345" type="line"/>
      <point x="505" y="290" type="line"/>
      <point x="384" y="231" type="line"/>
      <point x="384" y="50" type="line"/>
      <point x="478" y="50" type="line"/>
      <point x="478" y="0" type="line"/>
      <point x="189" y="0" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  14
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  14 28
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  31
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  31 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
0 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 6
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 31 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 3 values pushed */
0 3 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
21 11 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHW[ ]	/* 1 value pushed */
21
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 2 values pushed */
22 6
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
0 26 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
2 3 26
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
4 6
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 6
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
5 4 25
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
15 8 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
7 6
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
6 7 22
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
9 8 21
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
20 8 21
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
23 7 22
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
24 4 25
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
27 3 26
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>278e67d49582f06b402c97c5bda118026b047508bbb6b9b78957668aaabfc7ee742d9a68e5f7facaf1ea7210eae300f57e8dc122f6f2d0ca53a1daf2ad284017</string>
      </dict>
    </dict>
  </lib>
</glyph>
