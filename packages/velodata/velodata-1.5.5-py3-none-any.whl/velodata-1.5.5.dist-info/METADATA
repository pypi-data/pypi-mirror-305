Metadata-Version: 2.1
Name: velodata
Version: 1.5.5
Summary: Python library for interacting with the Velo Data API
Author-Email: Velo Data <support@velodata.app>
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Project-URL: GitHub, https://github.com/velodataorg/velo-python
Project-URL: Docs, https://velodata.gitbook.io/velo-data-api/python
Requires-Python: >=3.0
Requires-Dist: pandas
Requires-Dist: requests
Requires-Dist: websockets
Requires-Dist: asyncio
Description-Content-Type: text/markdown

# velo-python
Python library for Velo API access. [See full documentation here](https://velodata.gitbook.io/velo-data-api/python).

## Install
```
pip install velodata
```

## Usage
```python
from velodata import lib as velo

# new velo client
client = velo.client('api_key')

# get futures and pick one
future = client.get_futures()[0] 

# get futures columns and pick two
columns = client.get_futures_columns()[:2]

# last 10 minutes in 1 minute resolution
params = {
      'type': 'futures',
      'columns': columns,
      'exchanges': [future['exchange']],
      'products': [future['product']],
      'begin': client.timestamp() - 1000 * 60 * 11,
      'end': client.timestamp(),
      'resolution': '1m'
    }
    
# returns dataframe
print(client.get_rows(params))
```

## Streaming rows
Row requests are broken up into batches past a certain size. If you don't want to wait for all your requests to finish before receiving any data, you can use this:


```python
batches = client.batch_rows(params)  
for df in client.stream_rows(batches):
  print(df)
```

## License
Copyright 2023 Velo Data, license MIT
