[tool.poetry]
name = "ndarraybuffer"
version = "0.2.1"
description = "NDArray with both-side insertion/deletion and size limit"
authors = ["Zeyan Li 李则言 <lizeyan.42@bytedance.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
numpy = ">=1.21"

[tool.poetry.group.dev.dependencies]
typing-extensions = "^4.10.0"
pytest = "^8.1.1"
coverage = "^7.4.3"
pyprof = ">=1.0.0"
mypy = "^1.9.0"
pyright = "^1.1.386"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
relative_files = true

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR"
follow_imports = "silent"
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

plugins = [
    'numpy.typing.mypy_plugin',
]


[tool.pyright]
include = [
    "src",
    "tests",
]
pythonVersion = "3.10"
verboseOutput = true

reportMissingImports = "error"
reportAttributeAccessIssue = false
reportWildcardImportFromLibrary = false
reportMatchNotExhaustive = true

reportInvalidStringEscapeSequence = "error"
reportInvalidTypeVarUse = "error"
reportSelfClsParameterName = "error"
reportUnsupportedDunderAll = "error"
reportUntypedNamedTuple = "error"
reportUnusedImport = "error"
#reportMissingParameterType = "error"
reportDuplicateImport = "error"

strictListInference = true
strictDictionaryInference = true
strictSetInference = true