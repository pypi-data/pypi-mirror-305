We are building Pynions, a lean open source Python framework for building AI-powered automation workflows that run on your machine. Built for marketers who want to automate research, monitoring, and content tasks without cloud dependencies or complex setups. Perfect for personal and small team use.

Something like Zapier/n8n but for local machines.

## Key Features

- üöÄ Start small, ship fast
- üîå Easy API connections to your existing tools
- ü§ñ AI-first but not AI-only
- üì¶ Zero bloat, minimal dependencies
- üõ† Built for real marketing workflows
- ‚ö° Quick to prototype and iterate
- üåê Local-first, no cloud dependencies

## Technology

- We use Python for all code
- We use SQLite for all databases
- We use CSV for all spreadsheets
- We use YAML for all configs
- We use Markdown for all documentation (Mintlify)
- We use Pytest for testing
- Litellm for LLM API calls
- Click for CLI
- dotenv for .env file
- rich for pretty outputs
- httpx for HTTP requests

## Philosophy

- Smart and safe defaults
  - OpenAI's "gpt-4o-mini" is the default LLM
  - Serper is the default search tool
  - Perplexity is the default research tool
- No AI-only, always human in the loop
- Minimal dependencies
- No cloud dependencies
  - All tools are local
  - No need to sign up for anything (except for OpenAI API key, Serper dev API key, and Perplexity API key (optional))
- No proprietary formats
  - Pydantic for data validation
  - We use JSON for all requests and responses
  - We use YAML for all configs
  - We use Markdown for all documentation (Mintlify)
  - We use Python for all code
  - We use SQLite for all databases
  - We use CSV for all spreadsheets
- No tracking
- No telemetry
- No bullshit

## CLI

- We use Click for CLI
  - Commands: `pynions`
    - `pynions run` to run a workflow
    - `pynions new` to create a new workflow
    - `pynions list` to list all workflows
    - `pynions check` to check all workflows
    - `pynions check-all` to check all workflows and sources
- We use Rich for pretty outputs

## Documentation

- We use Mintlify for documentation
- We use GitHub Actions for CI/CD
- We use Hatch for building and packaging
- We use Pytest for testing
- We use Black for formatting
- We use Isort for sorting imports
