# Generated by Django 4.2.11 on 2024-10-24 16:01

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DetailOrographique",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("nature_detaillee", models.CharField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                ("identifiant_voie_ban", models.CharField(blank=True, null=True)),
            ],
            options={
                "db_table": "lieux_nommes_detail_orographique",
            },
        ),
        migrations.CreateModel(
            name="LieuDitNonHabite",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                ("identifiant_voie_ban", models.CharField(blank=True, null=True)),
            ],
            options={
                "db_table": "lieux_nommes_lieu_dit_non_habite",
            },
        ),
        migrations.CreateModel(
            name="ToponymieLieuxNommes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=2154
                    ),
                ),
                ("cleabs_de_l_objet", models.CharField(blank=True, null=True)),
                ("classe_de_l_objet", models.CharField(blank=True, null=True)),
                ("nature_de_l_objet", models.CharField(blank=True, null=True)),
                ("graphie_du_toponyme", models.CharField(blank=True, null=True)),
                ("source_du_toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("date_du_toponyme", models.DateField(blank=True, null=True)),
                ("langue_du_toponyme", models.CharField(blank=True, null=True)),
            ],
            options={
                "db_table": "lieux_nommes_toponymie_lieux_nommes",
            },
        ),
        migrations.CreateModel(
            name="ZoneDHabitation",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("nature_detaillee", models.CharField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("fictif", models.BooleanField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                ("identifiant_voie_ban", models.CharField(blank=True, null=True)),
            ],
            options={
                "db_table": "lieux_nommes_zone_d_habitation",
            },
        ),
    ]
