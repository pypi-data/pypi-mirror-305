# Generated by Django 4.2.11 on 2024-10-24 16:01

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Canalisation",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.LineStringField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                (
                    "position_par_rapport_au_sol",
                    models.CharField(blank=True, null=True),
                ),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "db_table": "services_et_activites_canalisation",
            },
        ),
        migrations.CreateModel(
            name="Erp",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                (
                    "id_reference",
                    models.CharField(blank=True, max_length=24, null=True),
                ),
                ("categorie", models.CharField(blank=True, null=True)),
                (
                    "type_principal",
                    models.CharField(blank=True, max_length=24, null=True),
                ),
                (
                    "types_secondaires",
                    models.CharField(blank=True, max_length=24, null=True),
                ),
                ("activite_principale", models.CharField(blank=True, null=True)),
                ("activites_secondaires", models.CharField(blank=True, null=True)),
                ("libelle", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                ("public", models.BooleanField(blank=True, null=True)),
                ("ouvert", models.BooleanField(blank=True, null=True)),
                (
                    "capacite_d_accueil_du_public",
                    models.IntegerField(blank=True, null=True),
                ),
                ("capacite_d_hebergement", models.IntegerField(blank=True, null=True)),
                ("origine_de_la_geometrie", models.CharField(blank=True, null=True)),
                ("type_de_localisation", models.CharField(blank=True, null=True)),
                ("validation_ign", models.BooleanField(blank=True, null=True)),
                (
                    "insee_commune",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                (
                    "numero_siret",
                    models.CharField(blank=True, max_length=14, null=True),
                ),
                (
                    "adresse_numero",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "adresse_indice_de_repetition",
                    models.CharField(blank=True, max_length=9, null=True),
                ),
                (
                    "adresse_designation_de_l_entree",
                    models.CharField(blank=True, null=True),
                ),
                ("adresse_nom_1", models.CharField(blank=True, null=True)),
                ("adresse_nom_2", models.CharField(blank=True, null=True)),
                ("code_postal", models.CharField(blank=True, max_length=5, null=True)),
                ("liens_vers_batiment", models.CharField(blank=True, null=True)),
                ("liens_vers_enceinte", models.CharField(blank=True, null=True)),
            ],
            options={
                "db_table": "services_et_activites_erp",
            },
        ),
        migrations.CreateModel(
            name="LigneElectrique",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.LineStringField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("voltage", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "db_table": "services_et_activites_ligne_electrique",
            },
        ),
        migrations.CreateModel(
            name="PosteDeTransformation",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "db_table": "services_et_activites_poste_de_transformation",
            },
        ),
        migrations.CreateModel(
            name="ToponymieServicesEtActivites",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=2154
                    ),
                ),
                ("cleabs_de_l_objet", models.CharField(blank=True, null=True)),
                ("classe_de_l_objet", models.CharField(blank=True, null=True)),
                ("nature_de_l_objet", models.CharField(blank=True, null=True)),
                ("graphie_du_toponyme", models.CharField(blank=True, null=True)),
                ("source_du_toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("date_du_toponyme", models.DateField(blank=True, null=True)),
                ("langue_du_toponyme", models.CharField(blank=True, null=True)),
            ],
            options={
                "db_table": "services_et_activites_toponymie_services_et_activites",
            },
        ),
        migrations.CreateModel(
            name="ZoneDActiviteOuDInteret",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("categorie", models.CharField(blank=True, null=True)),
                ("nature", models.CharField(blank=True, null=True)),
                ("nature_detaillee", models.CharField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("fictif", models.BooleanField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                ("identifiant_voie_ban", models.CharField(blank=True, null=True)),
                ("nom_commercial", models.CharField(blank=True, null=True)),
            ],
            options={
                "db_table": "services_et_activites_zone_d_activite_ou_d_interet",
            },
        ),
    ]
