# Generated by Django 4.2.11 on 2024-10-24 16:01

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Batiment",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("usage_1", models.CharField(blank=True, null=True)),
                ("usage_2", models.CharField(blank=True, null=True)),
                ("construction_legere", models.BooleanField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                ("nombre_de_logements", models.IntegerField(blank=True, null=True)),
                ("nombre_d_etages", models.IntegerField(blank=True, null=True)),
                (
                    "materiaux_des_murs",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "materiaux_de_la_toiture",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "hauteur",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                (
                    "altitude_minimale_sol",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                (
                    "altitude_minimale_toit",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                (
                    "altitude_maximale_toit",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                (
                    "altitude_maximale_sol",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                ("origine_du_batiment", models.CharField(blank=True, null=True)),
                (
                    "appariement_fichiers_fonciers",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
            ],
            options={
                "db_table": "bati_batiment",
            },
        ),
        migrations.CreateModel(
            name="Cimetiere",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("nature_detaillee", models.CharField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bati_cimetiere",
            },
        ),
        migrations.CreateModel(
            name="ConstructionLineaire",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.LineStringField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("nature_detaillee", models.CharField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bati_construction_lineaire",
            },
        ),
        migrations.CreateModel(
            name="ConstructionPonctuelle",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("nature_detaillee", models.CharField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "hauteur",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bati_construction_ponctuelle",
            },
        ),
        migrations.CreateModel(
            name="ConstructionSurfacique",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("nature_detaillee", models.CharField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("importance", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bati_construction_surfacique",
            },
        ),
        migrations.CreateModel(
            name="LigneOrographique",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.LineStringField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bati_ligne_orographique",
            },
        ),
        migrations.CreateModel(
            name="Pylone",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "hauteur",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bati_pylone",
            },
        ),
        migrations.CreateModel(
            name="Reservoir",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "altitude_minimale_sol",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                (
                    "altitude_minimale_toit",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                (
                    "hauteur",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                (
                    "altitude_maximale_toit",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                (
                    "altitude_maximale_sol",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=7, null=True
                    ),
                ),
                ("origine_du_batiment", models.CharField(blank=True, null=True)),
                ("volume", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "bati_reservoir",
            },
        ),
        migrations.CreateModel(
            name="TerrainDeSport",
            fields=[
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, dim=3, null=True, srid=2154
                    ),
                ),
                (
                    "cleabs",
                    models.CharField(max_length=24, primary_key=True, serialize=False),
                ),
                ("nature", models.CharField(blank=True, null=True)),
                ("nature_detaillee", models.CharField(blank=True, null=True)),
                ("etat_de_l_objet", models.CharField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(blank=True, null=True)),
                ("date_modification", models.DateTimeField(blank=True, null=True)),
                ("date_d_apparition", models.DateField(blank=True, null=True)),
                ("date_de_confirmation", models.DateField(blank=True, null=True)),
                ("sources", models.CharField(blank=True, null=True)),
                ("identifiants_sources", models.CharField(blank=True, null=True)),
                (
                    "methode_d_acquisition_planimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_planimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                (
                    "methode_d_acquisition_altimetrique",
                    models.CharField(blank=True, null=True),
                ),
                (
                    "precision_altimetrique",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "db_table": "bati_terrain_de_sport",
            },
        ),
        migrations.CreateModel(
            name="ToponymieBati",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "geometrie",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=2154
                    ),
                ),
                ("cleabs_de_l_objet", models.CharField(blank=True, null=True)),
                ("classe_de_l_objet", models.CharField(blank=True, null=True)),
                ("nature_de_l_objet", models.CharField(blank=True, null=True)),
                ("graphie_du_toponyme", models.CharField(blank=True, null=True)),
                ("source_du_toponyme", models.CharField(blank=True, null=True)),
                ("statut_du_toponyme", models.CharField(blank=True, null=True)),
                ("date_du_toponyme", models.DateField(blank=True, null=True)),
                ("langue_du_toponyme", models.CharField(blank=True, null=True)),
            ],
            options={
                "db_table": "bati_toponymie_bati",
            },
        ),
    ]
