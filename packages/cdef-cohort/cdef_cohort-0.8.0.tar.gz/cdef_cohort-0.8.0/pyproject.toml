[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[project]
name = "cdef_cohort"
dynamic = ["version", "readme", "urls"]
description = "Add your description here"
authors = [
    { name = "Tobias Kragholm", email = "50784887+tkragholm@users.noreply.github.com" },
]
dependencies = [
    "polars[all]>=1.9.0",
    "rich>=13.9.2",
    "pydantic[mypy]>=2.9.2",
    "pydantic-settings>=2.5.2",
    "imohash>=1.1.0",
    "matplotlib>=3.9.2",
    "seaborn[stats]>=0.13.2",
    "plotly>=5.24.1",
    "plotly-geo>=1.0.0",
    "lifelines>=0.29.0",
    "tqdm>=4.66.5",
]
requires-python = ">= 3.12"
license = "MIT"

[project.scripts]
main = "cdef_cohort.main:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "src/cdef_cohort/_version.py"

[tool.hatch.metadata.hooks.vcs.urls]
"Source Code" = "https://github.com/LGS-Research-Group/cdef-cohort-generation/tree/{commit_hash}"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
pattern = '\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)\]'
replacement = '**\1**:'

[tool.hatch.metadata.hooks.vcs]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/cdef_cohort"]

[tool.hatch.build.targets.wheel.package-data]
"cdef_cohort" = ["mappings/*.json", ".env.example"]


[tool.rye]
universal = true
managed = true
dev-dependencies = [
    "mypy>=1.11.2",
    "pytest>=8.3.3",
    "hatch-vcs",
    "hatch-fancy-pypi-readme",
    "pdoc>=15.0.0",
]

[tool.rye.scripts]
clean-and-run = { chain = ["clean:data", "cdef-cohort-generation"] }
"clean:data" = "rm -rf /Users/tobiaskragholm/dev/TEST_RUN/data/*"
test = "pytest tests/"
static = "mypy --strict src/"


[tool.ruff]
line-length = 120
target-version = "py312"
fix = true

[tool.ruff.lint]
select = ["E", "B", "F", "UP", "I001", "T203"]

[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
strict_equality = true
warn_return_any = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
