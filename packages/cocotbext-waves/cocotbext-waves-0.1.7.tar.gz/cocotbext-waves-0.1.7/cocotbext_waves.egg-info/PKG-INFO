Metadata-Version: 2.1
Name: cocotbext-waves
Version: 0.1.7
Summary: CocotbExt Wavedrom diagram generator
Home-page: https://github.com/aignacio/cocotbext-waves
Author: aignacio (Anderson Ignacio)
Author-email: <anderson@aignacio.com>
License: MIT
Project-URL: Bug Tracker, https://github.com/aignacio/cocotbext-waves/issues
Project-URL: Source Code, https://github.com/aignacio/cocotbext-waves
Keywords: soc,vip,hdl,verilog,systemverilog,wavedrom
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: cocotb
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Provides-Extra: test
License-File: LICENSE


[![Lint > Tests > Publish](https://github.com/aignacio/cocotbext-waves/actions/workflows/run.yaml/badge.svg)](https://github.com/aignacio/cocotbext-waves/actions/workflows/run.yaml)

# Cocotb Waves

## Table of Contents
* [Introduction](#intro)
* [Installation](#install)
* [Usage](#usage)

## <a name="intro"></a> Introduction

This repository contains wavedrom svg generator for [cocotb](https://github.com/cocotb/cocotb) sims.

## <a name="install"></a> Installation

Installation from pip (release version, stable):
```bash
$ pip install cocotbext-waves
```

## <a name="usage"></a> Usage

Example sampling AHB signals using [`cocotbext-ahb`](https://github.com/aignacio/cocotbext-ahb).

```python
from cocotbext.waves import waveform

...

waves = waveform(
    clk=dut.hclk, name="ahb_test", hscale=3, debug=True
)
waves.add_signal(
    [
        dut.hsel,
        dut.haddr,
        dut.hburst,
        dut.hsize,
        dut.htrans,
        dut.hwdata,
        dut.hwrite,
        dut.hready_in,
    ],
    group="MOSI",
)
waves.add_signal(
    [
        dut.hrdata,
        dut.hready,
        dut.hresp,
    ],
    group="MISO",
)
...
<Running sim, issuing txns>
...
waves.save()
waves.save_txt()
```

**Output:**

![ahb](ahb_test.svg)


