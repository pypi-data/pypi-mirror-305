Metadata-Version: 2.1
Name: xeofs
Version: 3.0.4
Summary: Comprehensive EOF analysis in Python with xarray: A versatile, multidimensional, and scalable tool for advanced climate data analysis
Author-email: Niclas Rieger <niclasrieger@gmail.com>, "Samuel J. Levang" <slevang@gmail.com>
License: MIT
Project-URL: homepage, https://github.com/xarray-contrib/xeofs
Project-URL: repository, https://github.com/xarray-contrib/xeofs
Project-URL: documentation, https://xeofs.readthedocs.io/en/latest/
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy >=1.24
Requires-Dist: pandas >=2
Requires-Dist: xarray >=2024.10.0
Requires-Dist: scikit-learn >=1.0.2
Requires-Dist: tqdm >=4.64.0
Requires-Dist: dask >=2023.0.1
Requires-Dist: typing-extensions >=4.8.0
Provides-Extra: complete
Requires-Dist: xeofs[etc,io] ; extra == 'complete'
Provides-Extra: dev
Requires-Dist: build >=1.0.0 ; extra == 'dev'
Requires-Dist: ruff >=0.3 ; extra == 'dev'
Requires-Dist: pytest >=7 ; extra == 'dev'
Requires-Dist: pytest-xdist >=3 ; extra == 'dev'
Requires-Dist: coverage >=6 ; extra == 'dev'
Requires-Dist: pre-commit >=3 ; extra == 'dev'
Requires-Dist: nbstripout >=0.6 ; extra == 'dev'
Requires-Dist: pooch >=1.6.0 ; extra == 'dev'
Provides-Extra: docs
Requires-Dist: rpy2 >=3.5 ; extra == 'docs'
Requires-Dist: sphinx-gallery >=0.14 ; extra == 'docs'
Requires-Dist: sphinx-design >=0.6 ; extra == 'docs'
Requires-Dist: sphinx-copybutton >=0.5 ; extra == 'docs'
Requires-Dist: nbsphinx >=0.9 ; extra == 'docs'
Requires-Dist: pydata-sphinx-theme >=0.15 ; extra == 'docs'
Requires-Dist: sphinx >=8 ; extra == 'docs'
Requires-Dist: nbconvert >=7.9 ; extra == 'docs'
Requires-Dist: myst-parser >=3.0 ; extra == 'docs'
Requires-Dist: matplotlib >=3.4 ; extra == 'docs'
Requires-Dist: seaborn >=0.11 ; extra == 'docs'
Requires-Dist: cartopy >=0.22 ; extra == 'docs'
Requires-Dist: pooch >=1.6.0 ; extra == 'docs'
Requires-Dist: ipython >=8.14 ; extra == 'docs'
Requires-Dist: ipykernel >=6.23 ; extra == 'docs'
Provides-Extra: etc
Requires-Dist: numba >=0.57 ; extra == 'etc'
Requires-Dist: statsmodels >=0.14.0 ; extra == 'etc'
Provides-Extra: io
Requires-Dist: h5netcdf >=1.0.0 ; extra == 'io'
Requires-Dist: netcdf4 >=1.5.8 ; extra == 'io'
Requires-Dist: zarr >=2.14.0 ; extra == 'io'

![xeofs logo](docs/logos/xeofs_logo_dark.png)

<p align="center">

| Versions                   | [![PyPI](https://img.shields.io/pypi/v/xeofs)](https://pypi.org/project/xeofs/) [![Conda](https://img.shields.io/conda/vn/conda-forge/xeofs)](https://anaconda.org/conda-forge/xeofs) |
|----------------------------|:---------------------------------------------------------------------------------------------:|
| Build & Testing            | [![Build](https://img.shields.io/github/actions/workflow/status/xarray-contrib/xeofs/ci.yml?branch=main)](https://github.com/xarray-contrib/xeofs/actions/workflows/ci.yml) [![codecov](https://codecov.io/github/nicrie/xeofs/branch/main/graph/badge.svg?token=8040ZDH6U7)](https://codecov.io/github/nicrie/xeofs) |
| Code Quality               | ![Black](https://img.shields.io/badge/code%20style-black-000000.svg)   [![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v0.json)](https://github.com/charliermarsh/ruff)                           |
| Documentation              | [![Docs](https://readthedocs.org/projects/xeofs/badge/?version=latest)](https://xeofs.readthedocs.io/en/latest/index.html)                          |
| Citation                   | [![JOSS](https://joss.theoj.org/papers/4f50349ee1777b8a61761183047b1180/status.svg)](https://joss.theoj.org/papers/4f50349ee1777b8a61761183047b1180) [![Zenodo](https://zenodo.org/badge/DOI/10.5281/zenodo.6323012.svg)](https://zenodo.org/doi/10.5281/zenodo.6323011) 
| Licensing                  |  [![License](https://img.shields.io/pypi/l/xeofs)](https://github.com/xarray-contrib/xeofs/blob/main/LICENSE) |
| User Engagement            | ![Downloads](https://img.shields.io/pypi/dw/xeofs)                                          |

</p>

## Overview

`xeofs` is a specialized Python package designed for dimensionality reduction in climate science, aimed at extracting meaningful patterns from large datasets. It provides eigenmethods such as Principal Component Analysis (EOF analysis) and several related variants. Seamlessly integrated with [xarray](https://docs.xarray.dev/en/stable/) and [Dask](https://www.dask.org/), xeofs enables efficient handling and scalable computation of large, multi-dimensional datasets. 

- **Multi-Dimensional**: Designed for `xarray` objects, it applies dimensionality reduction to multi-dimensional data while maintaining data labels.
- **Dask-Integrated**: Supports large datasets via `Dask` xarray objects
- **Extensive Methods**: Offers various dimensionality reduction techniques
- **Adaptable Output**: Provides output corresponding to the type of input, whether single or list of `xr.DataArray` or `xr.Dataset`
- **Missing Values**: Handles `NaN` values within the data
- **Bootstrapping**: Comes with a user-friendly interface for model evaluation using bootstrapping
- **Efficient**: Ensures computational efficiency, particularly with large datasets through randomized SVD
- **Modular**: Allows users to implement and incorporate new dimensionality reduction methods

## Installation

To install the package, use either of the following commands:

```bash
conda install -c conda-forge xeofs
```

or

```bash
pip install xeofs
```

## Quickstart

In order to get started with `xeofs`, follow these simple steps:

**Import the package**
    
```python
>>> import xarray as xr  # for example data only
>>> import xeofs as xe

```

**Load example data**

```python
>>> t2m = xr.tutorial.open_dataset("air_temperature")
>>> t2m_west = t2m.isel(lon=slice(None, 20))
>>> t2m_east = t2m.isel(lon=slice(21, None))

```

**EOF analysis**
Initiate and fit the EOF/PCA model to the data

```python
>>> eof = xe.single.EOF(n_modes=10)
>>> eof.fit(t2m, dim="time")  # doctest: +ELLIPSIS
<xeofs.single.eof.EOF object at ...>

```
Now, you can access the model's EOF components and PC scores:

```py
>>> comps = eof.components()  # EOFs (spatial patterns)
>>> scores = eof.scores()  # PCs (temporal patterns)

```

**Varimax-rotated EOF analysis**
Initiate and fit an `EOFRotator` class to the model to obtain a varimax-rotated EOF analysis

```python
>>> rotator = xe.single.EOFRotator(n_modes=3)
>>> rotator.fit(eof) # doctest: +ELLIPSIS
<xeofs.single.eof_rotator.EOFRotator object at ...>

>>> rot_comps = rotator.components()  # Rotated EOFs (spatial patterns)
>>> rot_scores = rotator.scores()  # Rotated PCs (temporal patterns)

```

**Maximum Covariance Analysis (MCA)**

```python
>>> mca = xe.cross.MCA(n_modes=10)
>>> mca.fit(t2m_west, t2m_east, dim="time")  # doctest: +ELLIPSIS
<xeofs.cross.mca.MCA object at ...>

>>> comps1, comps2 = mca.components()  # Singular vectors (spatial patterns)
>>> scores1, scores2 = mca.scores()  # Expansion coefficients (temporal patterns)

```

**Varimax-rotated MCA**

```python
>>> rotator = xe.cross.MCARotator(n_modes=10)
>>> rotator.fit(mca)  # doctest: +ELLIPSIS
<xeofs.cross.mca_rotator.MCARotator object at ...>

>>> rot_comps = rotator.components()  # Rotated singular vectors (spatial patterns)
>>> rot_scores = rotator.scores()  # Rotated expansion coefficients (temporal patterns)

```

To further explore the capabilities of `xeofs`, check out the [available documentation](https://xeofs.readthedocs.io/en/latest/) and [examples](https://xeofs.readthedocs.io/en/latest/auto_examples/index.html).
For a full list of currently available methods, see the [Reference API](https://xeofs.readthedocs.io/en/latest/api.html).

## Documentation

For a more comprehensive overview and usage examples, visit the [documentation](https://xeofs.readthedocs.io/en/latest/).

## Contributing

Contributions are highly welcomed and appreciated. If you're interested in improving `xeofs` or fixing issues, please read our [Contributing Guide](https://xeofs.readthedocs.io/en/latest/overview_3_contributing.html).

## License

This project is licensed under the terms of the [MIT license](https://github.com/xarray-contrib/xeofs/blob/main/LICENSE).

## Contact

For questions or support, please open a [Github issue](https://github.com/xarray-contrib/xeofs/issues).

## Credits

- Randomized PCA: [scikit-learn](https://scikit-learn.org/stable/)
- EOF analysis: Python package [eofs](https://github.com/ajdawson/eofs) by Andrew Dawson
- MCA: Python package [xMCA](https://github.com/Yefee/xMCA) by Yefee
- CCA: Python package [CCA-Zoo](https://github.com/jameschapman19/cca_zoo) by James Chapman
- ROCK-PCA: Matlab implementation by [Diego Bueso](https://github.com/DiegoBueso/ROCK-PCA)
- Sparse PCA: Based on [Ristretto](https://github.com/erichson/ristretto) library by Benjamin Erichson

## How to cite?

When using `xeofs`, kindly remember to cite the original references of the methods employed in your work. Additionally, if `xeofs` is proving useful in your research, we'd appreciate if you could acknowledge its use with the following citation:

```bibtex
@article{rieger_xeofs_2024,
author = {Rieger, Niclas and Levang, Samuel J.},
doi = {10.21105/joss.06060},
journal = {Journal of Open Source Software},
month = jan,
number = {93},
pages = {6060},
title = {{xeofs: Comprehensive EOF analysis in Python with xarray}},
url = {https://joss.theoj.org/papers/10.21105/joss.06060},
volume = {9},
year = {2024}
}
```

## Contributors

[![Contributors](https://contrib.rocks/image?repo=xarray-contrib/xeofs)](https://github.com/xarray-contrib/xeofs/graphs/contributors)
