{
  "hash": "861980f3cdbad01f27564c8e5f7ff7d0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: report.iplot\n---\n\n\n\n`report.iplot(models, alpha=0.05, figsize=None, yintercept=None, xintercept=None, rotate_xticks=0, title=None, coord_flip=True, keep=None, drop=None, exact_match=False, plot_backend='lets_plot', labels=None, ax=None, joint=None, seed=None)`\n\nPlot model coefficients for variables interacted via \"i()\" syntax, with\nconfidence intervals.\n\n## Parameters\n\n| Name            | Type                           | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | Default       |\n|-----------------|--------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------|\n| `models`        | list or object                 | A list of fitted models of type `Feols` or `Fepois`, or just a single model.                                                                                                                                                                                                                                                                                                                                                                                                | _required_    |\n| `figsize`       | tuple or None                  | The size of the figure. If None, the default size is used.                                                                                                                                                                                                                                                                                                                                                                                                                  | `None`        |\n| `alpha`         | float                          | The significance level for the confidence intervals.                                                                                                                                                                                                                                                                                                                                                                                                                        | `0.05`        |\n| `yintercept`    | int or None                    | The value at which to draw a horizontal line on the plot.                                                                                                                                                                                                                                                                                                                                                                                                                   | `None`        |\n| `xintercept`    | int or None                    | The value at which to draw a vertical line on the plot.                                                                                                                                                                                                                                                                                                                                                                                                                     | `None`        |\n| `rotate_xticks` | float                          | The angle in degrees to rotate the xticks labels. Default is 0 (no rotation).                                                                                                                                                                                                                                                                                                                                                                                               | `0`           |\n| `title`         | str                            | The title of the plot.                                                                                                                                                                                                                                                                                                                                                                                                                                                      | `None`        |\n| `coord_flip`    | bool                           | Whether to flip the coordinates of the plot. Default is True.                                                                                                                                                                                                                                                                                                                                                                                                               | `True`        |\n| `keep`          | Optional\\[Union\\[list, str\\]\\] | The pattern for retaining coefficient names. You can pass a string (one pattern) or a list (multiple patterns). Default is keeping all coefficients. You should use regular expressions to select coefficients.     \"age\",            # would keep all coefficients containing age     r\"^tr\",           # would keep all coefficients starting with tr     r\"\\\\d$\",          # would keep all coefficients ending with number Output will be in the order of the patterns. | `None`        |\n| `drop`          | Optional\\[Union\\[list, str\\]\\] | The pattern for excluding coefficient names. You can pass a string (one pattern) or a list (multiple patterns). Syntax is the same as for `keep`. Default is keeping all coefficients. Parameter `keep` and `drop` can be used simultaneously.                                                                                                                                                                                                                              | `None`        |\n| `exact_match`   | bool                           | Whether to use exact match for `keep` and `drop`. Default is False. If True, the pattern will be matched exactly to the coefficient name instead of using regular expressions.                                                                                                                                                                                                                                                                                              | `False`       |\n| `plot_backend`  | str                            | The plotting backend to use between \"lets_plot\" (default) and \"matplotlib\".                                                                                                                                                                                                                                                                                                                                                                                                 | `'lets_plot'` |\n| `labels`        | Optional\\[dict\\]               | A dictionary to relabel the variables. The keys are the original variable names and the values the new names. The renaming is applied after the selection of the coefficients via `keep` and `drop`.                                                                                                                                                                                                                                                                        | `None`        |\n| `joint`         | Optional\\[Union\\[str, bool\\]\\] | Whether to plot simultaneous confidence bands for the coefficients. If True, simultaneous confidence bands are plotted. If False, \"standard\" confidence intervals are plotted. If \"both\", both are plotted in one figure. Default is None, which returns the standard confidence intervals. Note that this option is not available for objects of type `FixestMulti`, i.e. multiple estimation.                                                                             | `None`        |\n| `seed`          | Optional\\[int\\]                | The seed for the random number generator. Default is None. Only required / used when `joint` is True.                                                                                                                                                                                                                                                                                                                                                                       | `None`        |\n\n## Returns\n\n| Type   | Description         |\n|--------|---------------------|\n| object | A lets-plot figure. |\n\n## Examples\n\n\n::: {#a1b3198c .cell execution_count=1}\n``` {.python .cell-code}\nimport pyfixest as pf\nfrom pyfixest.report.utils import rename_categoricals\n\ndf = pf.get_data()\nfit1 = pf.feols(\"Y ~ i(f1)\", data = df)\nfit2 = pf.feols(\"Y ~ i(f1) + X2\", data = df)\nfit3 = pf.feols(\"Y ~ i(f1) + X2 | f2\", data = df)\n\npf.iplot([fit1, fit2, fit3], labels = rename_categoricals(fit1._coefnames))\n\npf.iplot([fit1], joint = \"both\")\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"sIOXw8\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.4.1/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"sIOXw8\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"sIOXw8\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"haZbn7\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.4.1/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"haZbn7\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"haZbn7\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n   <div id=\"h7D8wi\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n       (function() {\n           var plotSpec={\n\"data\":{\n\"Coefficient\":[\"C(f1)[T.1.0]\",\"C(f1)[T.2.0]\",\"C(f1)[T.3.0]\",\"C(f1)[T.4.0]\",\"C(f1)[T.5.0]\",\"C(f1)[T.6.0]\",\"C(f1)[T.7.0]\",\"C(f1)[T.8.0]\",\"C(f1)[T.9.0]\",\"C(f1)[T.10.0]\",\"C(f1)[T.11.0]\",\"C(f1)[T.12.0]\",\"C(f1)[T.13.0]\",\"C(f1)[T.14.0]\",\"C(f1)[T.15.0]\",\"C(f1)[T.16.0]\",\"C(f1)[T.17.0]\",\"C(f1)[T.18.0]\",\"C(f1)[T.19.0]\",\"C(f1)[T.20.0]\",\"C(f1)[T.21.0]\",\"C(f1)[T.22.0]\",\"C(f1)[T.23.0]\",\"C(f1)[T.24.0]\",\"C(f1)[T.25.0]\",\"C(f1)[T.26.0]\",\"C(f1)[T.27.0]\",\"C(f1)[T.28.0]\",\"C(f1)[T.29.0]\",\"C(f1)[T.1.0]\",\"C(f1)[T.2.0]\",\"C(f1)[T.3.0]\",\"C(f1)[T.4.0]\",\"C(f1)[T.5.0]\",\"C(f1)[T.6.0]\",\"C(f1)[T.7.0]\",\"C(f1)[T.8.0]\",\"C(f1)[T.9.0]\",\"C(f1)[T.10.0]\",\"C(f1)[T.11.0]\",\"C(f1)[T.12.0]\",\"C(f1)[T.13.0]\",\"C(f1)[T.14.0]\",\"C(f1)[T.15.0]\",\"C(f1)[T.16.0]\",\"C(f1)[T.17.0]\",\"C(f1)[T.18.0]\",\"C(f1)[T.19.0]\",\"C(f1)[T.20.0]\",\"C(f1)[T.21.0]\",\"C(f1)[T.22.0]\",\"C(f1)[T.23.0]\",\"C(f1)[T.24.0]\",\"C(f1)[T.25.0]\",\"C(f1)[T.26.0]\",\"C(f1)[T.27.0]\",\"C(f1)[T.28.0]\",\"C(f1)[T.29.0]\"],\n\"Estimate\":[2.5442879837380556,-1.6346807837677444,-0.46398054159364766,-1.7627122198272638,1.4348086119364798,-0.8992225420858181,0.8901916963536635,-0.4708119794251315,0.08392895661938181,0.2887817438084839,1.2881639264088718,0.6873080715508432,1.8043009738995928,-0.21656684189387726,1.390369881952681,2.2404780654367857,-0.3263697830683051,1.652082354120209,0.5883570616384417,2.7916074868998453,-1.4464082114876387,-1.0659170994410565,-0.5480905346838362,-0.9775601740834312,-1.7019175178822936,1.075012754109473,-0.48200420903080204,1.5173786526283055,0.21151214409505373,2.5442879837380556,-1.6346807837677444,-0.46398054159364766,-1.7627122198272638,1.4348086119364798,-0.8992225420858181,0.8901916963536635,-0.4708119794251315,0.08392895661938181,0.2887817438084839,1.2881639264088718,0.6873080715508432,1.8043009738995928,-0.21656684189387726,1.390369881952681,2.2404780654367857,-0.3263697830683051,1.652082354120209,0.5883570616384417,2.7916074868998453,-1.4464082114876387,-1.0659170994410565,-0.5480905346838362,-0.9775601740834312,-1.7019175178822936,1.075012754109473,-0.48200420903080204,1.5173786526283055,0.21151214409505373],\n\"2.5%\":[1.6988810797044176,-2.5213510250223585,-1.3779393065398144,-2.6556933609461773,0.4770952921754974,-1.8291701365228201,-0.009423320741525631,-1.3574822206797454,-0.7967298916533314,-0.59788849744613,0.38854890931368247,-0.24263952288615898,0.8825710451114389,-1.1552192837893145,0.46042228751567893,1.3538078241821718,-1.2742601424462934,0.7591012130012955,-0.34159053279856044,1.9622034224441056,-2.339389352606552,-1.9301363487581438,-1.5394180012195637,-1.8771751911786203,-2.70609209657718,0.11729943434849055,-1.4119518034678042,0.6675596211308418,-0.7363782152829347,1.2369970510403712,-3.005779081113686,-1.8772763173591098,-3.143569347069671,-0.04614681091811512,-2.3372425680532714,-0.5009236933550757,-1.8419102767710736,-1.2778736518687734,-1.0823165535374581,-0.10295146329986782,-0.7507119544166102,0.37898829600254635,-1.6680475671986947,-0.0476501440147723,0.8693797680908439,-1.792135517999053,0.2712252268778015,-0.8496629643290117,1.509062468835441,-2.8272653387300464,-2.4022984125159192,-2.081025033033709,-2.368675563792171,-3.2547180868271495,-0.40594266874512197,-1.9200242349982557,0.20326504767676834,-1.2542535908356942],\n\"97.5%\":[3.389694887771694,-0.7480105425131305,0.44997822335251925,-0.8697310787083503,2.392521931697462,0.030725052351184057,1.7898067134488524,0.41585826182948255,0.9645878048920951,1.175451985063098,2.1877789435040613,1.6172556659878454,2.7260309026877465,0.7220856000015601,2.3203174763896834,3.1271483066913994,0.6215205763096832,2.5450634952391225,1.5183046560754438,3.621011551355585,-0.5534270703687251,-0.20169785012396924,0.4432369318518914,-0.077945156988242,-0.697742939187407,2.0327260738704553,0.4479433854062002,2.3671976841257694,1.1594025034730422,3.85157891643574,-0.2635824864218026,0.9493152341718146,-0.3818550925848563,2.9157640347910747,0.5387974838816353,2.2813070860624025,0.9002863179208105,1.4457315651075369,1.659880041154426,2.6792793161176114,2.1253280975182967,3.2296136517966394,1.23491388341094,2.8283899079201342,3.6115763627827278,1.1393959518624426,3.0329394813626163,2.026377087605895,4.07415250496425,-0.06555108424523115,0.27046421363380624,0.9848439636660365,0.41355521562530817,-0.14911694893743754,2.555968176964068,0.9560158169366515,2.8314922575798427,1.6772778790258018],\n\"Model\":[\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0%\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\",\"Y~i(f1): 95.0% joint CIs\"]\n},\n\"mapping\":{\n\"x\":\"Coefficient\",\n\"y\":\"Estimate\",\n\"color\":\"Model\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"int\",\n\"column\":\"level_0\"\n},{\n\"type\":\"int\",\n\"column\":\"index\"\n},{\n\"type\":\"str\",\n\"column\":\"Coefficient\"\n},{\n\"type\":\"float\",\n\"column\":\"Estimate\"\n},{\n\"type\":\"float\",\n\"column\":\"Std. Error\"\n},{\n\"type\":\"float\",\n\"column\":\"t value\"\n},{\n\"type\":\"float\",\n\"column\":\"Pr(>|t|)\"\n},{\n\"type\":\"float\",\n\"column\":\"2.5%\"\n},{\n\"type\":\"float\",\n\"column\":\"97.5%\"\n},{\n\"type\":\"str\",\n\"column\":\"Model\"\n}]\n},\n\"guides\":{\n\"y\":{\n\"title\":\"Estimate and 95.0% Confidence Interval\"\n}\n},\n\"coord\":{\n\"name\":\"flip\",\n\"flip\":true\n},\n\"ggsize\":{\n\"width\":500.0,\n\"height\":300.0\n},\n\"theme\":{\n\"axis_text_x\":{\n\"angle\":0.0,\n\"blank\":false\n}\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"point\",\n\"mapping\":{\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"errorbar\",\n\"mapping\":{\n\"ymin\":\"2.5%\",\n\"ymax\":\"97.5%\"\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"width\":0.05,\n\"data\":{\n}\n}],\n\"metainfo_list\":[]\n};\n           var plotContainer = document.getElementById(\"h7D8wi\");\n           window.letsPlotCall(function() {{\n               LetsPlot.buildPlotFromProcessedSpecs(plotSpec, -1, -1, plotContainer);\n           }});\n       })();\n   </script>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "report.iplot_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}