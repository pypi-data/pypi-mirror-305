{
  "hash": "4453104a15d58166c67975256b665724",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: estimation.estimation.feols\n---\n\n\n\n`estimation.estimation.feols(fml, data, vcov=None, weights=None, ssc=ssc(), fixef_rm='none', fixef_tol=1e-08, collin_tol=1e-10, drop_intercept=False, i_ref1=None, copy_data=True, store_data=True, lean=False, weights_type='aweights', use_compression=False, reps=100, seed=None)`\n\nEstimate a linear regression models with fixed effects using fixest formula syntax.\n\n## Parameters\n\n| Name              | Type                           | Description| Default      |\n|-------------------|--------------------------------||--------------|\n| `fml`             | str                            | A three-sided formula string using fixest formula syntax. Syntax: \"Y ~ X1 + X2 \\| FE1 + FE2 \\| X1 ~ Z1\". \"\\|\" separates dependent variable, fixed effects, and instruments. Special syntax includes stepwise regressions, cumulative stepwise regression, multiple dependent variables, interaction of variables (i(X1,X2)), and interacted fixed effects (fe1^fe| _required_   |\n| `data`            | DataFrameType                  | A pandas or polars dataframe containing the variables in the formula| _required_   |\n| `vcov`            | Union\\[str, dict\\[str, str\\]\\] | Type of variance-covariance matrix for inference. Options include \"iid\", \"hetero\", \"HC1\", \"HC2\", \"HC3\", or a dictionary for CRV1/CRV3 inference| `None`       |\n| `weights`         | Union\\[None, str\\], optional.  | Default is None. Weights for WLS estimation. If None, all observations are weighted equally. If a string, the name of the column in `data` that contains the weights| `None`       |\n| `ssc`             | str                            | A ssc object specifying the small sample correction for inference| `ssc()`      |\n| `fixef_rm`        | str                            | Specifies whether to drop singleton fixed effects. Options: \"none\" (default), \"singleton| `'none'`     |\n| `collin_tol`      | float                          | Tolerance for collinearity check, by default 1e| `1e-10`      |\n| `fixef_tol`       |                                | Tolerance for the fixed effects demeaning algorithm. Defaults to 1e| `1e-08`      |\n| `drop_intercept`  | bool                           | Whether to drop the intercept from the model, by default False.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | `False`      |\n| `i_ref1`          |                                | Deprecated with pyfixest version 0.18.0. Please use i-syntax instead, i.e. feols('Y~ i(f1, ref=1)', data = data) instead of the former feols('Y~ i(f1)', data = data, i_ref| `None`       |\n| `copy_data`       | bool                           | Whether to copy the data before estimation, by default True. If set to False, the data is not copied, which can save memory but may lead to unintended changes in the input data outside of `fepois`. For example, the input data set is re-index within the function. As far as I know, the only other relevant case is when using interacted fixed effects, in which case you'll find a column with interacted fixed effects in the data set| `True`       |\n| `store_data`      | bool                           | Whether to store the data in the model object, by default True. If set to False, the data is not stored in the model object, which can improve performance and save memory. However, it will no longer be possible to access the data via the `data` attribute of the model object. This has impact on post-estimation capabilities that rely on the data, e.g. `predict()` or `vcov()`| `True`       |\n| `lean`            | bool                           | False by default. If True, then all large objects are removed from the returned result: this will save memory but will block the possibility to use many methods. It is recommended to use the argument vcov to obtain the appropriate standard-errors at estimation time, since obtaining different SEs won't be possible afterwards| `False`      |\n| `weights_type`    | str                            | Options include `aweights` or `fweights`. `aweights` implement analytic or precision weights, while `fweights` implement frequency weights. For details see this blog post: https://notstatschat.rbind.io/2020/08/04/weights-in-statistics| `'aweights'` |\n| `use_compression` | bool                           | Whether to use sufficient statistics to losslessly fit the regression model on compressed data. False by default. If True, the model is estimated on compressed data, which can lead to a significant speed-up for large data sets. See the paper by Wong et al (2021) for more details https://arxiv.org/abs/2102.11297. Note that if `use_compression = True`, inference is lossless. If standard errors are clustered, a wild cluster bootstrap is employed. Parameters for the wild bootstrap can be specified via the `reps` and `seed` arguments. Additionally, note that for one-way fixed effects, the estimation method uses a Mundlak transform to \"control\" for the fixed effects. For two-way fixed effects, a two-way Mundlak transform is employed. For two-way fixed effects, the Mundlak transform is only identical to a two-way fixed effects model if the data set is a panel. We do not provide any checks for the panel status of the data set. | `False`      |\n| `reps`            | int                            | Number of bootstrap repetitions. Only relevant for boostrap inference applied to compute cluster robust errors when `use_compression = True`| `100`        |\n| `seed`            | Optional\\[int\\]                | Seed for the random number generator. Only relevant for boostrap inference applied to compute cluster robust errors when `use_compression = True`| `None`       |\n\n## Returns\n\n| Type   | Description                                                                                                           |\n|--------|-----------------------------------------------------------------------------------------------------------------------|\n| object | An instance of the [Feols(/reference/Feols.qmd) class or `FixestMulti` class for multiple models specified via `fml`. |\n\n## Examples\n\nAs in `fixest`, the [Feols(/reference/Feols.qmd) function can be used to\nestimate a simple linear regression model with fixed effects.\nThe following example regresses `Y` on `X1` and `X2` with fixed effects for\n`f1` and `f2`: fixed effects are specified after the `|` symbol.\n\n\n::: {#0ccb02b7 .cell execution_count=1}\n``` {.python .cell-code}\nimport pyfixest as pf\n\ndata = pf.get_data()\n\nfit = pf.feols(\"Y ~ X1 + X2 | f1 + f2\", data)\nfit.summary()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"sza7bb\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.4.1/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"sza7bb\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"sza7bb\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"d50OGu\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.4.1/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"d50OGu\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"d50OGu\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: f1+f2\nInference:  CRV1\nObservations:  997\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -0.924 |        0.061 |   -15.165 |      0.000 | -1.049 |  -0.799 |\n| X2            |     -0.174 |        0.015 |   -11.918 |      0.000 | -0.204 |  -0.144 |\n---\nRMSE: 1.346 R2: 0.659 R2 Within: 0.303 \n```\n:::\n:::\n\n\nCalling `feols()` returns an instance of the [Feols(/reference/Feols.qmd)\nclass. The `summary()` method can be used to print the results.\n\nAn alternative way to retrieve model results is via the `tidy()` method, which\nreturns a pandas dataframe with the estimated coefficients, standard errors,\nt-statistics, and p-values.\n\n::: {#87d73c84 .cell execution_count=2}\n``` {.python .cell-code}\nfit.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-0.924046</td>\n      <td>0.060934</td>\n      <td>-15.164621</td>\n      <td>2.664535e-15</td>\n      <td>-1.048671</td>\n      <td>-0.799421</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>-0.174107</td>\n      <td>0.014608</td>\n      <td>-11.918277</td>\n      <td>1.069367e-12</td>\n      <td>-0.203985</td>\n      <td>-0.144230</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nYou can also access all elements in the tidy data frame by dedicated methods,\ne.g. `fit.coef()` for the coefficients, `fit.se()` for the standard errors,\n`fit.tstat()` for the t-statistics, and `fit.pval()` for the p-values, and\n`fit.confint()` for the confidence intervals.\n\nThe employed type of inference can be specified via the `vcov` argument. If\nvcov is not provided, `PyFixest` employs the `fixest` default of iid inference,\nunless there are fixed effects in the model, in which case `feols()` clusters\nthe standard error by the first fixed effect (CRV1 inference).\n\n::: {#043c8bcf .cell execution_count=3}\n``` {.python .cell-code}\nfit1 = pf.feols(\"Y ~ X1 + X2 | f1 + f2\", data, vcov=\"iid\")\nfit2 = pf.feols(\"Y ~ X1 + X2 | f1 + f2\", data, vcov=\"hetero\")\nfit3 = pf.feols(\"Y ~ X1 + X2 | f1 + f2\", data, vcov={\"CRV1\": \"f1\"})\n```\n:::\n\n\nSupported inference types are \"iid\", \"hetero\", \"HC1\", \"HC2\", \"HC3\", and\n\"CRV1\"/\"CRV3\". Clustered standard errors are specified via a dictionary,\ne.g. `{\"CRV1\": \"f1\"}` for CRV1 inference with clustering by `f1` or\n`{\"CRV3\": \"f1\"}` for CRV3 inference with clustering by `f1`. For two-way\nclustering, you can provide a formula string, e.g. `{\"CRV1\": \"f1 + f2\"}` for\nCRV1 inference with clustering by `f1`.\n\n::: {#585d61f3 .cell execution_count=4}\n``` {.python .cell-code}\nfit4 = pf.feols(\"Y ~ X1 + X2 | f1 + f2\", data, vcov={\"CRV1\": \"f1 + f2\"})\n```\n:::\n\n\nInference can be adjusted post estimation via the `vcov` method:\n\n::: {#739e351b .cell execution_count=5}\n``` {.python .cell-code}\nfit.summary()\nfit.vcov(\"iid\").summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: f1+f2\nInference:  CRV1\nObservations:  997\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -0.924 |        0.061 |   -15.165 |      0.000 | -1.049 |  -0.799 |\n| X2            |     -0.174 |        0.015 |   -11.918 |      0.000 | -0.204 |  -0.144 |\n---\nRMSE: 1.346 R2: 0.659 R2 Within: 0.303 \n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: f1+f2\nInference:  iid\nObservations:  997\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -0.924 |        0.054 |   -16.995 |      0.000 | -1.031 |  -0.817 |\n| X2            |     -0.174 |        0.014 |   -12.081 |      0.000 | -0.202 |  -0.146 |\n---\nRMSE: 1.346 R2: 0.659 R2 Within: 0.303 \n```\n:::\n:::\n\n\nThe `ssc` argument specifies the small sample correction for inference. In\ngeneral, `feols()` uses all of `fixest::feols()` defaults, but sets the\n`fixef.K` argument to `\"none\"` whereas the `fixest::feols()` default is `\"nested\"`.\nSee here for more details: [link to github](https://github.com/py-econometrics/pyfixest/issues/260).\n\n`feols()` supports a range of multiple estimation syntax, i.e. you can estimate\nmultiple models in one call. The following example estimates two models, one with\nfixed effects for `f1` and one with fixed effects for `f2` using the `sw()` syntax.\n\n::: {#3153489a .cell execution_count=6}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~ X1 + X2 | sw(f1, f2)\", data)\ntype(fit)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\npyfixest.estimation.FixestMulti_.FixestMulti\n```\n:::\n:::\n\n\nThe returned object is an instance of the `FixestMulti` class. You can access\nthe results of the first model via `fit.fetch_model(0)` and the results of\nthe second model via `fit.fetch_model(1)`. You can compare the model results\nvia the `etable()` function:\n\n::: {#c71d5902 .cell execution_count=7}\n``` {.python .cell-code}\npf.etable([fit.fetch_model(0), fit.fetch_model(1)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel:  Y~X1+X2|f1\nModel:  Y~X1+X2|f2\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div id=\"zsjjshunnl\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#zsjjshunnl table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#zsjjshunnl thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#zsjjshunnl p { margin: 0; padding: 0; }\n #zsjjshunnl .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #zsjjshunnl .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #zsjjshunnl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #zsjjshunnl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #zsjjshunnl .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #zsjjshunnl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #zsjjshunnl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #zsjjshunnl .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #zsjjshunnl .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #zsjjshunnl .gt_column_spanner_outer:first-child { padding-left: 0; }\n #zsjjshunnl .gt_column_spanner_outer:last-child { padding-right: 0; }\n #zsjjshunnl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #zsjjshunnl .gt_spanner_row { border-bottom-style: hidden; }\n #zsjjshunnl .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #zsjjshunnl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #zsjjshunnl .gt_from_md> :first-child { margin-top: 0; }\n #zsjjshunnl .gt_from_md> :last-child { margin-bottom: 0; }\n #zsjjshunnl .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #zsjjshunnl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #zsjjshunnl .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #zsjjshunnl .gt_row_group_first td { border-top-width: 0.5px; }\n #zsjjshunnl .gt_row_group_first th { border-top-width: 0.5px; }\n #zsjjshunnl .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #zsjjshunnl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #zsjjshunnl .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #zsjjshunnl .gt_left { text-align: left; }\n #zsjjshunnl .gt_center { text-align: center; }\n #zsjjshunnl .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #zsjjshunnl .gt_font_normal { font-weight: normal; }\n #zsjjshunnl .gt_font_bold { font-weight: bold; }\n #zsjjshunnl .gt_font_italic { font-style: italic; }\n #zsjjshunnl .gt_super { font-size: 65%; }\n #zsjjshunnl .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #zsjjshunnl .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-0.950*** <br> (0.067)</td>\n    <td class=\"gt_row gt_center\">-0.979*** <br> (0.077)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X2</th>\n    <td class=\"gt_row gt_center\">-0.174*** <br> (0.018)</td>\n    <td class=\"gt_row gt_center\">-0.175*** <br> (0.022)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f2</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">997</td>\n    <td class=\"gt_row gt_center\">998</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: f2</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.489</td>\n    <td class=\"gt_row gt_center\">0.354</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"3\"></td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nOther supported multiple estimation syntax include `sw0()`, `csw()` and `csw0()`.\nWhile `sw()` adds variables in a \"stepwise\" fashion, `csw()` does so cumulatively.\n\n::: {#b47fd54d .cell execution_count=8}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~ X1 + X2 | csw(f1, f2)\", data)\npf.etable([fit.fetch_model(0), fit.fetch_model(1)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel:  Y~X1+X2|f1\nModel:  Y~X1+X2|f1+f2\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div id=\"qaaeeejhsz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#qaaeeejhsz table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#qaaeeejhsz thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#qaaeeejhsz p { margin: 0; padding: 0; }\n #qaaeeejhsz .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #qaaeeejhsz .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #qaaeeejhsz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #qaaeeejhsz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #qaaeeejhsz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #qaaeeejhsz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #qaaeeejhsz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #qaaeeejhsz .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #qaaeeejhsz .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #qaaeeejhsz .gt_column_spanner_outer:first-child { padding-left: 0; }\n #qaaeeejhsz .gt_column_spanner_outer:last-child { padding-right: 0; }\n #qaaeeejhsz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #qaaeeejhsz .gt_spanner_row { border-bottom-style: hidden; }\n #qaaeeejhsz .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #qaaeeejhsz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #qaaeeejhsz .gt_from_md> :first-child { margin-top: 0; }\n #qaaeeejhsz .gt_from_md> :last-child { margin-bottom: 0; }\n #qaaeeejhsz .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #qaaeeejhsz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #qaaeeejhsz .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #qaaeeejhsz .gt_row_group_first td { border-top-width: 0.5px; }\n #qaaeeejhsz .gt_row_group_first th { border-top-width: 0.5px; }\n #qaaeeejhsz .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #qaaeeejhsz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #qaaeeejhsz .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #qaaeeejhsz .gt_left { text-align: left; }\n #qaaeeejhsz .gt_center { text-align: center; }\n #qaaeeejhsz .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #qaaeeejhsz .gt_font_normal { font-weight: normal; }\n #qaaeeejhsz .gt_font_bold { font-weight: bold; }\n #qaaeeejhsz .gt_font_italic { font-style: italic; }\n #qaaeeejhsz .gt_super { font-size: 65%; }\n #qaaeeejhsz .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #qaaeeejhsz .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-0.950*** <br> (0.067)</td>\n    <td class=\"gt_row gt_center\">-0.924*** <br> (0.061)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X2</th>\n    <td class=\"gt_row gt_center\">-0.174*** <br> (0.018)</td>\n    <td class=\"gt_row gt_center\">-0.174*** <br> (0.015)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f2</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">997</td>\n    <td class=\"gt_row gt_center\">997</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: f1</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.489</td>\n    <td class=\"gt_row gt_center\">0.659</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"3\"></td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nThe `sw0()` and `csw0()` syntax are similar to `sw()` and `csw()`, but start\nwith a model that excludes the variables specified in `sw()` and `csw()`:\n\n::: {#68f5c12a .cell execution_count=9}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~ X1 + X2 | sw0(f1, f2)\", data)\npf.etable([fit.fetch_model(0), fit.fetch_model(1), fit.fetch_model(2)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel:  Y~X1+X2\nModel:  Y~X1+X2|f1\nModel:  Y~X1+X2|f2\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div id=\"fqfvhovkkf\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#fqfvhovkkf table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#fqfvhovkkf thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#fqfvhovkkf p { margin: 0; padding: 0; }\n #fqfvhovkkf .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #fqfvhovkkf .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #fqfvhovkkf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #fqfvhovkkf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #fqfvhovkkf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #fqfvhovkkf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #fqfvhovkkf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #fqfvhovkkf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #fqfvhovkkf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #fqfvhovkkf .gt_column_spanner_outer:first-child { padding-left: 0; }\n #fqfvhovkkf .gt_column_spanner_outer:last-child { padding-right: 0; }\n #fqfvhovkkf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #fqfvhovkkf .gt_spanner_row { border-bottom-style: hidden; }\n #fqfvhovkkf .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #fqfvhovkkf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #fqfvhovkkf .gt_from_md> :first-child { margin-top: 0; }\n #fqfvhovkkf .gt_from_md> :last-child { margin-bottom: 0; }\n #fqfvhovkkf .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #fqfvhovkkf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #fqfvhovkkf .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #fqfvhovkkf .gt_row_group_first td { border-top-width: 0.5px; }\n #fqfvhovkkf .gt_row_group_first th { border-top-width: 0.5px; }\n #fqfvhovkkf .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #fqfvhovkkf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #fqfvhovkkf .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #fqfvhovkkf .gt_left { text-align: left; }\n #fqfvhovkkf .gt_center { text-align: center; }\n #fqfvhovkkf .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #fqfvhovkkf .gt_font_normal { font-weight: normal; }\n #fqfvhovkkf .gt_font_bold { font-weight: bold; }\n #fqfvhovkkf .gt_font_italic { font-style: italic; }\n #fqfvhovkkf .gt_super { font-size: 65%; }\n #fqfvhovkkf .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #fqfvhovkkf .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(3)\">(3)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"4\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-0.993*** <br> (0.082)</td>\n    <td class=\"gt_row gt_center\">-0.950*** <br> (0.067)</td>\n    <td class=\"gt_row gt_center\">-0.979*** <br> (0.077)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X2</th>\n    <td class=\"gt_row gt_center\">-0.176*** <br> (0.022)</td>\n    <td class=\"gt_row gt_center\">-0.174*** <br> (0.018)</td>\n    <td class=\"gt_row gt_center\">-0.175*** <br> (0.022)</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Intercept</th>\n    <td class=\"gt_row gt_center\">0.889*** <br> (0.108)</td>\n    <td class=\"gt_row gt_center\"></td>\n    <td class=\"gt_row gt_center\"></td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"4\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f2</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"4\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">998</td>\n    <td class=\"gt_row gt_center\">997</td>\n    <td class=\"gt_row gt_center\">998</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">iid</td>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: f2</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.177</td>\n    <td class=\"gt_row gt_center\">0.489</td>\n    <td class=\"gt_row gt_center\">0.354</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"4\"></td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nThe `feols()` function also supports multiple dependent variables. The following\nexample estimates two models, one with `Y1` as the dependent variable and one\nwith `Y2` as the dependent variable.\n\n::: {#ed489f70 .cell execution_count=10}\n``` {.python .cell-code}\nfit = pf.feols(\"Y + Y2 ~ X1 | f1 + f2\", data)\npf.etable([fit.fetch_model(0), fit.fetch_model(1)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel:  Y~X1|f1+f2\nModel:  Y2~X1|f1+f2\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div id=\"exmrkvkpwj\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#exmrkvkpwj table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#exmrkvkpwj thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#exmrkvkpwj p { margin: 0; padding: 0; }\n #exmrkvkpwj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #exmrkvkpwj .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #exmrkvkpwj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #exmrkvkpwj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #exmrkvkpwj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #exmrkvkpwj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #exmrkvkpwj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #exmrkvkpwj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #exmrkvkpwj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #exmrkvkpwj .gt_column_spanner_outer:first-child { padding-left: 0; }\n #exmrkvkpwj .gt_column_spanner_outer:last-child { padding-right: 0; }\n #exmrkvkpwj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #exmrkvkpwj .gt_spanner_row { border-bottom-style: hidden; }\n #exmrkvkpwj .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #exmrkvkpwj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #exmrkvkpwj .gt_from_md> :first-child { margin-top: 0; }\n #exmrkvkpwj .gt_from_md> :last-child { margin-bottom: 0; }\n #exmrkvkpwj .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #exmrkvkpwj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #exmrkvkpwj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #exmrkvkpwj .gt_row_group_first td { border-top-width: 0.5px; }\n #exmrkvkpwj .gt_row_group_first th { border-top-width: 0.5px; }\n #exmrkvkpwj .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #exmrkvkpwj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #exmrkvkpwj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #exmrkvkpwj .gt_left { text-align: left; }\n #exmrkvkpwj .gt_center { text-align: center; }\n #exmrkvkpwj .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #exmrkvkpwj .gt_font_normal { font-weight: normal; }\n #exmrkvkpwj .gt_font_bold { font-weight: bold; }\n #exmrkvkpwj .gt_font_italic { font-style: italic; }\n #exmrkvkpwj .gt_super { font-size: 65%; }\n #exmrkvkpwj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #exmrkvkpwj .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y2\">\n    <span class=\"gt_column_spanner\">Y2</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-0.919*** <br> (0.065)</td>\n    <td class=\"gt_row gt_center\">-1.228*** <br> (0.195)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f2</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"3\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">997</td>\n    <td class=\"gt_row gt_center\">998</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: f1</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.609</td>\n    <td class=\"gt_row gt_center\">0.168</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"3\"></td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nIt is possible to combine different multiple estimation operators:\n\n::: {#aa763e3d .cell execution_count=11}\n``` {.python .cell-code}\nfit = pf.feols(\"Y + Y2 ~ X1 | sw(f1, f2)\", data)\npf.etable([fit.fetch_model(0),\n        fit.fetch_model(1),\n        fit.fetch_model(2),\n        fit.fetch_model(3)\n        ]\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel:  Y~X1|f1\nModel:  Y2~X1|f1\nModel:  Y~X1|f2\nModel:  Y2~X1|f2\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div id=\"gkuedcwtva\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#gkuedcwtva table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#gkuedcwtva thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#gkuedcwtva p { margin: 0; padding: 0; }\n #gkuedcwtva .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #gkuedcwtva .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #gkuedcwtva .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #gkuedcwtva .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #gkuedcwtva .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #gkuedcwtva .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #gkuedcwtva .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #gkuedcwtva .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #gkuedcwtva .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #gkuedcwtva .gt_column_spanner_outer:first-child { padding-left: 0; }\n #gkuedcwtva .gt_column_spanner_outer:last-child { padding-right: 0; }\n #gkuedcwtva .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #gkuedcwtva .gt_spanner_row { border-bottom-style: hidden; }\n #gkuedcwtva .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #gkuedcwtva .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #gkuedcwtva .gt_from_md> :first-child { margin-top: 0; }\n #gkuedcwtva .gt_from_md> :last-child { margin-bottom: 0; }\n #gkuedcwtva .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #gkuedcwtva .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #gkuedcwtva .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #gkuedcwtva .gt_row_group_first td { border-top-width: 0.5px; }\n #gkuedcwtva .gt_row_group_first th { border-top-width: 0.5px; }\n #gkuedcwtva .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #gkuedcwtva .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #gkuedcwtva .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #gkuedcwtva .gt_left { text-align: left; }\n #gkuedcwtva .gt_center { text-align: center; }\n #gkuedcwtva .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #gkuedcwtva .gt_font_normal { font-weight: normal; }\n #gkuedcwtva .gt_font_bold { font-weight: bold; }\n #gkuedcwtva .gt_font_italic { font-style: italic; }\n #gkuedcwtva .gt_super { font-size: 65%; }\n #gkuedcwtva .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #gkuedcwtva .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y2\">\n    <span class=\"gt_column_spanner\">Y2</span>\n  </th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y2\">\n    <span class=\"gt_column_spanner\">Y2</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(2)\">(2)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(3)\">(3)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(4)\">(4)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"5\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-0.949*** <br> (0.069)</td>\n    <td class=\"gt_row gt_center\">-1.266*** <br> (0.176)</td>\n    <td class=\"gt_row gt_center\">-0.982*** <br> (0.081)</td>\n    <td class=\"gt_row gt_center\">-1.301*** <br> (0.205)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"5\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f2</th>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">f1</th>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">x</td>\n    <td class=\"gt_row gt_center\">-</td>\n    <td class=\"gt_row gt_center\">-</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"5\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">997</td>\n    <td class=\"gt_row gt_center\">998</td>\n    <td class=\"gt_row gt_center\">998</td>\n    <td class=\"gt_row gt_center\">999</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: f1</td>\n    <td class=\"gt_row gt_center\">by: f2</td>\n    <td class=\"gt_row gt_center\">by: f2</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.437</td>\n    <td class=\"gt_row gt_center\">0.115</td>\n    <td class=\"gt_row gt_center\">0.302</td>\n    <td class=\"gt_row gt_center\">0.090</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"5\"></td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nIn general, using muliple estimation syntax can improve the estimation time\nas covariates that are demeaned in one model and are used in another model do\nnot need to be demeaned again: `feols()` implements a caching mechanism that\nstores the demeaned covariates.\n\nBesides OLS, `feols()` also supports IV estimation via three part formulas:\n\n::: {#68689dcc .cell execution_count=12}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~  X2 | f1 + f2 | X1 ~ Z1\", data)\nfit.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-1.050097</td>\n      <td>0.085493</td>\n      <td>-12.282912</td>\n      <td>5.133671e-13</td>\n      <td>-1.224949</td>\n      <td>-0.875245</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>-0.174351</td>\n      <td>0.014779</td>\n      <td>-11.797039</td>\n      <td>1.369793e-12</td>\n      <td>-0.204578</td>\n      <td>-0.144124</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nHere, `X1` is the endogenous variable and `Z1` is the instrument. `f1` and `f2`\nare the fixed effects, as before. To estimate IV models without fixed effects,\nsimply omit the fixed effects part of the formula:\n\n::: {#cb8287b2 .cell execution_count=13}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~  X2 | X1 ~ Z1\", data)\nfit.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Intercept</th>\n      <td>0.861939</td>\n      <td>0.151187</td>\n      <td>5.701137</td>\n      <td>1.567858e-08</td>\n      <td>0.565257</td>\n      <td>1.158622</td>\n    </tr>\n    <tr>\n      <th>X1</th>\n      <td>-0.967238</td>\n      <td>0.130078</td>\n      <td>-7.435847</td>\n      <td>2.238210e-13</td>\n      <td>-1.222497</td>\n      <td>-0.711980</td>\n    </tr>\n    <tr>\n      <th>X2</th>\n      <td>-0.176416</td>\n      <td>0.021769</td>\n      <td>-8.104001</td>\n      <td>1.554312e-15</td>\n      <td>-0.219134</td>\n      <td>-0.133697</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nLast, `feols()` supports interaction of variables via the `i()` syntax.\nDocumentation on this is tba.\n\nAfter fitting a model via `feols()`, you can use the `predict()` method to\nget the predicted values:\n\n::: {#e84a99cd .cell execution_count=14}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~ X1 + X2 | f1 + f2\", data)\nfit.predict()[0:5]\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\narray([ 3.0633663 , -0.69574133, -0.91240433, -0.46370257, -1.67331154])\n```\n:::\n:::\n\n\nThe `predict()` method also supports a `newdata` argument to predict on new data,\nwhich returns a numpy array of the predicted values:\n\n::: {#b1110faf .cell execution_count=15}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~ X1 + X2 | f1 + f2\", data)\nfit.predict(newdata=data)[0:5]\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\narray([ 2.14598761,         nan,         nan,  3.06336415, -0.69574276])\n```\n:::\n:::\n\n\nLast, you can plot the results of a model via the `coefplot()` method:\n\n::: {#4bbece3d .cell execution_count=16}\n``` {.python .cell-code}\nfit = pf.feols(\"Y ~ X1 + X2 | f1 + f2\", data)\nfit.coefplot()\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n   <div id=\"INOgYj\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n       (function() {\n           var plotSpec={\n\"data\":{\n\"Coefficient\":[\"X1\",\"X2\"],\n\"Estimate\":[-0.9240461507764963,-0.17410730785409845],\n\"2.5%\":[-1.0486708626529575,-0.2039849010269325],\n\"97.5%\":[-0.7994214389000353,-0.1442297146812644],\n\"Model\":[\"Y~X1+X2|f1+f2: 95.0%\",\"Y~X1+X2|f1+f2: 95.0%\"]\n},\n\"mapping\":{\n\"x\":\"Coefficient\",\n\"y\":\"Estimate\",\n\"color\":\"Model\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"int\",\n\"column\":\"level_0\"\n},{\n\"type\":\"str\",\n\"column\":\"Coefficient\"\n},{\n\"type\":\"int\",\n\"column\":\"index\"\n},{\n\"type\":\"float\",\n\"column\":\"Estimate\"\n},{\n\"type\":\"float\",\n\"column\":\"Std. Error\"\n},{\n\"type\":\"float\",\n\"column\":\"t value\"\n},{\n\"type\":\"float\",\n\"column\":\"Pr(>|t|)\"\n},{\n\"type\":\"float\",\n\"column\":\"2.5%\"\n},{\n\"type\":\"float\",\n\"column\":\"97.5%\"\n},{\n\"type\":\"str\",\n\"column\":\"Model\"\n}]\n},\n\"guides\":{\n\"y\":{\n\"title\":\"Estimate and 95.0% Confidence Interval\"\n}\n},\n\"coord\":{\n\"name\":\"flip\",\n\"flip\":true\n},\n\"ggsize\":{\n\"width\":500.0,\n\"height\":300.0\n},\n\"theme\":{\n\"axis_text_x\":{\n\"angle\":0.0,\n\"blank\":false\n}\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"point\",\n\"mapping\":{\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"errorbar\",\n\"mapping\":{\n\"ymin\":\"2.5%\",\n\"ymax\":\"97.5%\"\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"width\":0.05,\n\"data\":{\n}\n},{\n\"geom\":\"hline\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"yintercept\":0.0,\n\"linetype\":\"dashed\",\n\"color\":\"black\",\n\"data\":{\n}\n}],\n\"metainfo_list\":[]\n};\n           var plotContainer = document.getElementById(\"INOgYj\");\n           window.letsPlotCall(function() {{\n               LetsPlot.buildPlotFromProcessedSpecs(plotSpec, -1, -1, plotContainer);\n           }});\n       })();\n   </script>\n```\n:::\n:::\n\n\nObjects of type `Feols` support a range of other methods to conduct inference.\nFor example, you can run a wild (cluster) bootstrap via the `wildboottest()` method:\n\n::: {#a7869efb .cell execution_count=17}\n``` {.python .cell-code}\nfit.wildboottest(param = \"X1\", reps=1000)\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\nparam                              X1\nt value           -14.708146854009387\nPr(>|t|)                          0.0\nbootstrap_type                     11\ninference                     CRV(f1)\nimpose_null                      True\ndtype: object\n```\n:::\n:::\n\n\nwould run a wild bootstrap test for the coefficient of `X1` with 1000\nbootstrap repetitions.\n\nFor a wild cluster bootstrap, you can specify the cluster variable\n  via the `cluster` argument:\n\n::: {#6faa2bf4 .cell execution_count=18}\n``` {.python .cell-code}\nfit.wildboottest(param = \"X1\", reps=1000, cluster=\"group_id\")\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\nparam                              X1\nt value           -13.658130940490492\nPr(>|t|)                          0.0\nbootstrap_type                     11\ninference               CRV(group_id)\nimpose_null                      True\ndtype: object\n```\n:::\n:::\n\n\nThe `ritest()` method can be used to conduct randomization inference:\n\n::: {#b9ac0cbd .cell execution_count=19}\n``` {.python .cell-code}\nfit.ritest(resampvar = \"X1\", reps=1000)\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\nH0                                      X1=0\nri-type                      randomization-c\nEstimate                 -0.9240461507764963\nPr(>|t|)                                 0.0\nStd. Error (Pr(>|t|))                    0.0\n2.5% (Pr(>|t|))                          0.0\n97.5% (Pr(>|t|))                         0.0\ndtype: object\n```\n:::\n:::\n\n\nLast, you can compute the cluster causal variance estimator by Athey et\nal by using the `ccv()` method:\n\n::: {#9cc95311 .cell execution_count=20}\n``` {.python .cell-code}\nimport numpy as np\nrng = np.random.default_rng(1234)\ndata[\"D\"] = rng.choice([0, 1], size = data.shape[0])\nfit_D = pf.feols(\"Y ~ D\", data = data)\nfit_D.ccv(treatment = \"D\", cluster = \"group_id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\alexa\\Documents\\pyfixest\\pyfixest\\estimation\\feols_.py:1365: UserWarning: The initial model was not clustered. CRV1 inference is computed and stored in the model object.\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>CCV</th>\n      <td>0.016087657906364183</td>\n      <td>0.269153</td>\n      <td>0.059771</td>\n      <td>0.952996</td>\n      <td>-0.549382</td>\n      <td>0.581557</td>\n    </tr>\n    <tr>\n      <th>CRV1</th>\n      <td>0.016088</td>\n      <td>0.13378</td>\n      <td>0.120254</td>\n      <td>0.905614</td>\n      <td>-0.264974</td>\n      <td>0.29715</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "estimation.estimation.feols_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}