[tool.poetry]
name = "volttron-testing"
version = "0.5.0rc1"
description = "The volttron-testing library contains classes and utilities for interacting with a VOLTTRON instance."
authors = ["VOLTTRON Team <volttron@pnnl.gov>"]
license = "Apache License 2.0"
readme = "README.md"
repository = "https://github.com/eclipse-volttron/volttron-testing"
homepage = "https://github.com/eclipse-volttron/volttron-testing"
keywords = []
packages = [ { include = "volttrontesting", from = "src" } ]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: Apache Software License"
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pytest = "^8.3.3"
anypubsub = "^0.6"

# This will bring in volttron-core, lib-zmq and lib-auth by default
#volttron = "^11.0.0rc0"
volttron-core = "^2.0.0rc3"
#volttron-core = { path="../volttron-core", develop = true}

docker = "^7.1.0"
pytest-timeout = "^2.3.1"
tomli-w = "^1.1.0"
gitpython = "^3.1.43"
tomli = "^2.0.2"
pytest-virtualenv = "^1.8.0"

[tool.poetry.group.dev.dependencies]
# These can be commented out if using volttron or volttron-zmq because they
# are bringing those libraries in as dependencies.
#
# If local use these libraries or use lib-auth and lib-zmq
#volttron-lib-auth = {path="../volttron-lib-auth", develop=true}
#volttron-lib-zmq = {path="../volttron-lib-zmq", develop=true}
volttron-lib-auth = "^2.0.0rc1"
volttron-lib-zmq = "^2.0.0.rc4"


[tool.yapfignore]
ignore_patterns = [
    ".venv/**",
    ".pytest_cache/**",
    "dist/**",
    "docs/**"
]

[tool.yapf]
based_on_style = "pep8"
spaces_before_comment = 4
column_limit = 120
split_before_logical_operator = true

[tool.mypy]
[mypy]
# For a complete list of options, see https://mypy.readthedocs.io/en/stable/config_file.html
python_version = 3.10
show_error_context = true
pretty = true
show_column_numbers = true
warn_return_any = true
warn_unused_configs = true

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
