# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_description_create_request_data_groups_inner import ActivityDescriptionCreateRequestDataGroupsInner
from openapi_server.models.activity_description_create_request_data_rate import ActivityDescriptionCreateRequestDataRate
from openapi_server import util


class ActivityDescriptionCreateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default: bool=None, groups: List[ActivityDescriptionCreateRequestDataGroupsInner]=None, name: str=None, rate: ActivityDescriptionCreateRequestDataRate=None, visible_to_co_counsel: bool=None):
        """ActivityDescriptionCreateRequestData - a model defined in OpenAPI

        :param default: The default of this ActivityDescriptionCreateRequestData.
        :param groups: The groups of this ActivityDescriptionCreateRequestData.
        :param name: The name of this ActivityDescriptionCreateRequestData.
        :param rate: The rate of this ActivityDescriptionCreateRequestData.
        :param visible_to_co_counsel: The visible_to_co_counsel of this ActivityDescriptionCreateRequestData.
        """
        self.openapi_types = {
            'default': bool,
            'groups': List[ActivityDescriptionCreateRequestDataGroupsInner],
            'name': str,
            'rate': ActivityDescriptionCreateRequestDataRate,
            'visible_to_co_counsel': bool
        }

        self.attribute_map = {
            'default': 'default',
            'groups': 'groups',
            'name': 'name',
            'rate': 'rate',
            'visible_to_co_counsel': 'visible_to_co_counsel'
        }

        self._default = default
        self._groups = groups
        self._name = name
        self._rate = rate
        self._visible_to_co_counsel = visible_to_co_counsel

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityDescriptionCreateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityDescription_create_request_data of this ActivityDescriptionCreateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default(self):
        """Gets the default of this ActivityDescriptionCreateRequestData.

        Whether or not this should be the API User's default ActivityDescription.

        :return: The default of this ActivityDescriptionCreateRequestData.
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this ActivityDescriptionCreateRequestData.

        Whether or not this should be the API User's default ActivityDescription.

        :param default: The default of this ActivityDescriptionCreateRequestData.
        :type default: bool
        """

        self._default = default

    @property
    def groups(self):
        """Gets the groups of this ActivityDescriptionCreateRequestData.


        :return: The groups of this ActivityDescriptionCreateRequestData.
        :rtype: List[ActivityDescriptionCreateRequestDataGroupsInner]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this ActivityDescriptionCreateRequestData.


        :param groups: The groups of this ActivityDescriptionCreateRequestData.
        :type groups: List[ActivityDescriptionCreateRequestDataGroupsInner]
        """

        self._groups = groups

    @property
    def name(self):
        """Gets the name of this ActivityDescriptionCreateRequestData.

        A detailed description of the ActivityDescription.

        :return: The name of this ActivityDescriptionCreateRequestData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ActivityDescriptionCreateRequestData.

        A detailed description of the ActivityDescription.

        :param name: The name of this ActivityDescriptionCreateRequestData.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def rate(self):
        """Gets the rate of this ActivityDescriptionCreateRequestData.


        :return: The rate of this ActivityDescriptionCreateRequestData.
        :rtype: ActivityDescriptionCreateRequestDataRate
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this ActivityDescriptionCreateRequestData.


        :param rate: The rate of this ActivityDescriptionCreateRequestData.
        :type rate: ActivityDescriptionCreateRequestDataRate
        """

        self._rate = rate

    @property
    def visible_to_co_counsel(self):
        """Gets the visible_to_co_counsel of this ActivityDescriptionCreateRequestData.

        Whether or not co counsels on the account can see this ActivityDescription.

        :return: The visible_to_co_counsel of this ActivityDescriptionCreateRequestData.
        :rtype: bool
        """
        return self._visible_to_co_counsel

    @visible_to_co_counsel.setter
    def visible_to_co_counsel(self, visible_to_co_counsel):
        """Sets the visible_to_co_counsel of this ActivityDescriptionCreateRequestData.

        Whether or not co counsels on the account can see this ActivityDescription.

        :param visible_to_co_counsel: The visible_to_co_counsel of this ActivityDescriptionCreateRequestData.
        :type visible_to_co_counsel: bool
        """

        self._visible_to_co_counsel = visible_to_co_counsel
