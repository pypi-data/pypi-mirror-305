# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivityRateCreateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, co_counsel_contact_id: int=None, contact_id: int=None, flat_rate: bool=None, rate: float=None):
        """ActivityRateCreateRequestData - a model defined in OpenAPI

        :param co_counsel_contact_id: The co_counsel_contact_id of this ActivityRateCreateRequestData.
        :param contact_id: The contact_id of this ActivityRateCreateRequestData.
        :param flat_rate: The flat_rate of this ActivityRateCreateRequestData.
        :param rate: The rate of this ActivityRateCreateRequestData.
        """
        self.openapi_types = {
            'co_counsel_contact_id': int,
            'contact_id': int,
            'flat_rate': bool,
            'rate': float
        }

        self.attribute_map = {
            'co_counsel_contact_id': 'co_counsel_contact_id',
            'contact_id': 'contact_id',
            'flat_rate': 'flat_rate',
            'rate': 'rate'
        }

        self._co_counsel_contact_id = co_counsel_contact_id
        self._contact_id = contact_id
        self._flat_rate = flat_rate
        self._rate = rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityRateCreateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityRate_create_request_data of this ActivityRateCreateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def co_counsel_contact_id(self):
        """Gets the co_counsel_contact_id of this ActivityRateCreateRequestData.

        The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field.

        :return: The co_counsel_contact_id of this ActivityRateCreateRequestData.
        :rtype: int
        """
        return self._co_counsel_contact_id

    @co_counsel_contact_id.setter
    def co_counsel_contact_id(self, co_counsel_contact_id):
        """Sets the co_counsel_contact_id of this ActivityRateCreateRequestData.

        The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field.

        :param co_counsel_contact_id: The co_counsel_contact_id of this ActivityRateCreateRequestData.
        :type co_counsel_contact_id: int
        """

        self._co_counsel_contact_id = co_counsel_contact_id

    @property
    def contact_id(self):
        """Gets the contact_id of this ActivityRateCreateRequestData.

        The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field.

        :return: The contact_id of this ActivityRateCreateRequestData.
        :rtype: int
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this ActivityRateCreateRequestData.

        The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field.

        :param contact_id: The contact_id of this ActivityRateCreateRequestData.
        :type contact_id: int
        """

        self._contact_id = contact_id

    @property
    def flat_rate(self):
        """Gets the flat_rate of this ActivityRateCreateRequestData.

        Whether this is a flat rate

        :return: The flat_rate of this ActivityRateCreateRequestData.
        :rtype: bool
        """
        return self._flat_rate

    @flat_rate.setter
    def flat_rate(self, flat_rate):
        """Sets the flat_rate of this ActivityRateCreateRequestData.

        Whether this is a flat rate

        :param flat_rate: The flat_rate of this ActivityRateCreateRequestData.
        :type flat_rate: bool
        """

        self._flat_rate = flat_rate

    @property
    def rate(self):
        """Gets the rate of this ActivityRateCreateRequestData.

        Monetary value of this rate. Either hourly value or flat rate value

        :return: The rate of this ActivityRateCreateRequestData.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this ActivityRateCreateRequestData.

        Monetary value of this rate. Either hourly value or flat rate value

        :param rate: The rate of this ActivityRateCreateRequestData.
        :type rate: float
        """

        self._rate = rate
