# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bill_update_request_data_bill_theme import BillUpdateRequestDataBillTheme
from openapi_server.models.bill_update_request_data_discount import BillUpdateRequestDataDiscount
from openapi_server.models.bill_update_request_data_interest import BillUpdateRequestDataInterest
from openapi_server import util


class BillUpdateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bill_theme: BillUpdateRequestDataBillTheme=None, currency_id: int=None, discount: BillUpdateRequestDataDiscount=None, due_at: date=None, interest: BillUpdateRequestDataInterest=None, issued_at: date=None, memo: str=None, number: str=None, purchase_order: str=None, secondary_tax_rate: float=None, state: str=None, subject: str=None, tax_rate: float=None, use_grace_period: bool=None):
        """BillUpdateRequestData - a model defined in OpenAPI

        :param bill_theme: The bill_theme of this BillUpdateRequestData.
        :param currency_id: The currency_id of this BillUpdateRequestData.
        :param discount: The discount of this BillUpdateRequestData.
        :param due_at: The due_at of this BillUpdateRequestData.
        :param interest: The interest of this BillUpdateRequestData.
        :param issued_at: The issued_at of this BillUpdateRequestData.
        :param memo: The memo of this BillUpdateRequestData.
        :param number: The number of this BillUpdateRequestData.
        :param purchase_order: The purchase_order of this BillUpdateRequestData.
        :param secondary_tax_rate: The secondary_tax_rate of this BillUpdateRequestData.
        :param state: The state of this BillUpdateRequestData.
        :param subject: The subject of this BillUpdateRequestData.
        :param tax_rate: The tax_rate of this BillUpdateRequestData.
        :param use_grace_period: The use_grace_period of this BillUpdateRequestData.
        """
        self.openapi_types = {
            'bill_theme': BillUpdateRequestDataBillTheme,
            'currency_id': int,
            'discount': BillUpdateRequestDataDiscount,
            'due_at': date,
            'interest': BillUpdateRequestDataInterest,
            'issued_at': date,
            'memo': str,
            'number': str,
            'purchase_order': str,
            'secondary_tax_rate': float,
            'state': str,
            'subject': str,
            'tax_rate': float,
            'use_grace_period': bool
        }

        self.attribute_map = {
            'bill_theme': 'bill_theme',
            'currency_id': 'currency_id',
            'discount': 'discount',
            'due_at': 'due_at',
            'interest': 'interest',
            'issued_at': 'issued_at',
            'memo': 'memo',
            'number': 'number',
            'purchase_order': 'purchase_order',
            'secondary_tax_rate': 'secondary_tax_rate',
            'state': 'state',
            'subject': 'subject',
            'tax_rate': 'tax_rate',
            'use_grace_period': 'use_grace_period'
        }

        self._bill_theme = bill_theme
        self._currency_id = currency_id
        self._discount = discount
        self._due_at = due_at
        self._interest = interest
        self._issued_at = issued_at
        self._memo = memo
        self._number = number
        self._purchase_order = purchase_order
        self._secondary_tax_rate = secondary_tax_rate
        self._state = state
        self._subject = subject
        self._tax_rate = tax_rate
        self._use_grace_period = use_grace_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillUpdateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bill_update_request_data of this BillUpdateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bill_theme(self):
        """Gets the bill_theme of this BillUpdateRequestData.


        :return: The bill_theme of this BillUpdateRequestData.
        :rtype: BillUpdateRequestDataBillTheme
        """
        return self._bill_theme

    @bill_theme.setter
    def bill_theme(self, bill_theme):
        """Sets the bill_theme of this BillUpdateRequestData.


        :param bill_theme: The bill_theme of this BillUpdateRequestData.
        :type bill_theme: BillUpdateRequestDataBillTheme
        """

        self._bill_theme = bill_theme

    @property
    def currency_id(self):
        """Gets the currency_id of this BillUpdateRequestData.

        ID of the currency applied to the Bill.

        :return: The currency_id of this BillUpdateRequestData.
        :rtype: int
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this BillUpdateRequestData.

        ID of the currency applied to the Bill.

        :param currency_id: The currency_id of this BillUpdateRequestData.
        :type currency_id: int
        """

        self._currency_id = currency_id

    @property
    def discount(self):
        """Gets the discount of this BillUpdateRequestData.


        :return: The discount of this BillUpdateRequestData.
        :rtype: BillUpdateRequestDataDiscount
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this BillUpdateRequestData.


        :param discount: The discount of this BillUpdateRequestData.
        :type discount: BillUpdateRequestDataDiscount
        """

        self._discount = discount

    @property
    def due_at(self):
        """Gets the due_at of this BillUpdateRequestData.

        Date the Bill is due. If `use_grace_period` is true, this field is ignored.

        :return: The due_at of this BillUpdateRequestData.
        :rtype: date
        """
        return self._due_at

    @due_at.setter
    def due_at(self, due_at):
        """Sets the due_at of this BillUpdateRequestData.

        Date the Bill is due. If `use_grace_period` is true, this field is ignored.

        :param due_at: The due_at of this BillUpdateRequestData.
        :type due_at: date
        """

        self._due_at = due_at

    @property
    def interest(self):
        """Gets the interest of this BillUpdateRequestData.


        :return: The interest of this BillUpdateRequestData.
        :rtype: BillUpdateRequestDataInterest
        """
        return self._interest

    @interest.setter
    def interest(self, interest):
        """Sets the interest of this BillUpdateRequestData.


        :param interest: The interest of this BillUpdateRequestData.
        :type interest: BillUpdateRequestDataInterest
        """

        self._interest = interest

    @property
    def issued_at(self):
        """Gets the issued_at of this BillUpdateRequestData.

        Date the Bill was issued.

        :return: The issued_at of this BillUpdateRequestData.
        :rtype: date
        """
        return self._issued_at

    @issued_at.setter
    def issued_at(self, issued_at):
        """Sets the issued_at of this BillUpdateRequestData.

        Date the Bill was issued.

        :param issued_at: The issued_at of this BillUpdateRequestData.
        :type issued_at: date
        """

        self._issued_at = issued_at

    @property
    def memo(self):
        """Gets the memo of this BillUpdateRequestData.

        Memo for the Bill.

        :return: The memo of this BillUpdateRequestData.
        :rtype: str
        """
        return self._memo

    @memo.setter
    def memo(self, memo):
        """Sets the memo of this BillUpdateRequestData.

        Memo for the Bill.

        :param memo: The memo of this BillUpdateRequestData.
        :type memo: str
        """

        self._memo = memo

    @property
    def number(self):
        """Gets the number of this BillUpdateRequestData.

        Bill's number.

        :return: The number of this BillUpdateRequestData.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this BillUpdateRequestData.

        Bill's number.

        :param number: The number of this BillUpdateRequestData.
        :type number: str
        """

        self._number = number

    @property
    def purchase_order(self):
        """Gets the purchase_order of this BillUpdateRequestData.

        Purchase order information for the Bill.

        :return: The purchase_order of this BillUpdateRequestData.
        :rtype: str
        """
        return self._purchase_order

    @purchase_order.setter
    def purchase_order(self, purchase_order):
        """Sets the purchase_order of this BillUpdateRequestData.

        Purchase order information for the Bill.

        :param purchase_order: The purchase_order of this BillUpdateRequestData.
        :type purchase_order: str
        """

        self._purchase_order = purchase_order

    @property
    def secondary_tax_rate(self):
        """Gets the secondary_tax_rate of this BillUpdateRequestData.

        Secondary tax rate as percentage for the Bill.

        :return: The secondary_tax_rate of this BillUpdateRequestData.
        :rtype: float
        """
        return self._secondary_tax_rate

    @secondary_tax_rate.setter
    def secondary_tax_rate(self, secondary_tax_rate):
        """Sets the secondary_tax_rate of this BillUpdateRequestData.

        Secondary tax rate as percentage for the Bill.

        :param secondary_tax_rate: The secondary_tax_rate of this BillUpdateRequestData.
        :type secondary_tax_rate: float
        """

        self._secondary_tax_rate = secondary_tax_rate

    @property
    def state(self):
        """Gets the state of this BillUpdateRequestData.

        Bill's state.

        :return: The state of this BillUpdateRequestData.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this BillUpdateRequestData.

        Bill's state.

        :param state: The state of this BillUpdateRequestData.
        :type state: str
        """
        allowed_values = ["draft", "awaiting_approval", "awaiting_payment", "paid", "void", "deleted"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def subject(self):
        """Gets the subject of this BillUpdateRequestData.

        Subject details for the Bill.

        :return: The subject of this BillUpdateRequestData.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this BillUpdateRequestData.

        Subject details for the Bill.

        :param subject: The subject of this BillUpdateRequestData.
        :type subject: str
        """

        self._subject = subject

    @property
    def tax_rate(self):
        """Gets the tax_rate of this BillUpdateRequestData.

        Tax rate as percentage for the Bill

        :return: The tax_rate of this BillUpdateRequestData.
        :rtype: float
        """
        return self._tax_rate

    @tax_rate.setter
    def tax_rate(self, tax_rate):
        """Sets the tax_rate of this BillUpdateRequestData.

        Tax rate as percentage for the Bill

        :param tax_rate: The tax_rate of this BillUpdateRequestData.
        :type tax_rate: float
        """

        self._tax_rate = tax_rate

    @property
    def use_grace_period(self):
        """Gets the use_grace_period of this BillUpdateRequestData.

        When true, sets the bill's due date based on the client's grace period. This setting overrides the `due_at` parameter.

        :return: The use_grace_period of this BillUpdateRequestData.
        :rtype: bool
        """
        return self._use_grace_period

    @use_grace_period.setter
    def use_grace_period(self, use_grace_period):
        """Sets the use_grace_period of this BillUpdateRequestData.

        When true, sets the bill's due date based on the client's grace period. This setting overrides the `due_at` parameter.

        :param use_grace_period: The use_grace_period of this BillUpdateRequestData.
        :type use_grace_period: bool
        """

        self._use_grace_period = use_grace_period
