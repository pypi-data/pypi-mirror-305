# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.matter_create_request_data_task_template_list_instances_inner_task_template_list import MatterCreateRequestDataTaskTemplateListInstancesInnerTaskTemplateList
from openapi_server import util


class MatterCreateRequestDataTaskTemplateListInstancesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_template_list: MatterCreateRequestDataTaskTemplateListInstancesInnerTaskTemplateList=None, assignee_id: int=None, notify_assignees: bool=None, due_at: date=None):
        """MatterCreateRequestDataTaskTemplateListInstancesInner - a model defined in OpenAPI

        :param task_template_list: The task_template_list of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :param assignee_id: The assignee_id of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :param notify_assignees: The notify_assignees of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :param due_at: The due_at of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        """
        self.openapi_types = {
            'task_template_list': MatterCreateRequestDataTaskTemplateListInstancesInnerTaskTemplateList,
            'assignee_id': int,
            'notify_assignees': bool,
            'due_at': date
        }

        self.attribute_map = {
            'task_template_list': 'task_template_list',
            'assignee_id': 'assignee_id',
            'notify_assignees': 'notify_assignees',
            'due_at': 'due_at'
        }

        self._task_template_list = task_template_list
        self._assignee_id = assignee_id
        self._notify_assignees = notify_assignees
        self._due_at = due_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatterCreateRequestDataTaskTemplateListInstancesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Matter_create_request_data_task_template_list_instances_inner of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_template_list(self):
        """Gets the task_template_list of this MatterCreateRequestDataTaskTemplateListInstancesInner.


        :return: The task_template_list of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :rtype: MatterCreateRequestDataTaskTemplateListInstancesInnerTaskTemplateList
        """
        return self._task_template_list

    @task_template_list.setter
    def task_template_list(self, task_template_list):
        """Sets the task_template_list of this MatterCreateRequestDataTaskTemplateListInstancesInner.


        :param task_template_list: The task_template_list of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :type task_template_list: MatterCreateRequestDataTaskTemplateListInstancesInnerTaskTemplateList
        """
        if task_template_list is None:
            raise ValueError("Invalid value for `task_template_list`, must not be `None`")

        self._task_template_list = task_template_list

    @property
    def assignee_id(self):
        """Gets the assignee_id of this MatterCreateRequestDataTaskTemplateListInstancesInner.

        The id of the user to assign the task template list to.

        :return: The assignee_id of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :rtype: int
        """
        return self._assignee_id

    @assignee_id.setter
    def assignee_id(self, assignee_id):
        """Sets the assignee_id of this MatterCreateRequestDataTaskTemplateListInstancesInner.

        The id of the user to assign the task template list to.

        :param assignee_id: The assignee_id of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :type assignee_id: int
        """

        self._assignee_id = assignee_id

    @property
    def notify_assignees(self):
        """Gets the notify_assignees of this MatterCreateRequestDataTaskTemplateListInstancesInner.

        Whether or not task list assignees should be notified when the task list is assigned to a matter.

        :return: The notify_assignees of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :rtype: bool
        """
        return self._notify_assignees

    @notify_assignees.setter
    def notify_assignees(self, notify_assignees):
        """Sets the notify_assignees of this MatterCreateRequestDataTaskTemplateListInstancesInner.

        Whether or not task list assignees should be notified when the task list is assigned to a matter.

        :param notify_assignees: The notify_assignees of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :type notify_assignees: bool
        """

        self._notify_assignees = notify_assignees

    @property
    def due_at(self):
        """Gets the due_at of this MatterCreateRequestDataTaskTemplateListInstancesInner.

        Due date of the tasks. (Expects an ISO-8601 date).

        :return: The due_at of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :rtype: date
        """
        return self._due_at

    @due_at.setter
    def due_at(self, due_at):
        """Sets the due_at of this MatterCreateRequestDataTaskTemplateListInstancesInner.

        Due date of the tasks. (Expects an ISO-8601 date).

        :param due_at: The due_at of this MatterCreateRequestDataTaskTemplateListInstancesInner.
        :type due_at: date
        """

        self._due_at = due_at
