# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatterDocketBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, name: str=None, start_date: date=None, start_time: datetime=None, status: str=None, created_at: datetime=None, updated_at: datetime=None, deleted_at: datetime=None):
        """MatterDocketBase - a model defined in OpenAPI

        :param id: The id of this MatterDocketBase.
        :param etag: The etag of this MatterDocketBase.
        :param name: The name of this MatterDocketBase.
        :param start_date: The start_date of this MatterDocketBase.
        :param start_time: The start_time of this MatterDocketBase.
        :param status: The status of this MatterDocketBase.
        :param created_at: The created_at of this MatterDocketBase.
        :param updated_at: The updated_at of this MatterDocketBase.
        :param deleted_at: The deleted_at of this MatterDocketBase.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            'name': str,
            'start_date': date,
            'start_time': datetime,
            'status': str,
            'created_at': datetime,
            'updated_at': datetime,
            'deleted_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            'name': 'name',
            'start_date': 'start_date',
            'start_time': 'start_time',
            'status': 'status',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'deleted_at': 'deleted_at'
        }

        self._id = id
        self._etag = etag
        self._name = name
        self._start_date = start_date
        self._start_time = start_time
        self._status = status
        self._created_at = created_at
        self._updated_at = updated_at
        self._deleted_at = deleted_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatterDocketBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatterDocket_base of this MatterDocketBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this MatterDocketBase.

        Unique identifier for the *MatterDocket*

        :return: The id of this MatterDocketBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MatterDocketBase.

        Unique identifier for the *MatterDocket*

        :param id: The id of this MatterDocketBase.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this MatterDocketBase.

        ETag for the *MatterDocket*

        :return: The etag of this MatterDocketBase.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this MatterDocketBase.

        ETag for the *MatterDocket*

        :param etag: The etag of this MatterDocketBase.
        :type etag: str
        """

        self._etag = etag

    @property
    def name(self):
        """Gets the name of this MatterDocketBase.

        The name of the *MatterDocket*

        :return: The name of this MatterDocketBase.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MatterDocketBase.

        The name of the *MatterDocket*

        :param name: The name of this MatterDocketBase.
        :type name: str
        """

        self._name = name

    @property
    def start_date(self):
        """Gets the start_date of this MatterDocketBase.

        The date the *MatterDocket* will start (as a ISO-8601 date)

        :return: The start_date of this MatterDocketBase.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this MatterDocketBase.

        The date the *MatterDocket* will start (as a ISO-8601 date)

        :param start_date: The start_date of this MatterDocketBase.
        :type start_date: date
        """

        self._start_date = start_date

    @property
    def start_time(self):
        """Gets the start_time of this MatterDocketBase.

        The time the *MatterDocket* will start, required for specific triggers (as a ISO-8601 timestamp)

        :return: The start_time of this MatterDocketBase.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this MatterDocketBase.

        The time the *MatterDocket* will start, required for specific triggers (as a ISO-8601 timestamp)

        :param start_time: The start_time of this MatterDocketBase.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this MatterDocketBase.

        The status of the *MatterDocket* creation

        :return: The status of this MatterDocketBase.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MatterDocketBase.

        The status of the *MatterDocket* creation

        :param status: The status of this MatterDocketBase.
        :type status: str
        """

        self._status = status

    @property
    def created_at(self):
        """Gets the created_at of this MatterDocketBase.

        The time the *MatterDocket* was created (as a ISO-8601 timestamp)

        :return: The created_at of this MatterDocketBase.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MatterDocketBase.

        The time the *MatterDocket* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this MatterDocketBase.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this MatterDocketBase.

        The time the *MatterDocket* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this MatterDocketBase.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this MatterDocketBase.

        The time the *MatterDocket* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this MatterDocketBase.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def deleted_at(self):
        """Gets the deleted_at of this MatterDocketBase.

        The time the *MatterDocket* was deleted (as a ISO-8601 timestamp)

        :return: The deleted_at of this MatterDocketBase.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this MatterDocketBase.

        The time the *MatterDocket* was deleted (as a ISO-8601 timestamp)

        :param deleted_at: The deleted_at of this MatterDocketBase.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at
