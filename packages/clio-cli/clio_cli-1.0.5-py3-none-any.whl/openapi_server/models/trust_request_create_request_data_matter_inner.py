# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrustRequestCreateRequestDataMatterInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, trust_amount: int=None, note: str=None):
        """TrustRequestCreateRequestDataMatterInner - a model defined in OpenAPI

        :param id: The id of this TrustRequestCreateRequestDataMatterInner.
        :param trust_amount: The trust_amount of this TrustRequestCreateRequestDataMatterInner.
        :param note: The note of this TrustRequestCreateRequestDataMatterInner.
        """
        self.openapi_types = {
            'id': int,
            'trust_amount': int,
            'note': str
        }

        self.attribute_map = {
            'id': 'id',
            'trust_amount': 'trust_amount',
            'note': 'note'
        }

        self._id = id
        self._trust_amount = trust_amount
        self._note = note

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrustRequestCreateRequestDataMatterInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrustRequest_create_request_data_matter_inner of this TrustRequestCreateRequestDataMatterInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this TrustRequestCreateRequestDataMatterInner.

        The matter id associated to the TrustRequest

        :return: The id of this TrustRequestCreateRequestDataMatterInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TrustRequestCreateRequestDataMatterInner.

        The matter id associated to the TrustRequest

        :param id: The id of this TrustRequestCreateRequestDataMatterInner.
        :type id: int
        """

        self._id = id

    @property
    def trust_amount(self):
        """Gets the trust_amount of this TrustRequestCreateRequestDataMatterInner.

        The matter level TrustRequest's amount

        :return: The trust_amount of this TrustRequestCreateRequestDataMatterInner.
        :rtype: int
        """
        return self._trust_amount

    @trust_amount.setter
    def trust_amount(self, trust_amount):
        """Sets the trust_amount of this TrustRequestCreateRequestDataMatterInner.

        The matter level TrustRequest's amount

        :param trust_amount: The trust_amount of this TrustRequestCreateRequestDataMatterInner.
        :type trust_amount: int
        """

        self._trust_amount = trust_amount

    @property
    def note(self):
        """Gets the note of this TrustRequestCreateRequestDataMatterInner.

        The client level TrustRequest note

        :return: The note of this TrustRequestCreateRequestDataMatterInner.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this TrustRequestCreateRequestDataMatterInner.

        The client level TrustRequest note

        :param note: The note of this TrustRequestCreateRequestDataMatterInner.
        :type note: str
        """

        self._note = note
