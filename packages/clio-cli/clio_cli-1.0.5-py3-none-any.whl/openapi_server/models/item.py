# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.clio_creator_base import ClioCreatorBase
from openapi_server.models.contact_base import ContactBase
from openapi_server.models.document_category_base import DocumentCategoryBase
from openapi_server.models.document_version_base import DocumentVersionBase
from openapi_server.models.external_property_base import ExternalPropertyBase
from openapi_server.models.group_base import GroupBase
from openapi_server.models.linked_folder_base import LinkedFolderBase
from openapi_server.models.matter_base import MatterBase
from openapi_server import util


class Item(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, created_at: datetime=None, updated_at: datetime=None, deleted_at: datetime=None, type: str=None, locked: bool=None, name: str=None, parent: LinkedFolderBase=None, matter: MatterBase=None, contact: ContactBase=None, document_category: DocumentCategoryBase=None, creator: ClioCreatorBase=None, latest_document_version: DocumentVersionBase=None, group: GroupBase=None, external_properties: List[ExternalPropertyBase]=None):
        """Item - a model defined in OpenAPI

        :param id: The id of this Item.
        :param etag: The etag of this Item.
        :param created_at: The created_at of this Item.
        :param updated_at: The updated_at of this Item.
        :param deleted_at: The deleted_at of this Item.
        :param type: The type of this Item.
        :param locked: The locked of this Item.
        :param name: The name of this Item.
        :param parent: The parent of this Item.
        :param matter: The matter of this Item.
        :param contact: The contact of this Item.
        :param document_category: The document_category of this Item.
        :param creator: The creator of this Item.
        :param latest_document_version: The latest_document_version of this Item.
        :param group: The group of this Item.
        :param external_properties: The external_properties of this Item.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            'created_at': datetime,
            'updated_at': datetime,
            'deleted_at': datetime,
            'type': str,
            'locked': bool,
            'name': str,
            'parent': LinkedFolderBase,
            'matter': MatterBase,
            'contact': ContactBase,
            'document_category': DocumentCategoryBase,
            'creator': ClioCreatorBase,
            'latest_document_version': DocumentVersionBase,
            'group': GroupBase,
            'external_properties': List[ExternalPropertyBase]
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'deleted_at': 'deleted_at',
            'type': 'type',
            'locked': 'locked',
            'name': 'name',
            'parent': 'parent',
            'matter': 'matter',
            'contact': 'contact',
            'document_category': 'document_category',
            'creator': 'creator',
            'latest_document_version': 'latest_document_version',
            'group': 'group',
            'external_properties': 'external_properties'
        }

        self._id = id
        self._etag = etag
        self._created_at = created_at
        self._updated_at = updated_at
        self._deleted_at = deleted_at
        self._type = type
        self._locked = locked
        self._name = name
        self._parent = parent
        self._matter = matter
        self._contact = contact
        self._document_category = document_category
        self._creator = creator
        self._latest_document_version = latest_document_version
        self._group = group
        self._external_properties = external_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Item':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Item of this Item.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Item.

        Unique identifier for the *Item*

        :return: The id of this Item.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Item.

        Unique identifier for the *Item*

        :param id: The id of this Item.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this Item.

        ETag for the *Item*

        :return: The etag of this Item.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this Item.

        ETag for the *Item*

        :param etag: The etag of this Item.
        :type etag: str
        """

        self._etag = etag

    @property
    def created_at(self):
        """Gets the created_at of this Item.

        The time the *Item* was created (as a ISO-8601 timestamp)

        :return: The created_at of this Item.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Item.

        The time the *Item* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this Item.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this Item.

        The time the *Item* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this Item.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Item.

        The time the *Item* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this Item.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def deleted_at(self):
        """Gets the deleted_at of this Item.

        The time the *Item* was deleted (as a ISO-8601 timestamp)

        :return: The deleted_at of this Item.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this Item.

        The time the *Item* was deleted (as a ISO-8601 timestamp)

        :param deleted_at: The deleted_at of this Item.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at

    @property
    def type(self):
        """Gets the type of this Item.

        The type of the *Item*

        :return: The type of this Item.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Item.

        The type of the *Item*

        :param type: The type of this Item.
        :type type: str
        """
        allowed_values = ["Document", "Folder"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def locked(self):
        """Gets the locked of this Item.

        Whether or not the Item is locked. Locked Item cannot be modified

        :return: The locked of this Item.
        :rtype: bool
        """
        return self._locked

    @locked.setter
    def locked(self, locked):
        """Sets the locked of this Item.

        Whether or not the Item is locked. Locked Item cannot be modified

        :param locked: The locked of this Item.
        :type locked: bool
        """

        self._locked = locked

    @property
    def name(self):
        """Gets the name of this Item.

        The name of the Item

        :return: The name of this Item.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Item.

        The name of the Item

        :param name: The name of this Item.
        :type name: str
        """

        self._name = name

    @property
    def parent(self):
        """Gets the parent of this Item.


        :return: The parent of this Item.
        :rtype: LinkedFolderBase
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this Item.


        :param parent: The parent of this Item.
        :type parent: LinkedFolderBase
        """

        self._parent = parent

    @property
    def matter(self):
        """Gets the matter of this Item.


        :return: The matter of this Item.
        :rtype: MatterBase
        """
        return self._matter

    @matter.setter
    def matter(self, matter):
        """Sets the matter of this Item.


        :param matter: The matter of this Item.
        :type matter: MatterBase
        """

        self._matter = matter

    @property
    def contact(self):
        """Gets the contact of this Item.


        :return: The contact of this Item.
        :rtype: ContactBase
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this Item.


        :param contact: The contact of this Item.
        :type contact: ContactBase
        """

        self._contact = contact

    @property
    def document_category(self):
        """Gets the document_category of this Item.


        :return: The document_category of this Item.
        :rtype: DocumentCategoryBase
        """
        return self._document_category

    @document_category.setter
    def document_category(self, document_category):
        """Sets the document_category of this Item.


        :param document_category: The document_category of this Item.
        :type document_category: DocumentCategoryBase
        """

        self._document_category = document_category

    @property
    def creator(self):
        """Gets the creator of this Item.


        :return: The creator of this Item.
        :rtype: ClioCreatorBase
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this Item.


        :param creator: The creator of this Item.
        :type creator: ClioCreatorBase
        """

        self._creator = creator

    @property
    def latest_document_version(self):
        """Gets the latest_document_version of this Item.


        :return: The latest_document_version of this Item.
        :rtype: DocumentVersionBase
        """
        return self._latest_document_version

    @latest_document_version.setter
    def latest_document_version(self, latest_document_version):
        """Sets the latest_document_version of this Item.


        :param latest_document_version: The latest_document_version of this Item.
        :type latest_document_version: DocumentVersionBase
        """

        self._latest_document_version = latest_document_version

    @property
    def group(self):
        """Gets the group of this Item.


        :return: The group of this Item.
        :rtype: GroupBase
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this Item.


        :param group: The group of this Item.
        :type group: GroupBase
        """

        self._group = group

    @property
    def external_properties(self):
        """Gets the external_properties of this Item.

        ExternalProperty

        :return: The external_properties of this Item.
        :rtype: List[ExternalPropertyBase]
        """
        return self._external_properties

    @external_properties.setter
    def external_properties(self, external_properties):
        """Sets the external_properties of this Item.

        ExternalProperty

        :param external_properties: The external_properties of this Item.
        :type external_properties: List[ExternalPropertyBase]
        """

        self._external_properties = external_properties
