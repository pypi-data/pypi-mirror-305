# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DocumentTemplateBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, size: int=None, content_type: str=None, filename: str=None, created_at: datetime=None, updated_at: datetime=None):
        """DocumentTemplateBase - a model defined in OpenAPI

        :param id: The id of this DocumentTemplateBase.
        :param etag: The etag of this DocumentTemplateBase.
        :param size: The size of this DocumentTemplateBase.
        :param content_type: The content_type of this DocumentTemplateBase.
        :param filename: The filename of this DocumentTemplateBase.
        :param created_at: The created_at of this DocumentTemplateBase.
        :param updated_at: The updated_at of this DocumentTemplateBase.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            'size': int,
            'content_type': str,
            'filename': str,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            'size': 'size',
            'content_type': 'content_type',
            'filename': 'filename',
            'created_at': 'created_at',
            'updated_at': 'updated_at'
        }

        self._id = id
        self._etag = etag
        self._size = size
        self._content_type = content_type
        self._filename = filename
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentTemplateBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentTemplate_base of this DocumentTemplateBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DocumentTemplateBase.

        Unique identifier for the *DocumentTemplate*

        :return: The id of this DocumentTemplateBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DocumentTemplateBase.

        Unique identifier for the *DocumentTemplate*

        :param id: The id of this DocumentTemplateBase.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this DocumentTemplateBase.

        ETag for the *DocumentTemplate*

        :return: The etag of this DocumentTemplateBase.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this DocumentTemplateBase.

        ETag for the *DocumentTemplate*

        :param etag: The etag of this DocumentTemplateBase.
        :type etag: str
        """

        self._etag = etag

    @property
    def size(self):
        """Gets the size of this DocumentTemplateBase.

        The size in bytes of the template

        :return: The size of this DocumentTemplateBase.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this DocumentTemplateBase.

        The size in bytes of the template

        :param size: The size of this DocumentTemplateBase.
        :type size: int
        """

        self._size = size

    @property
    def content_type(self):
        """Gets the content_type of this DocumentTemplateBase.

        A standard MIME type describing the format of the object data.

        :return: The content_type of this DocumentTemplateBase.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this DocumentTemplateBase.

        A standard MIME type describing the format of the object data.

        :param content_type: The content_type of this DocumentTemplateBase.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def filename(self):
        """Gets the filename of this DocumentTemplateBase.

        The name of the original file that was uploaded

        :return: The filename of this DocumentTemplateBase.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this DocumentTemplateBase.

        The name of the original file that was uploaded

        :param filename: The filename of this DocumentTemplateBase.
        :type filename: str
        """

        self._filename = filename

    @property
    def created_at(self):
        """Gets the created_at of this DocumentTemplateBase.

        The time the *DocumentTemplate* was created (as a ISO-8601 timestamp)

        :return: The created_at of this DocumentTemplateBase.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this DocumentTemplateBase.

        The time the *DocumentTemplate* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this DocumentTemplateBase.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this DocumentTemplateBase.

        The time the *DocumentTemplate* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this DocumentTemplateBase.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this DocumentTemplateBase.

        The time the *DocumentTemplate* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this DocumentTemplateBase.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
