# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.matter_create_request_data_custom_rate_rates_inner_activity_description import MatterCreateRequestDataCustomRateRatesInnerActivityDescription
from openapi_server.models.matter_create_request_data_custom_rate_rates_inner_group import MatterCreateRequestDataCustomRateRatesInnerGroup
from openapi_server.models.matter_update_request_data_custom_rate_rates_inner_user import MatterUpdateRequestDataCustomRateRatesInnerUser
from openapi_server import util


class MatterUpdateRequestDataCustomRateRatesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user: MatterUpdateRequestDataCustomRateRatesInnerUser=None, award: float=None, note: str=None, _date: date=None, rate: float=None, id: int=None, destroy: bool=None, activity_description: MatterCreateRequestDataCustomRateRatesInnerActivityDescription=None, group: MatterCreateRequestDataCustomRateRatesInnerGroup=None):
        """MatterUpdateRequestDataCustomRateRatesInner - a model defined in OpenAPI

        :param user: The user of this MatterUpdateRequestDataCustomRateRatesInner.
        :param award: The award of this MatterUpdateRequestDataCustomRateRatesInner.
        :param note: The note of this MatterUpdateRequestDataCustomRateRatesInner.
        :param _date: The _date of this MatterUpdateRequestDataCustomRateRatesInner.
        :param rate: The rate of this MatterUpdateRequestDataCustomRateRatesInner.
        :param id: The id of this MatterUpdateRequestDataCustomRateRatesInner.
        :param destroy: The destroy of this MatterUpdateRequestDataCustomRateRatesInner.
        :param activity_description: The activity_description of this MatterUpdateRequestDataCustomRateRatesInner.
        :param group: The group of this MatterUpdateRequestDataCustomRateRatesInner.
        """
        self.openapi_types = {
            'user': MatterUpdateRequestDataCustomRateRatesInnerUser,
            'award': float,
            'note': str,
            '_date': date,
            'rate': float,
            'id': int,
            'destroy': bool,
            'activity_description': MatterCreateRequestDataCustomRateRatesInnerActivityDescription,
            'group': MatterCreateRequestDataCustomRateRatesInnerGroup
        }

        self.attribute_map = {
            'user': 'user',
            'award': 'award',
            'note': 'note',
            '_date': 'date',
            'rate': 'rate',
            'id': 'id',
            'destroy': '_destroy',
            'activity_description': 'activity_description',
            'group': 'group'
        }

        self._user = user
        self._award = award
        self._note = note
        self.__date = _date
        self._rate = rate
        self._id = id
        self._destroy = destroy
        self._activity_description = activity_description
        self._group = group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatterUpdateRequestDataCustomRateRatesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Matter_update_request_data_custom_rate_rates_inner of this MatterUpdateRequestDataCustomRateRatesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user(self):
        """Gets the user of this MatterUpdateRequestDataCustomRateRatesInner.


        :return: The user of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: MatterUpdateRequestDataCustomRateRatesInnerUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this MatterUpdateRequestDataCustomRateRatesInner.


        :param user: The user of this MatterUpdateRequestDataCustomRateRatesInner.
        :type user: MatterUpdateRequestDataCustomRateRatesInnerUser
        """

        self._user = user

    @property
    def award(self):
        """Gets the award of this MatterUpdateRequestDataCustomRateRatesInner.

        The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state.

        :return: The award of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: float
        """
        return self._award

    @award.setter
    def award(self, award):
        """Sets the award of this MatterUpdateRequestDataCustomRateRatesInner.

        The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state.

        :param award: The award of this MatterUpdateRequestDataCustomRateRatesInner.
        :type award: float
        """

        self._award = award

    @property
    def note(self):
        """Gets the note of this MatterUpdateRequestDataCustomRateRatesInner.

        Detailed description of the rate. Only valid for ContingencyFee.

        :return: The note of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this MatterUpdateRequestDataCustomRateRatesInner.

        Detailed description of the rate. Only valid for ContingencyFee.

        :param note: The note of this MatterUpdateRequestDataCustomRateRatesInner.
        :type note: str
        """

        self._note = note

    @property
    def _date(self):
        """Gets the _date of this MatterUpdateRequestDataCustomRateRatesInner.

        The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date).

        :return: The _date of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this MatterUpdateRequestDataCustomRateRatesInner.

        The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date).

        :param _date: The _date of this MatterUpdateRequestDataCustomRateRatesInner.
        :type _date: date
        """

        self.__date = _date

    @property
    def rate(self):
        """Gets the rate of this MatterUpdateRequestDataCustomRateRatesInner.

        If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.  If `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.  If `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter. 

        :return: The rate of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this MatterUpdateRequestDataCustomRateRatesInner.

        If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.  If `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.  If `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter. 

        :param rate: The rate of this MatterUpdateRequestDataCustomRateRatesInner.
        :type rate: float
        """

        self._rate = rate

    @property
    def id(self):
        """Gets the id of this MatterUpdateRequestDataCustomRateRatesInner.

        The unique identifier for a single Rate associated with the Matter. The keyword `null` is not valid for this field.

        :return: The id of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MatterUpdateRequestDataCustomRateRatesInner.

        The unique identifier for a single Rate associated with the Matter. The keyword `null` is not valid for this field.

        :param id: The id of this MatterUpdateRequestDataCustomRateRatesInner.
        :type id: int
        """

        self._id = id

    @property
    def destroy(self):
        """Gets the destroy of this MatterUpdateRequestDataCustomRateRatesInner.

        The destroy flag. If the flag is set to `true` and the unique identifier of the associated Rate is present, the Rate is deleted from the Matter.

        :return: The destroy of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: bool
        """
        return self._destroy

    @destroy.setter
    def destroy(self, destroy):
        """Sets the destroy of this MatterUpdateRequestDataCustomRateRatesInner.

        The destroy flag. If the flag is set to `true` and the unique identifier of the associated Rate is present, the Rate is deleted from the Matter.

        :param destroy: The destroy of this MatterUpdateRequestDataCustomRateRatesInner.
        :type destroy: bool
        """

        self._destroy = destroy

    @property
    def activity_description(self):
        """Gets the activity_description of this MatterUpdateRequestDataCustomRateRatesInner.


        :return: The activity_description of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: MatterCreateRequestDataCustomRateRatesInnerActivityDescription
        """
        return self._activity_description

    @activity_description.setter
    def activity_description(self, activity_description):
        """Sets the activity_description of this MatterUpdateRequestDataCustomRateRatesInner.


        :param activity_description: The activity_description of this MatterUpdateRequestDataCustomRateRatesInner.
        :type activity_description: MatterCreateRequestDataCustomRateRatesInnerActivityDescription
        """

        self._activity_description = activity_description

    @property
    def group(self):
        """Gets the group of this MatterUpdateRequestDataCustomRateRatesInner.


        :return: The group of this MatterUpdateRequestDataCustomRateRatesInner.
        :rtype: MatterCreateRequestDataCustomRateRatesInnerGroup
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this MatterUpdateRequestDataCustomRateRatesInner.


        :param group: The group of this MatterUpdateRequestDataCustomRateRatesInner.
        :type group: MatterCreateRequestDataCustomRateRatesInnerGroup
        """

        self._group = group
