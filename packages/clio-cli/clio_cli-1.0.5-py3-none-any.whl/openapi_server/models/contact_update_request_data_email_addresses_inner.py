# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactUpdateRequestDataEmailAddressesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str='Other', address: str=None, default_email: bool=None, destroy: bool=None):
        """ContactUpdateRequestDataEmailAddressesInner - a model defined in OpenAPI

        :param id: The id of this ContactUpdateRequestDataEmailAddressesInner.
        :param name: The name of this ContactUpdateRequestDataEmailAddressesInner.
        :param address: The address of this ContactUpdateRequestDataEmailAddressesInner.
        :param default_email: The default_email of this ContactUpdateRequestDataEmailAddressesInner.
        :param destroy: The destroy of this ContactUpdateRequestDataEmailAddressesInner.
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'address': str,
            'default_email': bool,
            'destroy': bool
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'address': 'address',
            'default_email': 'default_email',
            'destroy': '_destroy'
        }

        self._id = id
        self._name = name
        self._address = address
        self._default_email = default_email
        self._destroy = destroy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactUpdateRequestDataEmailAddressesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact_update_request_data_email_addresses_inner of this ContactUpdateRequestDataEmailAddressesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ContactUpdateRequestDataEmailAddressesInner.

        The unique identifier for a single EmailAddress associated with the Contact. The keyword `null` is not valid for this field.

        :return: The id of this ContactUpdateRequestDataEmailAddressesInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContactUpdateRequestDataEmailAddressesInner.

        The unique identifier for a single EmailAddress associated with the Contact. The keyword `null` is not valid for this field.

        :param id: The id of this ContactUpdateRequestDataEmailAddressesInner.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ContactUpdateRequestDataEmailAddressesInner.

        Name of the EmailAddress.

        :return: The name of this ContactUpdateRequestDataEmailAddressesInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContactUpdateRequestDataEmailAddressesInner.

        Name of the EmailAddress.

        :param name: The name of this ContactUpdateRequestDataEmailAddressesInner.
        :type name: str
        """
        allowed_values = ["Work", "Home", "Other"]  # noqa: E501
        if name not in allowed_values:
            raise ValueError(
                "Invalid value for `name` ({0}), must be one of {1}"
                .format(name, allowed_values)
            )

        self._name = name

    @property
    def address(self):
        """Gets the address of this ContactUpdateRequestDataEmailAddressesInner.

        Email address.

        :return: The address of this ContactUpdateRequestDataEmailAddressesInner.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ContactUpdateRequestDataEmailAddressesInner.

        Email address.

        :param address: The address of this ContactUpdateRequestDataEmailAddressesInner.
        :type address: str
        """

        self._address = address

    @property
    def default_email(self):
        """Gets the default_email of this ContactUpdateRequestDataEmailAddressesInner.

        Whether or not the Contact should be the default email for the Contact.

        :return: The default_email of this ContactUpdateRequestDataEmailAddressesInner.
        :rtype: bool
        """
        return self._default_email

    @default_email.setter
    def default_email(self, default_email):
        """Sets the default_email of this ContactUpdateRequestDataEmailAddressesInner.

        Whether or not the Contact should be the default email for the Contact.

        :param default_email: The default_email of this ContactUpdateRequestDataEmailAddressesInner.
        :type default_email: bool
        """

        self._default_email = default_email

    @property
    def destroy(self):
        """Gets the destroy of this ContactUpdateRequestDataEmailAddressesInner.

        The destroy flag. If the flag is set to `true` and the unique identifier of the associated EmailAddress is present, the EmailAddress is deleted from the Contact.

        :return: The destroy of this ContactUpdateRequestDataEmailAddressesInner.
        :rtype: bool
        """
        return self._destroy

    @destroy.setter
    def destroy(self, destroy):
        """Sets the destroy of this ContactUpdateRequestDataEmailAddressesInner.

        The destroy flag. If the flag is set to `true` and the unique identifier of the associated EmailAddress is present, the EmailAddress is deleted from the Contact.

        :param destroy: The destroy of this ContactUpdateRequestDataEmailAddressesInner.
        :type destroy: bool
        """

        self._destroy = destroy
