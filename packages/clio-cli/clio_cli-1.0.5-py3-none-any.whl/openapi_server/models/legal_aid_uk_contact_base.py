# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LegalAidUkContactBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, disability: int=None, disability_code: str=None, ethnicity: int=None, ethnicity_title: str=None, financially_eligible: bool=None, gender: int=None, gender_title: str=None, national_insurance_number: str=None):
        """LegalAidUkContactBase - a model defined in OpenAPI

        :param id: The id of this LegalAidUkContactBase.
        :param disability: The disability of this LegalAidUkContactBase.
        :param disability_code: The disability_code of this LegalAidUkContactBase.
        :param ethnicity: The ethnicity of this LegalAidUkContactBase.
        :param ethnicity_title: The ethnicity_title of this LegalAidUkContactBase.
        :param financially_eligible: The financially_eligible of this LegalAidUkContactBase.
        :param gender: The gender of this LegalAidUkContactBase.
        :param gender_title: The gender_title of this LegalAidUkContactBase.
        :param national_insurance_number: The national_insurance_number of this LegalAidUkContactBase.
        """
        self.openapi_types = {
            'id': int,
            'disability': int,
            'disability_code': str,
            'ethnicity': int,
            'ethnicity_title': str,
            'financially_eligible': bool,
            'gender': int,
            'gender_title': str,
            'national_insurance_number': str
        }

        self.attribute_map = {
            'id': 'id',
            'disability': 'disability',
            'disability_code': 'disability_code',
            'ethnicity': 'ethnicity',
            'ethnicity_title': 'ethnicity_title',
            'financially_eligible': 'financially_eligible',
            'gender': 'gender',
            'gender_title': 'gender_title',
            'national_insurance_number': 'national_insurance_number'
        }

        self._id = id
        self._disability = disability
        self._disability_code = disability_code
        self._ethnicity = ethnicity
        self._ethnicity_title = ethnicity_title
        self._financially_eligible = financially_eligible
        self._gender = gender
        self._gender_title = gender_title
        self._national_insurance_number = national_insurance_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegalAidUkContactBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LegalAidUkContact_base of this LegalAidUkContactBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this LegalAidUkContactBase.

        Unique identifier for the *LegalAidUkContact*

        :return: The id of this LegalAidUkContactBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LegalAidUkContactBase.

        Unique identifier for the *LegalAidUkContact*

        :param id: The id of this LegalAidUkContactBase.
        :type id: int
        """

        self._id = id

    @property
    def disability(self):
        """Gets the disability of this LegalAidUkContactBase.

        The disability of the LegalAidUkContact

        :return: The disability of this LegalAidUkContactBase.
        :rtype: int
        """
        return self._disability

    @disability.setter
    def disability(self, disability):
        """Sets the disability of this LegalAidUkContactBase.

        The disability of the LegalAidUkContact

        :param disability: The disability of this LegalAidUkContactBase.
        :type disability: int
        """

        self._disability = disability

    @property
    def disability_code(self):
        """Gets the disability_code of this LegalAidUkContactBase.

        The disability code of the LegalAidUkContact

        :return: The disability_code of this LegalAidUkContactBase.
        :rtype: str
        """
        return self._disability_code

    @disability_code.setter
    def disability_code(self, disability_code):
        """Sets the disability_code of this LegalAidUkContactBase.

        The disability code of the LegalAidUkContact

        :param disability_code: The disability_code of this LegalAidUkContactBase.
        :type disability_code: str
        """

        self._disability_code = disability_code

    @property
    def ethnicity(self):
        """Gets the ethnicity of this LegalAidUkContactBase.

        The ethnicity of the LegalAidUkContact

        :return: The ethnicity of this LegalAidUkContactBase.
        :rtype: int
        """
        return self._ethnicity

    @ethnicity.setter
    def ethnicity(self, ethnicity):
        """Sets the ethnicity of this LegalAidUkContactBase.

        The ethnicity of the LegalAidUkContact

        :param ethnicity: The ethnicity of this LegalAidUkContactBase.
        :type ethnicity: int
        """

        self._ethnicity = ethnicity

    @property
    def ethnicity_title(self):
        """Gets the ethnicity_title of this LegalAidUkContactBase.

        The ethnicity title of the LegalAidUkContact

        :return: The ethnicity_title of this LegalAidUkContactBase.
        :rtype: str
        """
        return self._ethnicity_title

    @ethnicity_title.setter
    def ethnicity_title(self, ethnicity_title):
        """Sets the ethnicity_title of this LegalAidUkContactBase.

        The ethnicity title of the LegalAidUkContact

        :param ethnicity_title: The ethnicity_title of this LegalAidUkContactBase.
        :type ethnicity_title: str
        """

        self._ethnicity_title = ethnicity_title

    @property
    def financially_eligible(self):
        """Gets the financially_eligible of this LegalAidUkContactBase.

        The financial eligibility of the LegalAidUkContact

        :return: The financially_eligible of this LegalAidUkContactBase.
        :rtype: bool
        """
        return self._financially_eligible

    @financially_eligible.setter
    def financially_eligible(self, financially_eligible):
        """Sets the financially_eligible of this LegalAidUkContactBase.

        The financial eligibility of the LegalAidUkContact

        :param financially_eligible: The financially_eligible of this LegalAidUkContactBase.
        :type financially_eligible: bool
        """

        self._financially_eligible = financially_eligible

    @property
    def gender(self):
        """Gets the gender of this LegalAidUkContactBase.

        The gender of the LegalAidUkContact

        :return: The gender of this LegalAidUkContactBase.
        :rtype: int
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this LegalAidUkContactBase.

        The gender of the LegalAidUkContact

        :param gender: The gender of this LegalAidUkContactBase.
        :type gender: int
        """

        self._gender = gender

    @property
    def gender_title(self):
        """Gets the gender_title of this LegalAidUkContactBase.

        The gender title of the LegalAidUkContact

        :return: The gender_title of this LegalAidUkContactBase.
        :rtype: str
        """
        return self._gender_title

    @gender_title.setter
    def gender_title(self, gender_title):
        """Sets the gender_title of this LegalAidUkContactBase.

        The gender title of the LegalAidUkContact

        :param gender_title: The gender_title of this LegalAidUkContactBase.
        :type gender_title: str
        """

        self._gender_title = gender_title

    @property
    def national_insurance_number(self):
        """Gets the national_insurance_number of this LegalAidUkContactBase.

        National Insurance Number

        :return: The national_insurance_number of this LegalAidUkContactBase.
        :rtype: str
        """
        return self._national_insurance_number

    @national_insurance_number.setter
    def national_insurance_number(self, national_insurance_number):
        """Sets the national_insurance_number of this LegalAidUkContactBase.

        National Insurance Number

        :param national_insurance_number: The national_insurance_number of this LegalAidUkContactBase.
        :type national_insurance_number: str
        """

        self._national_insurance_number = national_insurance_number
