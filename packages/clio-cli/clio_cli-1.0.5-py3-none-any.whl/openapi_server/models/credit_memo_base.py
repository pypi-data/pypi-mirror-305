# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreditMemoBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, _date: date=None, amount: float=None, description: str=None, discount: bool=None, voided_at: datetime=None, created_at: datetime=None, updated_at: datetime=None):
        """CreditMemoBase - a model defined in OpenAPI

        :param id: The id of this CreditMemoBase.
        :param etag: The etag of this CreditMemoBase.
        :param _date: The _date of this CreditMemoBase.
        :param amount: The amount of this CreditMemoBase.
        :param description: The description of this CreditMemoBase.
        :param discount: The discount of this CreditMemoBase.
        :param voided_at: The voided_at of this CreditMemoBase.
        :param created_at: The created_at of this CreditMemoBase.
        :param updated_at: The updated_at of this CreditMemoBase.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            '_date': date,
            'amount': float,
            'description': str,
            'discount': bool,
            'voided_at': datetime,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            '_date': 'date',
            'amount': 'amount',
            'description': 'description',
            'discount': 'discount',
            'voided_at': 'voided_at',
            'created_at': 'created_at',
            'updated_at': 'updated_at'
        }

        self._id = id
        self._etag = etag
        self.__date = _date
        self._amount = amount
        self._description = description
        self._discount = discount
        self._voided_at = voided_at
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreditMemoBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreditMemo_base of this CreditMemoBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CreditMemoBase.

        Unique identifier for the *CreditMemo*

        :return: The id of this CreditMemoBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreditMemoBase.

        Unique identifier for the *CreditMemo*

        :param id: The id of this CreditMemoBase.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this CreditMemoBase.

        ETag for the *CreditMemo*

        :return: The etag of this CreditMemoBase.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this CreditMemoBase.

        ETag for the *CreditMemo*

        :param etag: The etag of this CreditMemoBase.
        :type etag: str
        """

        self._etag = etag

    @property
    def _date(self):
        """Gets the _date of this CreditMemoBase.

        Date the *CreditMemo* was recorded (as a ISO-8601 date)

        :return: The _date of this CreditMemoBase.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CreditMemoBase.

        Date the *CreditMemo* was recorded (as a ISO-8601 date)

        :param _date: The _date of this CreditMemoBase.
        :type _date: date
        """

        self.__date = _date

    @property
    def amount(self):
        """Gets the amount of this CreditMemoBase.

        Total amount credited

        :return: The amount of this CreditMemoBase.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this CreditMemoBase.

        Total amount credited

        :param amount: The amount of this CreditMemoBase.
        :type amount: float
        """

        self._amount = amount

    @property
    def description(self):
        """Gets the description of this CreditMemoBase.

        A detailed description for the *CreditMemo*

        :return: The description of this CreditMemoBase.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreditMemoBase.

        A detailed description for the *CreditMemo*

        :param description: The description of this CreditMemoBase.
        :type description: str
        """

        self._description = description

    @property
    def discount(self):
        """Gets the discount of this CreditMemoBase.

        Whether the *CreditMemo* is applied as discount

        :return: The discount of this CreditMemoBase.
        :rtype: bool
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this CreditMemoBase.

        Whether the *CreditMemo* is applied as discount

        :param discount: The discount of this CreditMemoBase.
        :type discount: bool
        """

        self._discount = discount

    @property
    def voided_at(self):
        """Gets the voided_at of this CreditMemoBase.

        Time the *CreditMemo* was voided (as a ISO-8601 timestamp)

        :return: The voided_at of this CreditMemoBase.
        :rtype: datetime
        """
        return self._voided_at

    @voided_at.setter
    def voided_at(self, voided_at):
        """Sets the voided_at of this CreditMemoBase.

        Time the *CreditMemo* was voided (as a ISO-8601 timestamp)

        :param voided_at: The voided_at of this CreditMemoBase.
        :type voided_at: datetime
        """

        self._voided_at = voided_at

    @property
    def created_at(self):
        """Gets the created_at of this CreditMemoBase.

        The time the *CreditMemo* was created (as a ISO-8601 timestamp)

        :return: The created_at of this CreditMemoBase.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CreditMemoBase.

        The time the *CreditMemo* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this CreditMemoBase.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this CreditMemoBase.

        The time the *CreditMemo* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this CreditMemoBase.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this CreditMemoBase.

        The time the *CreditMemo* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this CreditMemoBase.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
