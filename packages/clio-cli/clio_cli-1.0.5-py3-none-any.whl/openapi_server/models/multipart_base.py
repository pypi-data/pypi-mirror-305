# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MultipartBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, part_number: int=None, put_url: str=None):
        """MultipartBase - a model defined in OpenAPI

        :param part_number: The part_number of this MultipartBase.
        :param put_url: The put_url of this MultipartBase.
        """
        self.openapi_types = {
            'part_number': int,
            'put_url': str
        }

        self.attribute_map = {
            'part_number': 'part_number',
            'put_url': 'put_url'
        }

        self._part_number = part_number
        self._put_url = put_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MultipartBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Multipart_base of this MultipartBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def part_number(self):
        """Gets the part_number of this MultipartBase.

        Unique identifier of a part which defines its position within the document being uploaded.

        :return: The part_number of this MultipartBase.
        :rtype: int
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number):
        """Sets the part_number of this MultipartBase.

        Unique identifier of a part which defines its position within the document being uploaded.

        :param part_number: The part_number of this MultipartBase.
        :type part_number: int
        """

        self._part_number = part_number

    @property
    def put_url(self):
        """Gets the put_url of this MultipartBase.

        A signed URL for uploading the file part. It expires in 10 minutes.

        :return: The put_url of this MultipartBase.
        :rtype: str
        """
        return self._put_url

    @put_url.setter
    def put_url(self, put_url):
        """Sets the put_url of this MultipartBase.

        A signed URL for uploading the file part. It expires in 10 minutes.

        :param put_url: The put_url of this MultipartBase.
        :type put_url: str
        """

        self._put_url = put_url
