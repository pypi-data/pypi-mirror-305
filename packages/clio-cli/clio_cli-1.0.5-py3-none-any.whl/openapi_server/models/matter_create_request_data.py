# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_create_request_data_custom_field_values_inner import ContactCreateRequestDataCustomFieldValuesInner
from openapi_server.models.matter_create_request_data_client import MatterCreateRequestDataClient
from openapi_server.models.matter_create_request_data_custom_field_set_associations_inner import MatterCreateRequestDataCustomFieldSetAssociationsInner
from openapi_server.models.matter_create_request_data_custom_rate import MatterCreateRequestDataCustomRate
from openapi_server.models.matter_create_request_data_evergreen_retainer import MatterCreateRequestDataEvergreenRetainer
from openapi_server.models.matter_create_request_data_group import MatterCreateRequestDataGroup
from openapi_server.models.matter_create_request_data_matter_budget import MatterCreateRequestDataMatterBudget
from openapi_server.models.matter_create_request_data_matter_stage import MatterCreateRequestDataMatterStage
from openapi_server.models.matter_create_request_data_originating_attorney import MatterCreateRequestDataOriginatingAttorney
from openapi_server.models.matter_create_request_data_practice_area import MatterCreateRequestDataPracticeArea
from openapi_server.models.matter_create_request_data_relationships_inner import MatterCreateRequestDataRelationshipsInner
from openapi_server.models.matter_create_request_data_split_invoice_payers_inner import MatterCreateRequestDataSplitInvoicePayersInner
from openapi_server.models.matter_create_request_data_statute_of_limitations import MatterCreateRequestDataStatuteOfLimitations
from openapi_server.models.matter_create_request_data_task_template_list_instances_inner import MatterCreateRequestDataTaskTemplateListInstancesInner
from openapi_server import util


class MatterCreateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billable: bool=True, client: MatterCreateRequestDataClient=None, client_reference: str=None, close_date: date=None, custom_field_set_associations: List[MatterCreateRequestDataCustomFieldSetAssociationsInner]=None, custom_field_values: List[ContactCreateRequestDataCustomFieldValuesInner]=None, custom_rate: MatterCreateRequestDataCustomRate=None, description: str=None, display_number: str=None, evergreen_retainer: MatterCreateRequestDataEvergreenRetainer=None, group: MatterCreateRequestDataGroup=None, location: str=None, matter_budget: MatterCreateRequestDataMatterBudget=None, matter_stage: MatterCreateRequestDataMatterStage=None, open_date: date=None, originating_attorney: MatterCreateRequestDataOriginatingAttorney=None, pending_date: date=None, practice_area: MatterCreateRequestDataPracticeArea=None, relationships: List[MatterCreateRequestDataRelationshipsInner]=None, reset_matter_number: bool=False, responsible_attorney: MatterCreateRequestDataOriginatingAttorney=None, split_invoice_payers: List[MatterCreateRequestDataSplitInvoicePayersInner]=None, status: str=None, statute_of_limitations: MatterCreateRequestDataStatuteOfLimitations=None, task_template_list_instances: List[MatterCreateRequestDataTaskTemplateListInstancesInner]=None):
        """MatterCreateRequestData - a model defined in OpenAPI

        :param billable: The billable of this MatterCreateRequestData.
        :param client: The client of this MatterCreateRequestData.
        :param client_reference: The client_reference of this MatterCreateRequestData.
        :param close_date: The close_date of this MatterCreateRequestData.
        :param custom_field_set_associations: The custom_field_set_associations of this MatterCreateRequestData.
        :param custom_field_values: The custom_field_values of this MatterCreateRequestData.
        :param custom_rate: The custom_rate of this MatterCreateRequestData.
        :param description: The description of this MatterCreateRequestData.
        :param display_number: The display_number of this MatterCreateRequestData.
        :param evergreen_retainer: The evergreen_retainer of this MatterCreateRequestData.
        :param group: The group of this MatterCreateRequestData.
        :param location: The location of this MatterCreateRequestData.
        :param matter_budget: The matter_budget of this MatterCreateRequestData.
        :param matter_stage: The matter_stage of this MatterCreateRequestData.
        :param open_date: The open_date of this MatterCreateRequestData.
        :param originating_attorney: The originating_attorney of this MatterCreateRequestData.
        :param pending_date: The pending_date of this MatterCreateRequestData.
        :param practice_area: The practice_area of this MatterCreateRequestData.
        :param relationships: The relationships of this MatterCreateRequestData.
        :param reset_matter_number: The reset_matter_number of this MatterCreateRequestData.
        :param responsible_attorney: The responsible_attorney of this MatterCreateRequestData.
        :param split_invoice_payers: The split_invoice_payers of this MatterCreateRequestData.
        :param status: The status of this MatterCreateRequestData.
        :param statute_of_limitations: The statute_of_limitations of this MatterCreateRequestData.
        :param task_template_list_instances: The task_template_list_instances of this MatterCreateRequestData.
        """
        self.openapi_types = {
            'billable': bool,
            'client': MatterCreateRequestDataClient,
            'client_reference': str,
            'close_date': date,
            'custom_field_set_associations': List[MatterCreateRequestDataCustomFieldSetAssociationsInner],
            'custom_field_values': List[ContactCreateRequestDataCustomFieldValuesInner],
            'custom_rate': MatterCreateRequestDataCustomRate,
            'description': str,
            'display_number': str,
            'evergreen_retainer': MatterCreateRequestDataEvergreenRetainer,
            'group': MatterCreateRequestDataGroup,
            'location': str,
            'matter_budget': MatterCreateRequestDataMatterBudget,
            'matter_stage': MatterCreateRequestDataMatterStage,
            'open_date': date,
            'originating_attorney': MatterCreateRequestDataOriginatingAttorney,
            'pending_date': date,
            'practice_area': MatterCreateRequestDataPracticeArea,
            'relationships': List[MatterCreateRequestDataRelationshipsInner],
            'reset_matter_number': bool,
            'responsible_attorney': MatterCreateRequestDataOriginatingAttorney,
            'split_invoice_payers': List[MatterCreateRequestDataSplitInvoicePayersInner],
            'status': str,
            'statute_of_limitations': MatterCreateRequestDataStatuteOfLimitations,
            'task_template_list_instances': List[MatterCreateRequestDataTaskTemplateListInstancesInner]
        }

        self.attribute_map = {
            'billable': 'billable',
            'client': 'client',
            'client_reference': 'client_reference',
            'close_date': 'close_date',
            'custom_field_set_associations': 'custom_field_set_associations',
            'custom_field_values': 'custom_field_values',
            'custom_rate': 'custom_rate',
            'description': 'description',
            'display_number': 'display_number',
            'evergreen_retainer': 'evergreen_retainer',
            'group': 'group',
            'location': 'location',
            'matter_budget': 'matter_budget',
            'matter_stage': 'matter_stage',
            'open_date': 'open_date',
            'originating_attorney': 'originating_attorney',
            'pending_date': 'pending_date',
            'practice_area': 'practice_area',
            'relationships': 'relationships',
            'reset_matter_number': 'reset_matter_number',
            'responsible_attorney': 'responsible_attorney',
            'split_invoice_payers': 'split_invoice_payers',
            'status': 'status',
            'statute_of_limitations': 'statute_of_limitations',
            'task_template_list_instances': 'task_template_list_instances'
        }

        self._billable = billable
        self._client = client
        self._client_reference = client_reference
        self._close_date = close_date
        self._custom_field_set_associations = custom_field_set_associations
        self._custom_field_values = custom_field_values
        self._custom_rate = custom_rate
        self._description = description
        self._display_number = display_number
        self._evergreen_retainer = evergreen_retainer
        self._group = group
        self._location = location
        self._matter_budget = matter_budget
        self._matter_stage = matter_stage
        self._open_date = open_date
        self._originating_attorney = originating_attorney
        self._pending_date = pending_date
        self._practice_area = practice_area
        self._relationships = relationships
        self._reset_matter_number = reset_matter_number
        self._responsible_attorney = responsible_attorney
        self._split_invoice_payers = split_invoice_payers
        self._status = status
        self._statute_of_limitations = statute_of_limitations
        self._task_template_list_instances = task_template_list_instances

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatterCreateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Matter_create_request_data of this MatterCreateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billable(self):
        """Gets the billable of this MatterCreateRequestData.

        Whether or not the matter is billable.

        :return: The billable of this MatterCreateRequestData.
        :rtype: bool
        """
        return self._billable

    @billable.setter
    def billable(self, billable):
        """Sets the billable of this MatterCreateRequestData.

        Whether or not the matter is billable.

        :param billable: The billable of this MatterCreateRequestData.
        :type billable: bool
        """

        self._billable = billable

    @property
    def client(self):
        """Gets the client of this MatterCreateRequestData.


        :return: The client of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataClient
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this MatterCreateRequestData.


        :param client: The client of this MatterCreateRequestData.
        :type client: MatterCreateRequestDataClient
        """
        if client is None:
            raise ValueError("Invalid value for `client`, must not be `None`")

        self._client = client

    @property
    def client_reference(self):
        """Gets the client_reference of this MatterCreateRequestData.

        Client Reference string for external uses.

        :return: The client_reference of this MatterCreateRequestData.
        :rtype: str
        """
        return self._client_reference

    @client_reference.setter
    def client_reference(self, client_reference):
        """Sets the client_reference of this MatterCreateRequestData.

        Client Reference string for external uses.

        :param client_reference: The client_reference of this MatterCreateRequestData.
        :type client_reference: str
        """

        self._client_reference = client_reference

    @property
    def close_date(self):
        """Gets the close_date of this MatterCreateRequestData.

        Date the Matter was set to closed. (Expects an ISO-8601 date).

        :return: The close_date of this MatterCreateRequestData.
        :rtype: date
        """
        return self._close_date

    @close_date.setter
    def close_date(self, close_date):
        """Sets the close_date of this MatterCreateRequestData.

        Date the Matter was set to closed. (Expects an ISO-8601 date).

        :param close_date: The close_date of this MatterCreateRequestData.
        :type close_date: date
        """

        self._close_date = close_date

    @property
    def custom_field_set_associations(self):
        """Gets the custom_field_set_associations of this MatterCreateRequestData.


        :return: The custom_field_set_associations of this MatterCreateRequestData.
        :rtype: List[MatterCreateRequestDataCustomFieldSetAssociationsInner]
        """
        return self._custom_field_set_associations

    @custom_field_set_associations.setter
    def custom_field_set_associations(self, custom_field_set_associations):
        """Sets the custom_field_set_associations of this MatterCreateRequestData.


        :param custom_field_set_associations: The custom_field_set_associations of this MatterCreateRequestData.
        :type custom_field_set_associations: List[MatterCreateRequestDataCustomFieldSetAssociationsInner]
        """

        self._custom_field_set_associations = custom_field_set_associations

    @property
    def custom_field_values(self):
        """Gets the custom_field_values of this MatterCreateRequestData.


        :return: The custom_field_values of this MatterCreateRequestData.
        :rtype: List[ContactCreateRequestDataCustomFieldValuesInner]
        """
        return self._custom_field_values

    @custom_field_values.setter
    def custom_field_values(self, custom_field_values):
        """Sets the custom_field_values of this MatterCreateRequestData.


        :param custom_field_values: The custom_field_values of this MatterCreateRequestData.
        :type custom_field_values: List[ContactCreateRequestDataCustomFieldValuesInner]
        """

        self._custom_field_values = custom_field_values

    @property
    def custom_rate(self):
        """Gets the custom_rate of this MatterCreateRequestData.


        :return: The custom_rate of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataCustomRate
        """
        return self._custom_rate

    @custom_rate.setter
    def custom_rate(self, custom_rate):
        """Sets the custom_rate of this MatterCreateRequestData.


        :param custom_rate: The custom_rate of this MatterCreateRequestData.
        :type custom_rate: MatterCreateRequestDataCustomRate
        """

        self._custom_rate = custom_rate

    @property
    def description(self):
        """Gets the description of this MatterCreateRequestData.

        Detailed description of the Matter.

        :return: The description of this MatterCreateRequestData.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MatterCreateRequestData.

        Detailed description of the Matter.

        :param description: The description of this MatterCreateRequestData.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def display_number(self):
        """Gets the display_number of this MatterCreateRequestData.

        Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable.

        :return: The display_number of this MatterCreateRequestData.
        :rtype: str
        """
        return self._display_number

    @display_number.setter
    def display_number(self, display_number):
        """Sets the display_number of this MatterCreateRequestData.

        Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable.

        :param display_number: The display_number of this MatterCreateRequestData.
        :type display_number: str
        """

        self._display_number = display_number

    @property
    def evergreen_retainer(self):
        """Gets the evergreen_retainer of this MatterCreateRequestData.


        :return: The evergreen_retainer of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataEvergreenRetainer
        """
        return self._evergreen_retainer

    @evergreen_retainer.setter
    def evergreen_retainer(self, evergreen_retainer):
        """Sets the evergreen_retainer of this MatterCreateRequestData.


        :param evergreen_retainer: The evergreen_retainer of this MatterCreateRequestData.
        :type evergreen_retainer: MatterCreateRequestDataEvergreenRetainer
        """

        self._evergreen_retainer = evergreen_retainer

    @property
    def group(self):
        """Gets the group of this MatterCreateRequestData.


        :return: The group of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataGroup
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this MatterCreateRequestData.


        :param group: The group of this MatterCreateRequestData.
        :type group: MatterCreateRequestDataGroup
        """

        self._group = group

    @property
    def location(self):
        """Gets the location of this MatterCreateRequestData.

        Location of the Matter.

        :return: The location of this MatterCreateRequestData.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this MatterCreateRequestData.

        Location of the Matter.

        :param location: The location of this MatterCreateRequestData.
        :type location: str
        """

        self._location = location

    @property
    def matter_budget(self):
        """Gets the matter_budget of this MatterCreateRequestData.


        :return: The matter_budget of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataMatterBudget
        """
        return self._matter_budget

    @matter_budget.setter
    def matter_budget(self, matter_budget):
        """Sets the matter_budget of this MatterCreateRequestData.


        :param matter_budget: The matter_budget of this MatterCreateRequestData.
        :type matter_budget: MatterCreateRequestDataMatterBudget
        """

        self._matter_budget = matter_budget

    @property
    def matter_stage(self):
        """Gets the matter_stage of this MatterCreateRequestData.


        :return: The matter_stage of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataMatterStage
        """
        return self._matter_stage

    @matter_stage.setter
    def matter_stage(self, matter_stage):
        """Sets the matter_stage of this MatterCreateRequestData.


        :param matter_stage: The matter_stage of this MatterCreateRequestData.
        :type matter_stage: MatterCreateRequestDataMatterStage
        """

        self._matter_stage = matter_stage

    @property
    def open_date(self):
        """Gets the open_date of this MatterCreateRequestData.

        Date the Matter was set to open. (Expects an ISO-8601 date).

        :return: The open_date of this MatterCreateRequestData.
        :rtype: date
        """
        return self._open_date

    @open_date.setter
    def open_date(self, open_date):
        """Sets the open_date of this MatterCreateRequestData.

        Date the Matter was set to open. (Expects an ISO-8601 date).

        :param open_date: The open_date of this MatterCreateRequestData.
        :type open_date: date
        """

        self._open_date = open_date

    @property
    def originating_attorney(self):
        """Gets the originating_attorney of this MatterCreateRequestData.


        :return: The originating_attorney of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataOriginatingAttorney
        """
        return self._originating_attorney

    @originating_attorney.setter
    def originating_attorney(self, originating_attorney):
        """Sets the originating_attorney of this MatterCreateRequestData.


        :param originating_attorney: The originating_attorney of this MatterCreateRequestData.
        :type originating_attorney: MatterCreateRequestDataOriginatingAttorney
        """

        self._originating_attorney = originating_attorney

    @property
    def pending_date(self):
        """Gets the pending_date of this MatterCreateRequestData.

        Date the Matter was set to pending. (Expects an ISO-8601 date).

        :return: The pending_date of this MatterCreateRequestData.
        :rtype: date
        """
        return self._pending_date

    @pending_date.setter
    def pending_date(self, pending_date):
        """Sets the pending_date of this MatterCreateRequestData.

        Date the Matter was set to pending. (Expects an ISO-8601 date).

        :param pending_date: The pending_date of this MatterCreateRequestData.
        :type pending_date: date
        """

        self._pending_date = pending_date

    @property
    def practice_area(self):
        """Gets the practice_area of this MatterCreateRequestData.


        :return: The practice_area of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataPracticeArea
        """
        return self._practice_area

    @practice_area.setter
    def practice_area(self, practice_area):
        """Sets the practice_area of this MatterCreateRequestData.


        :param practice_area: The practice_area of this MatterCreateRequestData.
        :type practice_area: MatterCreateRequestDataPracticeArea
        """

        self._practice_area = practice_area

    @property
    def relationships(self):
        """Gets the relationships of this MatterCreateRequestData.


        :return: The relationships of this MatterCreateRequestData.
        :rtype: List[MatterCreateRequestDataRelationshipsInner]
        """
        return self._relationships

    @relationships.setter
    def relationships(self, relationships):
        """Sets the relationships of this MatterCreateRequestData.


        :param relationships: The relationships of this MatterCreateRequestData.
        :type relationships: List[MatterCreateRequestDataRelationshipsInner]
        """

        self._relationships = relationships

    @property
    def reset_matter_number(self):
        """Gets the reset_matter_number of this MatterCreateRequestData.

        Defaults to false. Resets the matter's number based on the account's matter numbering scheme.

        :return: The reset_matter_number of this MatterCreateRequestData.
        :rtype: bool
        """
        return self._reset_matter_number

    @reset_matter_number.setter
    def reset_matter_number(self, reset_matter_number):
        """Sets the reset_matter_number of this MatterCreateRequestData.

        Defaults to false. Resets the matter's number based on the account's matter numbering scheme.

        :param reset_matter_number: The reset_matter_number of this MatterCreateRequestData.
        :type reset_matter_number: bool
        """

        self._reset_matter_number = reset_matter_number

    @property
    def responsible_attorney(self):
        """Gets the responsible_attorney of this MatterCreateRequestData.


        :return: The responsible_attorney of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataOriginatingAttorney
        """
        return self._responsible_attorney

    @responsible_attorney.setter
    def responsible_attorney(self, responsible_attorney):
        """Sets the responsible_attorney of this MatterCreateRequestData.


        :param responsible_attorney: The responsible_attorney of this MatterCreateRequestData.
        :type responsible_attorney: MatterCreateRequestDataOriginatingAttorney
        """

        self._responsible_attorney = responsible_attorney

    @property
    def split_invoice_payers(self):
        """Gets the split_invoice_payers of this MatterCreateRequestData.


        :return: The split_invoice_payers of this MatterCreateRequestData.
        :rtype: List[MatterCreateRequestDataSplitInvoicePayersInner]
        """
        return self._split_invoice_payers

    @split_invoice_payers.setter
    def split_invoice_payers(self, split_invoice_payers):
        """Sets the split_invoice_payers of this MatterCreateRequestData.


        :param split_invoice_payers: The split_invoice_payers of this MatterCreateRequestData.
        :type split_invoice_payers: List[MatterCreateRequestDataSplitInvoicePayersInner]
        """

        self._split_invoice_payers = split_invoice_payers

    @property
    def status(self):
        """Gets the status of this MatterCreateRequestData.

        Matter status.

        :return: The status of this MatterCreateRequestData.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MatterCreateRequestData.

        Matter status.

        :param status: The status of this MatterCreateRequestData.
        :type status: str
        """
        allowed_values = ["open", "closed", "pending"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def statute_of_limitations(self):
        """Gets the statute_of_limitations of this MatterCreateRequestData.


        :return: The statute_of_limitations of this MatterCreateRequestData.
        :rtype: MatterCreateRequestDataStatuteOfLimitations
        """
        return self._statute_of_limitations

    @statute_of_limitations.setter
    def statute_of_limitations(self, statute_of_limitations):
        """Sets the statute_of_limitations of this MatterCreateRequestData.


        :param statute_of_limitations: The statute_of_limitations of this MatterCreateRequestData.
        :type statute_of_limitations: MatterCreateRequestDataStatuteOfLimitations
        """

        self._statute_of_limitations = statute_of_limitations

    @property
    def task_template_list_instances(self):
        """Gets the task_template_list_instances of this MatterCreateRequestData.


        :return: The task_template_list_instances of this MatterCreateRequestData.
        :rtype: List[MatterCreateRequestDataTaskTemplateListInstancesInner]
        """
        return self._task_template_list_instances

    @task_template_list_instances.setter
    def task_template_list_instances(self, task_template_list_instances):
        """Sets the task_template_list_instances of this MatterCreateRequestData.


        :param task_template_list_instances: The task_template_list_instances of this MatterCreateRequestData.
        :type task_template_list_instances: List[MatterCreateRequestDataTaskTemplateListInstancesInner]
        """

        self._task_template_list_instances = task_template_list_instances
