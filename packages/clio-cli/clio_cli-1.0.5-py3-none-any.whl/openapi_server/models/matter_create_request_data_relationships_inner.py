# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.matter_create_request_data_relationships_inner_contact import MatterCreateRequestDataRelationshipsInnerContact
from openapi_server import util


class MatterCreateRequestDataRelationshipsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, contact: MatterCreateRequestDataRelationshipsInnerContact=None):
        """MatterCreateRequestDataRelationshipsInner - a model defined in OpenAPI

        :param description: The description of this MatterCreateRequestDataRelationshipsInner.
        :param contact: The contact of this MatterCreateRequestDataRelationshipsInner.
        """
        self.openapi_types = {
            'description': str,
            'contact': MatterCreateRequestDataRelationshipsInnerContact
        }

        self.attribute_map = {
            'description': 'description',
            'contact': 'contact'
        }

        self._description = description
        self._contact = contact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatterCreateRequestDataRelationshipsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Matter_create_request_data_relationships_inner of this MatterCreateRequestDataRelationshipsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this MatterCreateRequestDataRelationshipsInner.

        Describe the relationship between a Contact and a Matter.

        :return: The description of this MatterCreateRequestDataRelationshipsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MatterCreateRequestDataRelationshipsInner.

        Describe the relationship between a Contact and a Matter.

        :param description: The description of this MatterCreateRequestDataRelationshipsInner.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def contact(self):
        """Gets the contact of this MatterCreateRequestDataRelationshipsInner.


        :return: The contact of this MatterCreateRequestDataRelationshipsInner.
        :rtype: MatterCreateRequestDataRelationshipsInnerContact
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this MatterCreateRequestDataRelationshipsInner.


        :param contact: The contact of this MatterCreateRequestDataRelationshipsInner.
        :type contact: MatterCreateRequestDataRelationshipsInnerContact
        """
        if contact is None:
            raise ValueError("Invalid value for `contact`, must not be `None`")

        self._contact = contact
