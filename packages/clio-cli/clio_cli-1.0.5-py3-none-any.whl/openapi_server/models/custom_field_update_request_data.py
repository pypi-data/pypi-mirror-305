# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field_create_request_data_picklist_options_inner import CustomFieldCreateRequestDataPicklistOptionsInner
from openapi_server import util


class CustomFieldUpdateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_order: int=None, displayed: bool=True, name: str=None, picklist_options: List[CustomFieldCreateRequestDataPicklistOptionsInner]=None, required: bool=False):
        """CustomFieldUpdateRequestData - a model defined in OpenAPI

        :param display_order: The display_order of this CustomFieldUpdateRequestData.
        :param displayed: The displayed of this CustomFieldUpdateRequestData.
        :param name: The name of this CustomFieldUpdateRequestData.
        :param picklist_options: The picklist_options of this CustomFieldUpdateRequestData.
        :param required: The required of this CustomFieldUpdateRequestData.
        """
        self.openapi_types = {
            'display_order': int,
            'displayed': bool,
            'name': str,
            'picklist_options': List[CustomFieldCreateRequestDataPicklistOptionsInner],
            'required': bool
        }

        self.attribute_map = {
            'display_order': 'display_order',
            'displayed': 'displayed',
            'name': 'name',
            'picklist_options': 'picklist_options',
            'required': 'required'
        }

        self._display_order = display_order
        self._displayed = displayed
        self._name = name
        self._picklist_options = picklist_options
        self._required = required

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomFieldUpdateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomField_update_request_data of this CustomFieldUpdateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_order(self):
        """Gets the display_order of this CustomFieldUpdateRequestData.

        The display position of the CustomField.

        :return: The display_order of this CustomFieldUpdateRequestData.
        :rtype: int
        """
        return self._display_order

    @display_order.setter
    def display_order(self, display_order):
        """Sets the display_order of this CustomFieldUpdateRequestData.

        The display position of the CustomField.

        :param display_order: The display_order of this CustomFieldUpdateRequestData.
        :type display_order: int
        """

        self._display_order = display_order

    @property
    def displayed(self):
        """Gets the displayed of this CustomFieldUpdateRequestData.

        Whether or not the CustomField should be displayed by default.

        :return: The displayed of this CustomFieldUpdateRequestData.
        :rtype: bool
        """
        return self._displayed

    @displayed.setter
    def displayed(self, displayed):
        """Sets the displayed of this CustomFieldUpdateRequestData.

        Whether or not the CustomField should be displayed by default.

        :param displayed: The displayed of this CustomFieldUpdateRequestData.
        :type displayed: bool
        """

        self._displayed = displayed

    @property
    def name(self):
        """Gets the name of this CustomFieldUpdateRequestData.

        CustomField name.

        :return: The name of this CustomFieldUpdateRequestData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomFieldUpdateRequestData.

        CustomField name.

        :param name: The name of this CustomFieldUpdateRequestData.
        :type name: str
        """

        self._name = name

    @property
    def picklist_options(self):
        """Gets the picklist_options of this CustomFieldUpdateRequestData.


        :return: The picklist_options of this CustomFieldUpdateRequestData.
        :rtype: List[CustomFieldCreateRequestDataPicklistOptionsInner]
        """
        return self._picklist_options

    @picklist_options.setter
    def picklist_options(self, picklist_options):
        """Sets the picklist_options of this CustomFieldUpdateRequestData.


        :param picklist_options: The picklist_options of this CustomFieldUpdateRequestData.
        :type picklist_options: List[CustomFieldCreateRequestDataPicklistOptionsInner]
        """

        self._picklist_options = picklist_options

    @property
    def required(self):
        """Gets the required of this CustomFieldUpdateRequestData.

        Whether or not the CustomField should require a value.

        :return: The required of this CustomFieldUpdateRequestData.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this CustomFieldUpdateRequestData.

        Whether or not the CustomField should require a value.

        :param required: The required of this CustomFieldUpdateRequestData.
        :type required: bool
        """

        self._required = required
