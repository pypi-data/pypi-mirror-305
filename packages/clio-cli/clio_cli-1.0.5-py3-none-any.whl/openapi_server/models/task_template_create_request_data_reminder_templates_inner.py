# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskTemplateCreateRequestDataReminderTemplatesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration_value: int=None, duration_unit: str=None, notification_type: str=None):
        """TaskTemplateCreateRequestDataReminderTemplatesInner - a model defined in OpenAPI

        :param duration_value: The duration_value of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        :param duration_unit: The duration_unit of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        :param notification_type: The notification_type of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        """
        self.openapi_types = {
            'duration_value': int,
            'duration_unit': str,
            'notification_type': str
        }

        self.attribute_map = {
            'duration_value': 'duration_value',
            'duration_unit': 'duration_unit',
            'notification_type': 'notification_type'
        }

        self._duration_value = duration_value
        self._duration_unit = duration_unit
        self._notification_type = notification_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskTemplateCreateRequestDataReminderTemplatesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskTemplate_create_request_data_reminder_templates_inner of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration_value(self):
        """Gets the duration_value of this TaskTemplateCreateRequestDataReminderTemplatesInner.

        Time measured in `duration_unit` to remind user before the subject.

        :return: The duration_value of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        :rtype: int
        """
        return self._duration_value

    @duration_value.setter
    def duration_value(self, duration_value):
        """Sets the duration_value of this TaskTemplateCreateRequestDataReminderTemplatesInner.

        Time measured in `duration_unit` to remind user before the subject.

        :param duration_value: The duration_value of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        :type duration_value: int
        """
        if duration_value is None:
            raise ValueError("Invalid value for `duration_value`, must not be `None`")

        self._duration_value = duration_value

    @property
    def duration_unit(self):
        """Gets the duration_unit of this TaskTemplateCreateRequestDataReminderTemplatesInner.

        Unit to measure the duration value in.

        :return: The duration_unit of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        :rtype: str
        """
        return self._duration_unit

    @duration_unit.setter
    def duration_unit(self, duration_unit):
        """Sets the duration_unit of this TaskTemplateCreateRequestDataReminderTemplatesInner.

        Unit to measure the duration value in.

        :param duration_unit: The duration_unit of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        :type duration_unit: str
        """
        if duration_unit is None:
            raise ValueError("Invalid value for `duration_unit`, must not be `None`")

        self._duration_unit = duration_unit

    @property
    def notification_type(self):
        """Gets the notification_type of this TaskTemplateCreateRequestDataReminderTemplatesInner.

        Notification method.

        :return: The notification_type of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        :rtype: str
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type):
        """Sets the notification_type of this TaskTemplateCreateRequestDataReminderTemplatesInner.

        Notification method.

        :param notification_type: The notification_type of this TaskTemplateCreateRequestDataReminderTemplatesInner.
        :type notification_type: str
        """
        allowed_values = ["Email", "Popup"]  # noqa: E501
        if notification_type not in allowed_values:
            raise ValueError(
                "Invalid value for `notification_type` ({0}), must be one of {1}"
                .format(notification_type, allowed_values)
            )

        self._notification_type = notification_type
