# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversation_base import ConversationBase
from openapi_server.models.document_base import DocumentBase
from openapi_server import util


class ConversationMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, _date: str=None, body: str=None, created_at: datetime=None, updated_at: datetime=None, sender: object=None, document: DocumentBase=None, conversation: ConversationBase=None, receivers: List[object]=None):
        """ConversationMessage - a model defined in OpenAPI

        :param id: The id of this ConversationMessage.
        :param etag: The etag of this ConversationMessage.
        :param _date: The _date of this ConversationMessage.
        :param body: The body of this ConversationMessage.
        :param created_at: The created_at of this ConversationMessage.
        :param updated_at: The updated_at of this ConversationMessage.
        :param sender: The sender of this ConversationMessage.
        :param document: The document of this ConversationMessage.
        :param conversation: The conversation of this ConversationMessage.
        :param receivers: The receivers of this ConversationMessage.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            '_date': str,
            'body': str,
            'created_at': datetime,
            'updated_at': datetime,
            'sender': object,
            'document': DocumentBase,
            'conversation': ConversationBase,
            'receivers': List[object]
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            '_date': 'date',
            'body': 'body',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'sender': 'sender',
            'document': 'document',
            'conversation': 'conversation',
            'receivers': 'receivers'
        }

        self._id = id
        self._etag = etag
        self.__date = _date
        self._body = body
        self._created_at = created_at
        self._updated_at = updated_at
        self._sender = sender
        self._document = document
        self._conversation = conversation
        self._receivers = receivers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConversationMessage of this ConversationMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ConversationMessage.

        Unique identifier for the *ConversationMessage*

        :return: The id of this ConversationMessage.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ConversationMessage.

        Unique identifier for the *ConversationMessage*

        :param id: The id of this ConversationMessage.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this ConversationMessage.

        ETag for the *ConversationMessage*

        :return: The etag of this ConversationMessage.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ConversationMessage.

        ETag for the *ConversationMessage*

        :param etag: The etag of this ConversationMessage.
        :type etag: str
        """

        self._etag = etag

    @property
    def _date(self):
        """Gets the _date of this ConversationMessage.

        The creation date of the message in the current user's time zone

        :return: The _date of this ConversationMessage.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ConversationMessage.

        The creation date of the message in the current user's time zone

        :param _date: The _date of this ConversationMessage.
        :type _date: str
        """

        self.__date = _date

    @property
    def body(self):
        """Gets the body of this ConversationMessage.

        The main content of the *ConversationMessage*

        :return: The body of this ConversationMessage.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this ConversationMessage.

        The main content of the *ConversationMessage*

        :param body: The body of this ConversationMessage.
        :type body: str
        """

        self._body = body

    @property
    def created_at(self):
        """Gets the created_at of this ConversationMessage.

        The time the *ConversationMessage* was created (as a ISO-8601 timestamp)

        :return: The created_at of this ConversationMessage.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ConversationMessage.

        The time the *ConversationMessage* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this ConversationMessage.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this ConversationMessage.

        The time the *ConversationMessage* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this ConversationMessage.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ConversationMessage.

        The time the *ConversationMessage* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this ConversationMessage.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def sender(self):
        """Gets the sender of this ConversationMessage.


        :return: The sender of this ConversationMessage.
        :rtype: object
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this ConversationMessage.


        :param sender: The sender of this ConversationMessage.
        :type sender: object
        """

        self._sender = sender

    @property
    def document(self):
        """Gets the document of this ConversationMessage.


        :return: The document of this ConversationMessage.
        :rtype: DocumentBase
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this ConversationMessage.


        :param document: The document of this ConversationMessage.
        :type document: DocumentBase
        """

        self._document = document

    @property
    def conversation(self):
        """Gets the conversation of this ConversationMessage.


        :return: The conversation of this ConversationMessage.
        :rtype: ConversationBase
        """
        return self._conversation

    @conversation.setter
    def conversation(self, conversation):
        """Sets the conversation of this ConversationMessage.


        :param conversation: The conversation of this ConversationMessage.
        :type conversation: ConversationBase
        """

        self._conversation = conversation

    @property
    def receivers(self):
        """Gets the receivers of this ConversationMessage.

        UnredactedParticipant

        :return: The receivers of this ConversationMessage.
        :rtype: List[object]
        """
        return self._receivers

    @receivers.setter
    def receivers(self, receivers):
        """Sets the receivers of this ConversationMessage.

        UnredactedParticipant

        :param receivers: The receivers of this ConversationMessage.
        :type receivers: List[object]
        """

        self._receivers = receivers
