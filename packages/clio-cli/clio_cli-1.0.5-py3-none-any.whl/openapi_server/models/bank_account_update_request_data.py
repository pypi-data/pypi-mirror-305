# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BankAccountUpdateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_number: str=None, controlled_account: bool=None, currency: str=None, default_account: bool=None, domicile_branch: str=None, general_ledger_number: str=None, holder: str=None, institution: str=None, name: str=None, swift: str=None, transit_number: str=None):
        """BankAccountUpdateRequestData - a model defined in OpenAPI

        :param account_number: The account_number of this BankAccountUpdateRequestData.
        :param controlled_account: The controlled_account of this BankAccountUpdateRequestData.
        :param currency: The currency of this BankAccountUpdateRequestData.
        :param default_account: The default_account of this BankAccountUpdateRequestData.
        :param domicile_branch: The domicile_branch of this BankAccountUpdateRequestData.
        :param general_ledger_number: The general_ledger_number of this BankAccountUpdateRequestData.
        :param holder: The holder of this BankAccountUpdateRequestData.
        :param institution: The institution of this BankAccountUpdateRequestData.
        :param name: The name of this BankAccountUpdateRequestData.
        :param swift: The swift of this BankAccountUpdateRequestData.
        :param transit_number: The transit_number of this BankAccountUpdateRequestData.
        """
        self.openapi_types = {
            'account_number': str,
            'controlled_account': bool,
            'currency': str,
            'default_account': bool,
            'domicile_branch': str,
            'general_ledger_number': str,
            'holder': str,
            'institution': str,
            'name': str,
            'swift': str,
            'transit_number': str
        }

        self.attribute_map = {
            'account_number': 'account_number',
            'controlled_account': 'controlled_account',
            'currency': 'currency',
            'default_account': 'default_account',
            'domicile_branch': 'domicile_branch',
            'general_ledger_number': 'general_ledger_number',
            'holder': 'holder',
            'institution': 'institution',
            'name': 'name',
            'swift': 'swift',
            'transit_number': 'transit_number'
        }

        self._account_number = account_number
        self._controlled_account = controlled_account
        self._currency = currency
        self._default_account = default_account
        self._domicile_branch = domicile_branch
        self._general_ledger_number = general_ledger_number
        self._holder = holder
        self._institution = institution
        self._name = name
        self._swift = swift
        self._transit_number = transit_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankAccountUpdateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BankAccount_update_request_data of this BankAccountUpdateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_number(self):
        """Gets the account_number of this BankAccountUpdateRequestData.

        Account number for the BankAccount.

        :return: The account_number of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this BankAccountUpdateRequestData.

        Account number for the BankAccount.

        :param account_number: The account_number of this BankAccountUpdateRequestData.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def controlled_account(self):
        """Gets the controlled_account of this BankAccountUpdateRequestData.

        Whether is a controlled account.

        :return: The controlled_account of this BankAccountUpdateRequestData.
        :rtype: bool
        """
        return self._controlled_account

    @controlled_account.setter
    def controlled_account(self, controlled_account):
        """Sets the controlled_account of this BankAccountUpdateRequestData.

        Whether is a controlled account.

        :param controlled_account: The controlled_account of this BankAccountUpdateRequestData.
        :type controlled_account: bool
        """

        self._controlled_account = controlled_account

    @property
    def currency(self):
        """Gets the currency of this BankAccountUpdateRequestData.

        Currency the BankAccount is in.

        :return: The currency of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this BankAccountUpdateRequestData.

        Currency the BankAccount is in.

        :param currency: The currency of this BankAccountUpdateRequestData.
        :type currency: str
        """

        self._currency = currency

    @property
    def default_account(self):
        """Gets the default_account of this BankAccountUpdateRequestData.

        Whether or not the BankAccount should be the default account.

        :return: The default_account of this BankAccountUpdateRequestData.
        :rtype: bool
        """
        return self._default_account

    @default_account.setter
    def default_account(self, default_account):
        """Sets the default_account of this BankAccountUpdateRequestData.

        Whether or not the BankAccount should be the default account.

        :param default_account: The default_account of this BankAccountUpdateRequestData.
        :type default_account: bool
        """

        self._default_account = default_account

    @property
    def domicile_branch(self):
        """Gets the domicile_branch of this BankAccountUpdateRequestData.

        Branch where the BankAccount was opened.

        :return: The domicile_branch of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._domicile_branch

    @domicile_branch.setter
    def domicile_branch(self, domicile_branch):
        """Sets the domicile_branch of this BankAccountUpdateRequestData.

        Branch where the BankAccount was opened.

        :param domicile_branch: The domicile_branch of this BankAccountUpdateRequestData.
        :type domicile_branch: str
        """

        self._domicile_branch = domicile_branch

    @property
    def general_ledger_number(self):
        """Gets the general_ledger_number of this BankAccountUpdateRequestData.

        General ledger number used for the Law Society of Alberta.

        :return: The general_ledger_number of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._general_ledger_number

    @general_ledger_number.setter
    def general_ledger_number(self, general_ledger_number):
        """Sets the general_ledger_number of this BankAccountUpdateRequestData.

        General ledger number used for the Law Society of Alberta.

        :param general_ledger_number: The general_ledger_number of this BankAccountUpdateRequestData.
        :type general_ledger_number: str
        """

        self._general_ledger_number = general_ledger_number

    @property
    def holder(self):
        """Gets the holder of this BankAccountUpdateRequestData.

        BankAccount holder.

        :return: The holder of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._holder

    @holder.setter
    def holder(self, holder):
        """Sets the holder of this BankAccountUpdateRequestData.

        BankAccount holder.

        :param holder: The holder of this BankAccountUpdateRequestData.
        :type holder: str
        """

        self._holder = holder

    @property
    def institution(self):
        """Gets the institution of this BankAccountUpdateRequestData.

        Financial institution.

        :return: The institution of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._institution

    @institution.setter
    def institution(self, institution):
        """Sets the institution of this BankAccountUpdateRequestData.

        Financial institution.

        :param institution: The institution of this BankAccountUpdateRequestData.
        :type institution: str
        """

        self._institution = institution

    @property
    def name(self):
        """Gets the name of this BankAccountUpdateRequestData.

        BankAccount name.

        :return: The name of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BankAccountUpdateRequestData.

        BankAccount name.

        :param name: The name of this BankAccountUpdateRequestData.
        :type name: str
        """

        self._name = name

    @property
    def swift(self):
        """Gets the swift of this BankAccountUpdateRequestData.

        Identification code for the financial institution.

        :return: The swift of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._swift

    @swift.setter
    def swift(self, swift):
        """Sets the swift of this BankAccountUpdateRequestData.

        Identification code for the financial institution.

        :param swift: The swift of this BankAccountUpdateRequestData.
        :type swift: str
        """

        self._swift = swift

    @property
    def transit_number(self):
        """Gets the transit_number of this BankAccountUpdateRequestData.

        Transit number for the BankAccount branch.

        :return: The transit_number of this BankAccountUpdateRequestData.
        :rtype: str
        """
        return self._transit_number

    @transit_number.setter
    def transit_number(self, transit_number):
        """Sets the transit_number of this BankAccountUpdateRequestData.

        Transit number for the BankAccount branch.

        :param transit_number: The transit_number of this BankAccountUpdateRequestData.
        :type transit_number: str
        """

        self._transit_number = transit_number
