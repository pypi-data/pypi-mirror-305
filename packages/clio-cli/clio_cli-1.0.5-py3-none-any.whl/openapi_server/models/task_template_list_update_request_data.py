# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_template_list_create_request_data_practice_area import TaskTemplateListCreateRequestDataPracticeArea
from openapi_server import util


class TaskTemplateListUpdateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, practice_area: TaskTemplateListCreateRequestDataPracticeArea=None):
        """TaskTemplateListUpdateRequestData - a model defined in OpenAPI

        :param description: The description of this TaskTemplateListUpdateRequestData.
        :param name: The name of this TaskTemplateListUpdateRequestData.
        :param practice_area: The practice_area of this TaskTemplateListUpdateRequestData.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'practice_area': TaskTemplateListCreateRequestDataPracticeArea
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'practice_area': 'practice_area'
        }

        self._description = description
        self._name = name
        self._practice_area = practice_area

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskTemplateListUpdateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskTemplateList_update_request_data of this TaskTemplateListUpdateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this TaskTemplateListUpdateRequestData.

        Description of the TaskTemplateList.

        :return: The description of this TaskTemplateListUpdateRequestData.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TaskTemplateListUpdateRequestData.

        Description of the TaskTemplateList.

        :param description: The description of this TaskTemplateListUpdateRequestData.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this TaskTemplateListUpdateRequestData.

        Name of the TaskTemplateList.

        :return: The name of this TaskTemplateListUpdateRequestData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TaskTemplateListUpdateRequestData.

        Name of the TaskTemplateList.

        :param name: The name of this TaskTemplateListUpdateRequestData.
        :type name: str
        """

        self._name = name

    @property
    def practice_area(self):
        """Gets the practice_area of this TaskTemplateListUpdateRequestData.


        :return: The practice_area of this TaskTemplateListUpdateRequestData.
        :rtype: TaskTemplateListCreateRequestDataPracticeArea
        """
        return self._practice_area

    @practice_area.setter
    def practice_area(self, practice_area):
        """Sets the practice_area of this TaskTemplateListUpdateRequestData.


        :param practice_area: The practice_area of this TaskTemplateListUpdateRequestData.
        :type practice_area: TaskTemplateListCreateRequestDataPracticeArea
        """

        self._practice_area = practice_area
