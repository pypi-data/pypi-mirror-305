# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.matter_update_request_data_statute_of_limitations_reminders_inner import MatterUpdateRequestDataStatuteOfLimitationsRemindersInner
from openapi_server import util


class MatterUpdateRequestDataStatuteOfLimitations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, due_at: date=None, reminders: List[MatterUpdateRequestDataStatuteOfLimitationsRemindersInner]=None):
        """MatterUpdateRequestDataStatuteOfLimitations - a model defined in OpenAPI

        :param status: The status of this MatterUpdateRequestDataStatuteOfLimitations.
        :param due_at: The due_at of this MatterUpdateRequestDataStatuteOfLimitations.
        :param reminders: The reminders of this MatterUpdateRequestDataStatuteOfLimitations.
        """
        self.openapi_types = {
            'status': str,
            'due_at': date,
            'reminders': List[MatterUpdateRequestDataStatuteOfLimitationsRemindersInner]
        }

        self.attribute_map = {
            'status': 'status',
            'due_at': 'due_at',
            'reminders': 'reminders'
        }

        self._status = status
        self._due_at = due_at
        self._reminders = reminders

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatterUpdateRequestDataStatuteOfLimitations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Matter_update_request_data_statute_of_limitations of this MatterUpdateRequestDataStatuteOfLimitations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this MatterUpdateRequestDataStatuteOfLimitations.

        The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only.

        :return: The status of this MatterUpdateRequestDataStatuteOfLimitations.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MatterUpdateRequestDataStatuteOfLimitations.

        The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only.

        :param status: The status of this MatterUpdateRequestDataStatuteOfLimitations.
        :type status: str
        """
        allowed_values = ["pending", "in_progress", "in_review", "complete"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def due_at(self):
        """Gets the due_at of this MatterUpdateRequestDataStatuteOfLimitations.

        The due date of Statute of Limitations. (Expects an ISO-8601 date).

        :return: The due_at of this MatterUpdateRequestDataStatuteOfLimitations.
        :rtype: date
        """
        return self._due_at

    @due_at.setter
    def due_at(self, due_at):
        """Sets the due_at of this MatterUpdateRequestDataStatuteOfLimitations.

        The due date of Statute of Limitations. (Expects an ISO-8601 date).

        :param due_at: The due_at of this MatterUpdateRequestDataStatuteOfLimitations.
        :type due_at: date
        """

        self._due_at = due_at

    @property
    def reminders(self):
        """Gets the reminders of this MatterUpdateRequestDataStatuteOfLimitations.


        :return: The reminders of this MatterUpdateRequestDataStatuteOfLimitations.
        :rtype: List[MatterUpdateRequestDataStatuteOfLimitationsRemindersInner]
        """
        return self._reminders

    @reminders.setter
    def reminders(self, reminders):
        """Sets the reminders of this MatterUpdateRequestDataStatuteOfLimitations.


        :param reminders: The reminders of this MatterUpdateRequestDataStatuteOfLimitations.
        :type reminders: List[MatterUpdateRequestDataStatuteOfLimitationsRemindersInner]
        """

        self._reminders = reminders
