# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LegalAidUkMatterBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_point: str=None, laa_office_number: str=None, ait_hearing_centre: int=None, attended_several_hearings_acting_for_multiple_clients: bool=None, bill_ho_ucn: str=None, bill_number_of_attendances: int=None, bill_outcome_for_the_client_code: int=None, bill_stage_reached_code: int=None, case_reference: str=None, case_start_date: date=None, category: int=None, category_as_string: str=None, certificate_effective_date: date=None, certificate_expiration_date: date=None, certificate_number: str=None, certificate_scope: str=None, certification_type: int=None, change_of_solicitor: bool=None, client_equal_opportunity_monitoring: str=None, client_type: int=None, clr_start_date: date=None, clr_total_profit_costs: str=None, cost_limit: str=None, counsel: int=None, court: int=None, court_id: int=None, court_id_code: str=None, created_at: datetime=None, delivery_location: str=None, dscc_number: str=None, duty_solicitor: bool=None, etag: str=None, exceptional_case_funding_reference: str=None, expense_limit: str=None, fee_scheme: int=None, first_conducting_solicitor: bool=None, id: int=None, irc_surgery: str=None, legacy_case: str=None, legal_representation_number: str=None, lh_total_disbursements: str=None, lh_start_date: str=None, lh_total_profit_costs: str=None, linked_matter_id: int=None, local_authority_number: str=None, maat_id: str=None, matter_type: int=None, matter_type_code: str=None, matter_type_1: int=None, matter_type_1_code: str=None, matter_type_1_title: str=None, matter_type_2: int=None, matter_type_2_code: str=None, matter_type_2_title: str=None, matter_types_combined: str=None, number_of_clients_seen_at_surgery: int=None, number_of_clients: int=None, party: int=None, police_station: str=None, post_transfer_clients_represented: int=None, postal_application_accepted: str=None, prior_authority_reference: str=None, prison_id: int=None, prison_law_prior_approval_number: str=None, procurement_area: str=None, region: int=None, related_claims_number: str=None, representation_order_date: date=None, schedule_reference_number: str=None, scheme_id: str=None, session_type: int=None, solicitor_type: int=None, standard_fee_category: int=None, surgery_clients_resulting_in_a_legal_help_matter_opened: int=None, surgery_clients: int=None, surgery_date: date=None, transfer_date: date=None, type_of_advice: int=None, type_of_service: str=None, ucn: str=None, ufn: str=None, undesignated_area_court: bool=None, updated_at: datetime=None, user_type: int=None, youth_court: bool=None):
        """LegalAidUkMatterBase - a model defined in OpenAPI

        :param access_point: The access_point of this LegalAidUkMatterBase.
        :param laa_office_number: The laa_office_number of this LegalAidUkMatterBase.
        :param ait_hearing_centre: The ait_hearing_centre of this LegalAidUkMatterBase.
        :param attended_several_hearings_acting_for_multiple_clients: The attended_several_hearings_acting_for_multiple_clients of this LegalAidUkMatterBase.
        :param bill_ho_ucn: The bill_ho_ucn of this LegalAidUkMatterBase.
        :param bill_number_of_attendances: The bill_number_of_attendances of this LegalAidUkMatterBase.
        :param bill_outcome_for_the_client_code: The bill_outcome_for_the_client_code of this LegalAidUkMatterBase.
        :param bill_stage_reached_code: The bill_stage_reached_code of this LegalAidUkMatterBase.
        :param case_reference: The case_reference of this LegalAidUkMatterBase.
        :param case_start_date: The case_start_date of this LegalAidUkMatterBase.
        :param category: The category of this LegalAidUkMatterBase.
        :param category_as_string: The category_as_string of this LegalAidUkMatterBase.
        :param certificate_effective_date: The certificate_effective_date of this LegalAidUkMatterBase.
        :param certificate_expiration_date: The certificate_expiration_date of this LegalAidUkMatterBase.
        :param certificate_number: The certificate_number of this LegalAidUkMatterBase.
        :param certificate_scope: The certificate_scope of this LegalAidUkMatterBase.
        :param certification_type: The certification_type of this LegalAidUkMatterBase.
        :param change_of_solicitor: The change_of_solicitor of this LegalAidUkMatterBase.
        :param client_equal_opportunity_monitoring: The client_equal_opportunity_monitoring of this LegalAidUkMatterBase.
        :param client_type: The client_type of this LegalAidUkMatterBase.
        :param clr_start_date: The clr_start_date of this LegalAidUkMatterBase.
        :param clr_total_profit_costs: The clr_total_profit_costs of this LegalAidUkMatterBase.
        :param cost_limit: The cost_limit of this LegalAidUkMatterBase.
        :param counsel: The counsel of this LegalAidUkMatterBase.
        :param court: The court of this LegalAidUkMatterBase.
        :param court_id: The court_id of this LegalAidUkMatterBase.
        :param court_id_code: The court_id_code of this LegalAidUkMatterBase.
        :param created_at: The created_at of this LegalAidUkMatterBase.
        :param delivery_location: The delivery_location of this LegalAidUkMatterBase.
        :param dscc_number: The dscc_number of this LegalAidUkMatterBase.
        :param duty_solicitor: The duty_solicitor of this LegalAidUkMatterBase.
        :param etag: The etag of this LegalAidUkMatterBase.
        :param exceptional_case_funding_reference: The exceptional_case_funding_reference of this LegalAidUkMatterBase.
        :param expense_limit: The expense_limit of this LegalAidUkMatterBase.
        :param fee_scheme: The fee_scheme of this LegalAidUkMatterBase.
        :param first_conducting_solicitor: The first_conducting_solicitor of this LegalAidUkMatterBase.
        :param id: The id of this LegalAidUkMatterBase.
        :param irc_surgery: The irc_surgery of this LegalAidUkMatterBase.
        :param legacy_case: The legacy_case of this LegalAidUkMatterBase.
        :param legal_representation_number: The legal_representation_number of this LegalAidUkMatterBase.
        :param lh_total_disbursements: The lh_total_disbursements of this LegalAidUkMatterBase.
        :param lh_start_date: The lh_start_date of this LegalAidUkMatterBase.
        :param lh_total_profit_costs: The lh_total_profit_costs of this LegalAidUkMatterBase.
        :param linked_matter_id: The linked_matter_id of this LegalAidUkMatterBase.
        :param local_authority_number: The local_authority_number of this LegalAidUkMatterBase.
        :param maat_id: The maat_id of this LegalAidUkMatterBase.
        :param matter_type: The matter_type of this LegalAidUkMatterBase.
        :param matter_type_code: The matter_type_code of this LegalAidUkMatterBase.
        :param matter_type_1: The matter_type_1 of this LegalAidUkMatterBase.
        :param matter_type_1_code: The matter_type_1_code of this LegalAidUkMatterBase.
        :param matter_type_1_title: The matter_type_1_title of this LegalAidUkMatterBase.
        :param matter_type_2: The matter_type_2 of this LegalAidUkMatterBase.
        :param matter_type_2_code: The matter_type_2_code of this LegalAidUkMatterBase.
        :param matter_type_2_title: The matter_type_2_title of this LegalAidUkMatterBase.
        :param matter_types_combined: The matter_types_combined of this LegalAidUkMatterBase.
        :param number_of_clients_seen_at_surgery: The number_of_clients_seen_at_surgery of this LegalAidUkMatterBase.
        :param number_of_clients: The number_of_clients of this LegalAidUkMatterBase.
        :param party: The party of this LegalAidUkMatterBase.
        :param police_station: The police_station of this LegalAidUkMatterBase.
        :param post_transfer_clients_represented: The post_transfer_clients_represented of this LegalAidUkMatterBase.
        :param postal_application_accepted: The postal_application_accepted of this LegalAidUkMatterBase.
        :param prior_authority_reference: The prior_authority_reference of this LegalAidUkMatterBase.
        :param prison_id: The prison_id of this LegalAidUkMatterBase.
        :param prison_law_prior_approval_number: The prison_law_prior_approval_number of this LegalAidUkMatterBase.
        :param procurement_area: The procurement_area of this LegalAidUkMatterBase.
        :param region: The region of this LegalAidUkMatterBase.
        :param related_claims_number: The related_claims_number of this LegalAidUkMatterBase.
        :param representation_order_date: The representation_order_date of this LegalAidUkMatterBase.
        :param schedule_reference_number: The schedule_reference_number of this LegalAidUkMatterBase.
        :param scheme_id: The scheme_id of this LegalAidUkMatterBase.
        :param session_type: The session_type of this LegalAidUkMatterBase.
        :param solicitor_type: The solicitor_type of this LegalAidUkMatterBase.
        :param standard_fee_category: The standard_fee_category of this LegalAidUkMatterBase.
        :param surgery_clients_resulting_in_a_legal_help_matter_opened: The surgery_clients_resulting_in_a_legal_help_matter_opened of this LegalAidUkMatterBase.
        :param surgery_clients: The surgery_clients of this LegalAidUkMatterBase.
        :param surgery_date: The surgery_date of this LegalAidUkMatterBase.
        :param transfer_date: The transfer_date of this LegalAidUkMatterBase.
        :param type_of_advice: The type_of_advice of this LegalAidUkMatterBase.
        :param type_of_service: The type_of_service of this LegalAidUkMatterBase.
        :param ucn: The ucn of this LegalAidUkMatterBase.
        :param ufn: The ufn of this LegalAidUkMatterBase.
        :param undesignated_area_court: The undesignated_area_court of this LegalAidUkMatterBase.
        :param updated_at: The updated_at of this LegalAidUkMatterBase.
        :param user_type: The user_type of this LegalAidUkMatterBase.
        :param youth_court: The youth_court of this LegalAidUkMatterBase.
        """
        self.openapi_types = {
            'access_point': str,
            'laa_office_number': str,
            'ait_hearing_centre': int,
            'attended_several_hearings_acting_for_multiple_clients': bool,
            'bill_ho_ucn': str,
            'bill_number_of_attendances': int,
            'bill_outcome_for_the_client_code': int,
            'bill_stage_reached_code': int,
            'case_reference': str,
            'case_start_date': date,
            'category': int,
            'category_as_string': str,
            'certificate_effective_date': date,
            'certificate_expiration_date': date,
            'certificate_number': str,
            'certificate_scope': str,
            'certification_type': int,
            'change_of_solicitor': bool,
            'client_equal_opportunity_monitoring': str,
            'client_type': int,
            'clr_start_date': date,
            'clr_total_profit_costs': str,
            'cost_limit': str,
            'counsel': int,
            'court': int,
            'court_id': int,
            'court_id_code': str,
            'created_at': datetime,
            'delivery_location': str,
            'dscc_number': str,
            'duty_solicitor': bool,
            'etag': str,
            'exceptional_case_funding_reference': str,
            'expense_limit': str,
            'fee_scheme': int,
            'first_conducting_solicitor': bool,
            'id': int,
            'irc_surgery': str,
            'legacy_case': str,
            'legal_representation_number': str,
            'lh_total_disbursements': str,
            'lh_start_date': str,
            'lh_total_profit_costs': str,
            'linked_matter_id': int,
            'local_authority_number': str,
            'maat_id': str,
            'matter_type': int,
            'matter_type_code': str,
            'matter_type_1': int,
            'matter_type_1_code': str,
            'matter_type_1_title': str,
            'matter_type_2': int,
            'matter_type_2_code': str,
            'matter_type_2_title': str,
            'matter_types_combined': str,
            'number_of_clients_seen_at_surgery': int,
            'number_of_clients': int,
            'party': int,
            'police_station': str,
            'post_transfer_clients_represented': int,
            'postal_application_accepted': str,
            'prior_authority_reference': str,
            'prison_id': int,
            'prison_law_prior_approval_number': str,
            'procurement_area': str,
            'region': int,
            'related_claims_number': str,
            'representation_order_date': date,
            'schedule_reference_number': str,
            'scheme_id': str,
            'session_type': int,
            'solicitor_type': int,
            'standard_fee_category': int,
            'surgery_clients_resulting_in_a_legal_help_matter_opened': int,
            'surgery_clients': int,
            'surgery_date': date,
            'transfer_date': date,
            'type_of_advice': int,
            'type_of_service': str,
            'ucn': str,
            'ufn': str,
            'undesignated_area_court': bool,
            'updated_at': datetime,
            'user_type': int,
            'youth_court': bool
        }

        self.attribute_map = {
            'access_point': 'access_point',
            'laa_office_number': 'laa_office_number',
            'ait_hearing_centre': 'ait_hearing_centre',
            'attended_several_hearings_acting_for_multiple_clients': 'attended_several_hearings_acting_for_multiple_clients',
            'bill_ho_ucn': 'bill_ho_ucn',
            'bill_number_of_attendances': 'bill_number_of_attendances',
            'bill_outcome_for_the_client_code': 'bill_outcome_for_the_client_code',
            'bill_stage_reached_code': 'bill_stage_reached_code',
            'case_reference': 'case_reference',
            'case_start_date': 'case_start_date',
            'category': 'category',
            'category_as_string': 'category_as_string',
            'certificate_effective_date': 'certificate_effective_date',
            'certificate_expiration_date': 'certificate_expiration_date',
            'certificate_number': 'certificate_number',
            'certificate_scope': 'certificate_scope',
            'certification_type': 'certification_type',
            'change_of_solicitor': 'change_of_solicitor',
            'client_equal_opportunity_monitoring': 'client_equal_opportunity_monitoring',
            'client_type': 'client_type',
            'clr_start_date': 'clr_start_date',
            'clr_total_profit_costs': 'clr_total_profit_costs',
            'cost_limit': 'cost_limit',
            'counsel': 'counsel',
            'court': 'court',
            'court_id': 'court_id',
            'court_id_code': 'court_id_code',
            'created_at': 'created_at',
            'delivery_location': 'delivery_location',
            'dscc_number': 'dscc_number',
            'duty_solicitor': 'duty_solicitor',
            'etag': 'etag',
            'exceptional_case_funding_reference': 'exceptional_case_funding_reference',
            'expense_limit': 'expense_limit',
            'fee_scheme': 'fee_scheme',
            'first_conducting_solicitor': 'first_conducting_solicitor',
            'id': 'id',
            'irc_surgery': 'irc_surgery',
            'legacy_case': 'legacy_case',
            'legal_representation_number': 'legal_representation_number',
            'lh_total_disbursements': 'lh_total_disbursements',
            'lh_start_date': 'lh_start_date',
            'lh_total_profit_costs': 'lh_total_profit_costs',
            'linked_matter_id': 'linked_matter_id',
            'local_authority_number': 'local_authority_number',
            'maat_id': 'maat_id',
            'matter_type': 'matter_type',
            'matter_type_code': 'matter_type_code',
            'matter_type_1': 'matter_type_1',
            'matter_type_1_code': 'matter_type_1_code',
            'matter_type_1_title': 'matter_type_1_title',
            'matter_type_2': 'matter_type_2',
            'matter_type_2_code': 'matter_type_2_code',
            'matter_type_2_title': 'matter_type_2_title',
            'matter_types_combined': 'matter_types_combined',
            'number_of_clients_seen_at_surgery': 'number_of_clients_seen_at_surgery',
            'number_of_clients': 'number_of_clients',
            'party': 'party',
            'police_station': 'police_station',
            'post_transfer_clients_represented': 'post_transfer_clients_represented',
            'postal_application_accepted': 'postal_application_accepted',
            'prior_authority_reference': 'prior_authority_reference',
            'prison_id': 'prison_id',
            'prison_law_prior_approval_number': 'prison_law_prior_approval_number',
            'procurement_area': 'procurement_area',
            'region': 'region',
            'related_claims_number': 'related_claims_number',
            'representation_order_date': 'representation_order_date',
            'schedule_reference_number': 'schedule_reference_number',
            'scheme_id': 'scheme_id',
            'session_type': 'session_type',
            'solicitor_type': 'solicitor_type',
            'standard_fee_category': 'standard_fee_category',
            'surgery_clients_resulting_in_a_legal_help_matter_opened': 'surgery_clients_resulting_in_a_legal_help_matter_opened',
            'surgery_clients': 'surgery_clients',
            'surgery_date': 'surgery_date',
            'transfer_date': 'transfer_date',
            'type_of_advice': 'type_of_advice',
            'type_of_service': 'type_of_service',
            'ucn': 'ucn',
            'ufn': 'ufn',
            'undesignated_area_court': 'undesignated_area_court',
            'updated_at': 'updated_at',
            'user_type': 'user_type',
            'youth_court': 'youth_court'
        }

        self._access_point = access_point
        self._laa_office_number = laa_office_number
        self._ait_hearing_centre = ait_hearing_centre
        self._attended_several_hearings_acting_for_multiple_clients = attended_several_hearings_acting_for_multiple_clients
        self._bill_ho_ucn = bill_ho_ucn
        self._bill_number_of_attendances = bill_number_of_attendances
        self._bill_outcome_for_the_client_code = bill_outcome_for_the_client_code
        self._bill_stage_reached_code = bill_stage_reached_code
        self._case_reference = case_reference
        self._case_start_date = case_start_date
        self._category = category
        self._category_as_string = category_as_string
        self._certificate_effective_date = certificate_effective_date
        self._certificate_expiration_date = certificate_expiration_date
        self._certificate_number = certificate_number
        self._certificate_scope = certificate_scope
        self._certification_type = certification_type
        self._change_of_solicitor = change_of_solicitor
        self._client_equal_opportunity_monitoring = client_equal_opportunity_monitoring
        self._client_type = client_type
        self._clr_start_date = clr_start_date
        self._clr_total_profit_costs = clr_total_profit_costs
        self._cost_limit = cost_limit
        self._counsel = counsel
        self._court = court
        self._court_id = court_id
        self._court_id_code = court_id_code
        self._created_at = created_at
        self._delivery_location = delivery_location
        self._dscc_number = dscc_number
        self._duty_solicitor = duty_solicitor
        self._etag = etag
        self._exceptional_case_funding_reference = exceptional_case_funding_reference
        self._expense_limit = expense_limit
        self._fee_scheme = fee_scheme
        self._first_conducting_solicitor = first_conducting_solicitor
        self._id = id
        self._irc_surgery = irc_surgery
        self._legacy_case = legacy_case
        self._legal_representation_number = legal_representation_number
        self._lh_total_disbursements = lh_total_disbursements
        self._lh_start_date = lh_start_date
        self._lh_total_profit_costs = lh_total_profit_costs
        self._linked_matter_id = linked_matter_id
        self._local_authority_number = local_authority_number
        self._maat_id = maat_id
        self._matter_type = matter_type
        self._matter_type_code = matter_type_code
        self._matter_type_1 = matter_type_1
        self._matter_type_1_code = matter_type_1_code
        self._matter_type_1_title = matter_type_1_title
        self._matter_type_2 = matter_type_2
        self._matter_type_2_code = matter_type_2_code
        self._matter_type_2_title = matter_type_2_title
        self._matter_types_combined = matter_types_combined
        self._number_of_clients_seen_at_surgery = number_of_clients_seen_at_surgery
        self._number_of_clients = number_of_clients
        self._party = party
        self._police_station = police_station
        self._post_transfer_clients_represented = post_transfer_clients_represented
        self._postal_application_accepted = postal_application_accepted
        self._prior_authority_reference = prior_authority_reference
        self._prison_id = prison_id
        self._prison_law_prior_approval_number = prison_law_prior_approval_number
        self._procurement_area = procurement_area
        self._region = region
        self._related_claims_number = related_claims_number
        self._representation_order_date = representation_order_date
        self._schedule_reference_number = schedule_reference_number
        self._scheme_id = scheme_id
        self._session_type = session_type
        self._solicitor_type = solicitor_type
        self._standard_fee_category = standard_fee_category
        self._surgery_clients_resulting_in_a_legal_help_matter_opened = surgery_clients_resulting_in_a_legal_help_matter_opened
        self._surgery_clients = surgery_clients
        self._surgery_date = surgery_date
        self._transfer_date = transfer_date
        self._type_of_advice = type_of_advice
        self._type_of_service = type_of_service
        self._ucn = ucn
        self._ufn = ufn
        self._undesignated_area_court = undesignated_area_court
        self._updated_at = updated_at
        self._user_type = user_type
        self._youth_court = youth_court

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegalAidUkMatterBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LegalAidUkMatter_base of this LegalAidUkMatterBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_point(self):
        """Gets the access_point of this LegalAidUkMatterBase.

        Access point

        :return: The access_point of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._access_point

    @access_point.setter
    def access_point(self, access_point):
        """Sets the access_point of this LegalAidUkMatterBase.

        Access point

        :param access_point: The access_point of this LegalAidUkMatterBase.
        :type access_point: str
        """

        self._access_point = access_point

    @property
    def laa_office_number(self):
        """Gets the laa_office_number of this LegalAidUkMatterBase.

        LAA office number

        :return: The laa_office_number of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._laa_office_number

    @laa_office_number.setter
    def laa_office_number(self, laa_office_number):
        """Sets the laa_office_number of this LegalAidUkMatterBase.

        LAA office number

        :param laa_office_number: The laa_office_number of this LegalAidUkMatterBase.
        :type laa_office_number: str
        """

        self._laa_office_number = laa_office_number

    @property
    def ait_hearing_centre(self):
        """Gets the ait_hearing_centre of this LegalAidUkMatterBase.

        AIT hearing centre

        :return: The ait_hearing_centre of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._ait_hearing_centre

    @ait_hearing_centre.setter
    def ait_hearing_centre(self, ait_hearing_centre):
        """Sets the ait_hearing_centre of this LegalAidUkMatterBase.

        AIT hearing centre

        :param ait_hearing_centre: The ait_hearing_centre of this LegalAidUkMatterBase.
        :type ait_hearing_centre: int
        """

        self._ait_hearing_centre = ait_hearing_centre

    @property
    def attended_several_hearings_acting_for_multiple_clients(self):
        """Gets the attended_several_hearings_acting_for_multiple_clients of this LegalAidUkMatterBase.

        Attended several hearings acting for multiple clients

        :return: The attended_several_hearings_acting_for_multiple_clients of this LegalAidUkMatterBase.
        :rtype: bool
        """
        return self._attended_several_hearings_acting_for_multiple_clients

    @attended_several_hearings_acting_for_multiple_clients.setter
    def attended_several_hearings_acting_for_multiple_clients(self, attended_several_hearings_acting_for_multiple_clients):
        """Sets the attended_several_hearings_acting_for_multiple_clients of this LegalAidUkMatterBase.

        Attended several hearings acting for multiple clients

        :param attended_several_hearings_acting_for_multiple_clients: The attended_several_hearings_acting_for_multiple_clients of this LegalAidUkMatterBase.
        :type attended_several_hearings_acting_for_multiple_clients: bool
        """

        self._attended_several_hearings_acting_for_multiple_clients = attended_several_hearings_acting_for_multiple_clients

    @property
    def bill_ho_ucn(self):
        """Gets the bill_ho_ucn of this LegalAidUkMatterBase.

        Bill HO UCN

        :return: The bill_ho_ucn of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._bill_ho_ucn

    @bill_ho_ucn.setter
    def bill_ho_ucn(self, bill_ho_ucn):
        """Sets the bill_ho_ucn of this LegalAidUkMatterBase.

        Bill HO UCN

        :param bill_ho_ucn: The bill_ho_ucn of this LegalAidUkMatterBase.
        :type bill_ho_ucn: str
        """

        self._bill_ho_ucn = bill_ho_ucn

    @property
    def bill_number_of_attendances(self):
        """Gets the bill_number_of_attendances of this LegalAidUkMatterBase.

        Bill number of attendances

        :return: The bill_number_of_attendances of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._bill_number_of_attendances

    @bill_number_of_attendances.setter
    def bill_number_of_attendances(self, bill_number_of_attendances):
        """Sets the bill_number_of_attendances of this LegalAidUkMatterBase.

        Bill number of attendances

        :param bill_number_of_attendances: The bill_number_of_attendances of this LegalAidUkMatterBase.
        :type bill_number_of_attendances: int
        """

        self._bill_number_of_attendances = bill_number_of_attendances

    @property
    def bill_outcome_for_the_client_code(self):
        """Gets the bill_outcome_for_the_client_code of this LegalAidUkMatterBase.

        Bill outcome for the client code

        :return: The bill_outcome_for_the_client_code of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._bill_outcome_for_the_client_code

    @bill_outcome_for_the_client_code.setter
    def bill_outcome_for_the_client_code(self, bill_outcome_for_the_client_code):
        """Sets the bill_outcome_for_the_client_code of this LegalAidUkMatterBase.

        Bill outcome for the client code

        :param bill_outcome_for_the_client_code: The bill_outcome_for_the_client_code of this LegalAidUkMatterBase.
        :type bill_outcome_for_the_client_code: int
        """

        self._bill_outcome_for_the_client_code = bill_outcome_for_the_client_code

    @property
    def bill_stage_reached_code(self):
        """Gets the bill_stage_reached_code of this LegalAidUkMatterBase.

        Bill stage reached code

        :return: The bill_stage_reached_code of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._bill_stage_reached_code

    @bill_stage_reached_code.setter
    def bill_stage_reached_code(self, bill_stage_reached_code):
        """Sets the bill_stage_reached_code of this LegalAidUkMatterBase.

        Bill stage reached code

        :param bill_stage_reached_code: The bill_stage_reached_code of this LegalAidUkMatterBase.
        :type bill_stage_reached_code: int
        """

        self._bill_stage_reached_code = bill_stage_reached_code

    @property
    def case_reference(self):
        """Gets the case_reference of this LegalAidUkMatterBase.

        Case reference

        :return: The case_reference of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._case_reference

    @case_reference.setter
    def case_reference(self, case_reference):
        """Sets the case_reference of this LegalAidUkMatterBase.

        Case reference

        :param case_reference: The case_reference of this LegalAidUkMatterBase.
        :type case_reference: str
        """

        self._case_reference = case_reference

    @property
    def case_start_date(self):
        """Gets the case_start_date of this LegalAidUkMatterBase.

        Case start date

        :return: The case_start_date of this LegalAidUkMatterBase.
        :rtype: date
        """
        return self._case_start_date

    @case_start_date.setter
    def case_start_date(self, case_start_date):
        """Sets the case_start_date of this LegalAidUkMatterBase.

        Case start date

        :param case_start_date: The case_start_date of this LegalAidUkMatterBase.
        :type case_start_date: date
        """

        self._case_start_date = case_start_date

    @property
    def category(self):
        """Gets the category of this LegalAidUkMatterBase.

        Category

        :return: The category of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this LegalAidUkMatterBase.

        Category

        :param category: The category of this LegalAidUkMatterBase.
        :type category: int
        """

        self._category = category

    @property
    def category_as_string(self):
        """Gets the category_as_string of this LegalAidUkMatterBase.

        Category as string

        :return: The category_as_string of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._category_as_string

    @category_as_string.setter
    def category_as_string(self, category_as_string):
        """Sets the category_as_string of this LegalAidUkMatterBase.

        Category as string

        :param category_as_string: The category_as_string of this LegalAidUkMatterBase.
        :type category_as_string: str
        """

        self._category_as_string = category_as_string

    @property
    def certificate_effective_date(self):
        """Gets the certificate_effective_date of this LegalAidUkMatterBase.

        Certificate effective date

        :return: The certificate_effective_date of this LegalAidUkMatterBase.
        :rtype: date
        """
        return self._certificate_effective_date

    @certificate_effective_date.setter
    def certificate_effective_date(self, certificate_effective_date):
        """Sets the certificate_effective_date of this LegalAidUkMatterBase.

        Certificate effective date

        :param certificate_effective_date: The certificate_effective_date of this LegalAidUkMatterBase.
        :type certificate_effective_date: date
        """

        self._certificate_effective_date = certificate_effective_date

    @property
    def certificate_expiration_date(self):
        """Gets the certificate_expiration_date of this LegalAidUkMatterBase.

        Certificate expiration date

        :return: The certificate_expiration_date of this LegalAidUkMatterBase.
        :rtype: date
        """
        return self._certificate_expiration_date

    @certificate_expiration_date.setter
    def certificate_expiration_date(self, certificate_expiration_date):
        """Sets the certificate_expiration_date of this LegalAidUkMatterBase.

        Certificate expiration date

        :param certificate_expiration_date: The certificate_expiration_date of this LegalAidUkMatterBase.
        :type certificate_expiration_date: date
        """

        self._certificate_expiration_date = certificate_expiration_date

    @property
    def certificate_number(self):
        """Gets the certificate_number of this LegalAidUkMatterBase.

        Certificate number

        :return: The certificate_number of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._certificate_number

    @certificate_number.setter
    def certificate_number(self, certificate_number):
        """Sets the certificate_number of this LegalAidUkMatterBase.

        Certificate number

        :param certificate_number: The certificate_number of this LegalAidUkMatterBase.
        :type certificate_number: str
        """

        self._certificate_number = certificate_number

    @property
    def certificate_scope(self):
        """Gets the certificate_scope of this LegalAidUkMatterBase.

        Certificate scope

        :return: The certificate_scope of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._certificate_scope

    @certificate_scope.setter
    def certificate_scope(self, certificate_scope):
        """Sets the certificate_scope of this LegalAidUkMatterBase.

        Certificate scope

        :param certificate_scope: The certificate_scope of this LegalAidUkMatterBase.
        :type certificate_scope: str
        """

        self._certificate_scope = certificate_scope

    @property
    def certification_type(self):
        """Gets the certification_type of this LegalAidUkMatterBase.

        Certification type

        :return: The certification_type of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._certification_type

    @certification_type.setter
    def certification_type(self, certification_type):
        """Sets the certification_type of this LegalAidUkMatterBase.

        Certification type

        :param certification_type: The certification_type of this LegalAidUkMatterBase.
        :type certification_type: int
        """

        self._certification_type = certification_type

    @property
    def change_of_solicitor(self):
        """Gets the change_of_solicitor of this LegalAidUkMatterBase.

        Change of solicitor

        :return: The change_of_solicitor of this LegalAidUkMatterBase.
        :rtype: bool
        """
        return self._change_of_solicitor

    @change_of_solicitor.setter
    def change_of_solicitor(self, change_of_solicitor):
        """Sets the change_of_solicitor of this LegalAidUkMatterBase.

        Change of solicitor

        :param change_of_solicitor: The change_of_solicitor of this LegalAidUkMatterBase.
        :type change_of_solicitor: bool
        """

        self._change_of_solicitor = change_of_solicitor

    @property
    def client_equal_opportunity_monitoring(self):
        """Gets the client_equal_opportunity_monitoring of this LegalAidUkMatterBase.

        Client equal opportunity monitoring

        :return: The client_equal_opportunity_monitoring of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._client_equal_opportunity_monitoring

    @client_equal_opportunity_monitoring.setter
    def client_equal_opportunity_monitoring(self, client_equal_opportunity_monitoring):
        """Sets the client_equal_opportunity_monitoring of this LegalAidUkMatterBase.

        Client equal opportunity monitoring

        :param client_equal_opportunity_monitoring: The client_equal_opportunity_monitoring of this LegalAidUkMatterBase.
        :type client_equal_opportunity_monitoring: str
        """

        self._client_equal_opportunity_monitoring = client_equal_opportunity_monitoring

    @property
    def client_type(self):
        """Gets the client_type of this LegalAidUkMatterBase.

        Client type

        :return: The client_type of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._client_type

    @client_type.setter
    def client_type(self, client_type):
        """Sets the client_type of this LegalAidUkMatterBase.

        Client type

        :param client_type: The client_type of this LegalAidUkMatterBase.
        :type client_type: int
        """

        self._client_type = client_type

    @property
    def clr_start_date(self):
        """Gets the clr_start_date of this LegalAidUkMatterBase.

        CLR start date

        :return: The clr_start_date of this LegalAidUkMatterBase.
        :rtype: date
        """
        return self._clr_start_date

    @clr_start_date.setter
    def clr_start_date(self, clr_start_date):
        """Sets the clr_start_date of this LegalAidUkMatterBase.

        CLR start date

        :param clr_start_date: The clr_start_date of this LegalAidUkMatterBase.
        :type clr_start_date: date
        """

        self._clr_start_date = clr_start_date

    @property
    def clr_total_profit_costs(self):
        """Gets the clr_total_profit_costs of this LegalAidUkMatterBase.

        CLR total profit costs

        :return: The clr_total_profit_costs of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._clr_total_profit_costs

    @clr_total_profit_costs.setter
    def clr_total_profit_costs(self, clr_total_profit_costs):
        """Sets the clr_total_profit_costs of this LegalAidUkMatterBase.

        CLR total profit costs

        :param clr_total_profit_costs: The clr_total_profit_costs of this LegalAidUkMatterBase.
        :type clr_total_profit_costs: str
        """

        self._clr_total_profit_costs = clr_total_profit_costs

    @property
    def cost_limit(self):
        """Gets the cost_limit of this LegalAidUkMatterBase.

        Cost limit

        :return: The cost_limit of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._cost_limit

    @cost_limit.setter
    def cost_limit(self, cost_limit):
        """Sets the cost_limit of this LegalAidUkMatterBase.

        Cost limit

        :param cost_limit: The cost_limit of this LegalAidUkMatterBase.
        :type cost_limit: str
        """

        self._cost_limit = cost_limit

    @property
    def counsel(self):
        """Gets the counsel of this LegalAidUkMatterBase.

        Counsel

        :return: The counsel of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._counsel

    @counsel.setter
    def counsel(self, counsel):
        """Sets the counsel of this LegalAidUkMatterBase.

        Counsel

        :param counsel: The counsel of this LegalAidUkMatterBase.
        :type counsel: int
        """

        self._counsel = counsel

    @property
    def court(self):
        """Gets the court of this LegalAidUkMatterBase.

        Court

        :return: The court of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._court

    @court.setter
    def court(self, court):
        """Sets the court of this LegalAidUkMatterBase.

        Court

        :param court: The court of this LegalAidUkMatterBase.
        :type court: int
        """

        self._court = court

    @property
    def court_id(self):
        """Gets the court_id of this LegalAidUkMatterBase.

        Court ID

        :return: The court_id of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._court_id

    @court_id.setter
    def court_id(self, court_id):
        """Sets the court_id of this LegalAidUkMatterBase.

        Court ID

        :param court_id: The court_id of this LegalAidUkMatterBase.
        :type court_id: int
        """

        self._court_id = court_id

    @property
    def court_id_code(self):
        """Gets the court_id_code of this LegalAidUkMatterBase.

        Court ID code

        :return: The court_id_code of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._court_id_code

    @court_id_code.setter
    def court_id_code(self, court_id_code):
        """Sets the court_id_code of this LegalAidUkMatterBase.

        Court ID code

        :param court_id_code: The court_id_code of this LegalAidUkMatterBase.
        :type court_id_code: str
        """

        self._court_id_code = court_id_code

    @property
    def created_at(self):
        """Gets the created_at of this LegalAidUkMatterBase.

        The time the *LegalAidUkMatter* was created (as a ISO-8601 timestamp)

        :return: The created_at of this LegalAidUkMatterBase.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this LegalAidUkMatterBase.

        The time the *LegalAidUkMatter* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this LegalAidUkMatterBase.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def delivery_location(self):
        """Gets the delivery_location of this LegalAidUkMatterBase.

        Delivery location

        :return: The delivery_location of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._delivery_location

    @delivery_location.setter
    def delivery_location(self, delivery_location):
        """Sets the delivery_location of this LegalAidUkMatterBase.

        Delivery location

        :param delivery_location: The delivery_location of this LegalAidUkMatterBase.
        :type delivery_location: str
        """

        self._delivery_location = delivery_location

    @property
    def dscc_number(self):
        """Gets the dscc_number of this LegalAidUkMatterBase.

        DSCC number

        :return: The dscc_number of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._dscc_number

    @dscc_number.setter
    def dscc_number(self, dscc_number):
        """Sets the dscc_number of this LegalAidUkMatterBase.

        DSCC number

        :param dscc_number: The dscc_number of this LegalAidUkMatterBase.
        :type dscc_number: str
        """

        self._dscc_number = dscc_number

    @property
    def duty_solicitor(self):
        """Gets the duty_solicitor of this LegalAidUkMatterBase.

        Duty solicitor

        :return: The duty_solicitor of this LegalAidUkMatterBase.
        :rtype: bool
        """
        return self._duty_solicitor

    @duty_solicitor.setter
    def duty_solicitor(self, duty_solicitor):
        """Sets the duty_solicitor of this LegalAidUkMatterBase.

        Duty solicitor

        :param duty_solicitor: The duty_solicitor of this LegalAidUkMatterBase.
        :type duty_solicitor: bool
        """

        self._duty_solicitor = duty_solicitor

    @property
    def etag(self):
        """Gets the etag of this LegalAidUkMatterBase.

        ETag for the *LegalAidUkMatter*

        :return: The etag of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this LegalAidUkMatterBase.

        ETag for the *LegalAidUkMatter*

        :param etag: The etag of this LegalAidUkMatterBase.
        :type etag: str
        """

        self._etag = etag

    @property
    def exceptional_case_funding_reference(self):
        """Gets the exceptional_case_funding_reference of this LegalAidUkMatterBase.

        Exceptional case funding reference

        :return: The exceptional_case_funding_reference of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._exceptional_case_funding_reference

    @exceptional_case_funding_reference.setter
    def exceptional_case_funding_reference(self, exceptional_case_funding_reference):
        """Sets the exceptional_case_funding_reference of this LegalAidUkMatterBase.

        Exceptional case funding reference

        :param exceptional_case_funding_reference: The exceptional_case_funding_reference of this LegalAidUkMatterBase.
        :type exceptional_case_funding_reference: str
        """

        self._exceptional_case_funding_reference = exceptional_case_funding_reference

    @property
    def expense_limit(self):
        """Gets the expense_limit of this LegalAidUkMatterBase.

        Expense limit

        :return: The expense_limit of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._expense_limit

    @expense_limit.setter
    def expense_limit(self, expense_limit):
        """Sets the expense_limit of this LegalAidUkMatterBase.

        Expense limit

        :param expense_limit: The expense_limit of this LegalAidUkMatterBase.
        :type expense_limit: str
        """

        self._expense_limit = expense_limit

    @property
    def fee_scheme(self):
        """Gets the fee_scheme of this LegalAidUkMatterBase.

        Fee scheme

        :return: The fee_scheme of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._fee_scheme

    @fee_scheme.setter
    def fee_scheme(self, fee_scheme):
        """Sets the fee_scheme of this LegalAidUkMatterBase.

        Fee scheme

        :param fee_scheme: The fee_scheme of this LegalAidUkMatterBase.
        :type fee_scheme: int
        """

        self._fee_scheme = fee_scheme

    @property
    def first_conducting_solicitor(self):
        """Gets the first_conducting_solicitor of this LegalAidUkMatterBase.

        First conducting solicitor

        :return: The first_conducting_solicitor of this LegalAidUkMatterBase.
        :rtype: bool
        """
        return self._first_conducting_solicitor

    @first_conducting_solicitor.setter
    def first_conducting_solicitor(self, first_conducting_solicitor):
        """Sets the first_conducting_solicitor of this LegalAidUkMatterBase.

        First conducting solicitor

        :param first_conducting_solicitor: The first_conducting_solicitor of this LegalAidUkMatterBase.
        :type first_conducting_solicitor: bool
        """

        self._first_conducting_solicitor = first_conducting_solicitor

    @property
    def id(self):
        """Gets the id of this LegalAidUkMatterBase.

        Unique identifier for the *LegalAidUkMatter*

        :return: The id of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LegalAidUkMatterBase.

        Unique identifier for the *LegalAidUkMatter*

        :param id: The id of this LegalAidUkMatterBase.
        :type id: int
        """

        self._id = id

    @property
    def irc_surgery(self):
        """Gets the irc_surgery of this LegalAidUkMatterBase.

        Irc surgery

        :return: The irc_surgery of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._irc_surgery

    @irc_surgery.setter
    def irc_surgery(self, irc_surgery):
        """Sets the irc_surgery of this LegalAidUkMatterBase.

        Irc surgery

        :param irc_surgery: The irc_surgery of this LegalAidUkMatterBase.
        :type irc_surgery: str
        """

        self._irc_surgery = irc_surgery

    @property
    def legacy_case(self):
        """Gets the legacy_case of this LegalAidUkMatterBase.

        Legacy case

        :return: The legacy_case of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._legacy_case

    @legacy_case.setter
    def legacy_case(self, legacy_case):
        """Sets the legacy_case of this LegalAidUkMatterBase.

        Legacy case

        :param legacy_case: The legacy_case of this LegalAidUkMatterBase.
        :type legacy_case: str
        """

        self._legacy_case = legacy_case

    @property
    def legal_representation_number(self):
        """Gets the legal_representation_number of this LegalAidUkMatterBase.

        Legal representation number

        :return: The legal_representation_number of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._legal_representation_number

    @legal_representation_number.setter
    def legal_representation_number(self, legal_representation_number):
        """Sets the legal_representation_number of this LegalAidUkMatterBase.

        Legal representation number

        :param legal_representation_number: The legal_representation_number of this LegalAidUkMatterBase.
        :type legal_representation_number: str
        """

        self._legal_representation_number = legal_representation_number

    @property
    def lh_total_disbursements(self):
        """Gets the lh_total_disbursements of this LegalAidUkMatterBase.

        LH total disbursements

        :return: The lh_total_disbursements of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._lh_total_disbursements

    @lh_total_disbursements.setter
    def lh_total_disbursements(self, lh_total_disbursements):
        """Sets the lh_total_disbursements of this LegalAidUkMatterBase.

        LH total disbursements

        :param lh_total_disbursements: The lh_total_disbursements of this LegalAidUkMatterBase.
        :type lh_total_disbursements: str
        """

        self._lh_total_disbursements = lh_total_disbursements

    @property
    def lh_start_date(self):
        """Gets the lh_start_date of this LegalAidUkMatterBase.

        LH start date

        :return: The lh_start_date of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._lh_start_date

    @lh_start_date.setter
    def lh_start_date(self, lh_start_date):
        """Sets the lh_start_date of this LegalAidUkMatterBase.

        LH start date

        :param lh_start_date: The lh_start_date of this LegalAidUkMatterBase.
        :type lh_start_date: str
        """

        self._lh_start_date = lh_start_date

    @property
    def lh_total_profit_costs(self):
        """Gets the lh_total_profit_costs of this LegalAidUkMatterBase.

        LH total profit costs

        :return: The lh_total_profit_costs of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._lh_total_profit_costs

    @lh_total_profit_costs.setter
    def lh_total_profit_costs(self, lh_total_profit_costs):
        """Sets the lh_total_profit_costs of this LegalAidUkMatterBase.

        LH total profit costs

        :param lh_total_profit_costs: The lh_total_profit_costs of this LegalAidUkMatterBase.
        :type lh_total_profit_costs: str
        """

        self._lh_total_profit_costs = lh_total_profit_costs

    @property
    def linked_matter_id(self):
        """Gets the linked_matter_id of this LegalAidUkMatterBase.

        Linked matter ID

        :return: The linked_matter_id of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._linked_matter_id

    @linked_matter_id.setter
    def linked_matter_id(self, linked_matter_id):
        """Sets the linked_matter_id of this LegalAidUkMatterBase.

        Linked matter ID

        :param linked_matter_id: The linked_matter_id of this LegalAidUkMatterBase.
        :type linked_matter_id: int
        """

        self._linked_matter_id = linked_matter_id

    @property
    def local_authority_number(self):
        """Gets the local_authority_number of this LegalAidUkMatterBase.

        Local authority number

        :return: The local_authority_number of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._local_authority_number

    @local_authority_number.setter
    def local_authority_number(self, local_authority_number):
        """Sets the local_authority_number of this LegalAidUkMatterBase.

        Local authority number

        :param local_authority_number: The local_authority_number of this LegalAidUkMatterBase.
        :type local_authority_number: str
        """

        self._local_authority_number = local_authority_number

    @property
    def maat_id(self):
        """Gets the maat_id of this LegalAidUkMatterBase.

        MAAT ID

        :return: The maat_id of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._maat_id

    @maat_id.setter
    def maat_id(self, maat_id):
        """Sets the maat_id of this LegalAidUkMatterBase.

        MAAT ID

        :param maat_id: The maat_id of this LegalAidUkMatterBase.
        :type maat_id: str
        """

        self._maat_id = maat_id

    @property
    def matter_type(self):
        """Gets the matter_type of this LegalAidUkMatterBase.

        Matter type

        :return: The matter_type of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._matter_type

    @matter_type.setter
    def matter_type(self, matter_type):
        """Sets the matter_type of this LegalAidUkMatterBase.

        Matter type

        :param matter_type: The matter_type of this LegalAidUkMatterBase.
        :type matter_type: int
        """

        self._matter_type = matter_type

    @property
    def matter_type_code(self):
        """Gets the matter_type_code of this LegalAidUkMatterBase.

        Matter type code

        :return: The matter_type_code of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._matter_type_code

    @matter_type_code.setter
    def matter_type_code(self, matter_type_code):
        """Sets the matter_type_code of this LegalAidUkMatterBase.

        Matter type code

        :param matter_type_code: The matter_type_code of this LegalAidUkMatterBase.
        :type matter_type_code: str
        """

        self._matter_type_code = matter_type_code

    @property
    def matter_type_1(self):
        """Gets the matter_type_1 of this LegalAidUkMatterBase.

        Matter type 1

        :return: The matter_type_1 of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._matter_type_1

    @matter_type_1.setter
    def matter_type_1(self, matter_type_1):
        """Sets the matter_type_1 of this LegalAidUkMatterBase.

        Matter type 1

        :param matter_type_1: The matter_type_1 of this LegalAidUkMatterBase.
        :type matter_type_1: int
        """

        self._matter_type_1 = matter_type_1

    @property
    def matter_type_1_code(self):
        """Gets the matter_type_1_code of this LegalAidUkMatterBase.

        Matter type 1 code

        :return: The matter_type_1_code of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._matter_type_1_code

    @matter_type_1_code.setter
    def matter_type_1_code(self, matter_type_1_code):
        """Sets the matter_type_1_code of this LegalAidUkMatterBase.

        Matter type 1 code

        :param matter_type_1_code: The matter_type_1_code of this LegalAidUkMatterBase.
        :type matter_type_1_code: str
        """

        self._matter_type_1_code = matter_type_1_code

    @property
    def matter_type_1_title(self):
        """Gets the matter_type_1_title of this LegalAidUkMatterBase.

        Matter type 1 title

        :return: The matter_type_1_title of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._matter_type_1_title

    @matter_type_1_title.setter
    def matter_type_1_title(self, matter_type_1_title):
        """Sets the matter_type_1_title of this LegalAidUkMatterBase.

        Matter type 1 title

        :param matter_type_1_title: The matter_type_1_title of this LegalAidUkMatterBase.
        :type matter_type_1_title: str
        """

        self._matter_type_1_title = matter_type_1_title

    @property
    def matter_type_2(self):
        """Gets the matter_type_2 of this LegalAidUkMatterBase.

        Matter type 2

        :return: The matter_type_2 of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._matter_type_2

    @matter_type_2.setter
    def matter_type_2(self, matter_type_2):
        """Sets the matter_type_2 of this LegalAidUkMatterBase.

        Matter type 2

        :param matter_type_2: The matter_type_2 of this LegalAidUkMatterBase.
        :type matter_type_2: int
        """

        self._matter_type_2 = matter_type_2

    @property
    def matter_type_2_code(self):
        """Gets the matter_type_2_code of this LegalAidUkMatterBase.

        Matter type 2 code

        :return: The matter_type_2_code of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._matter_type_2_code

    @matter_type_2_code.setter
    def matter_type_2_code(self, matter_type_2_code):
        """Sets the matter_type_2_code of this LegalAidUkMatterBase.

        Matter type 2 code

        :param matter_type_2_code: The matter_type_2_code of this LegalAidUkMatterBase.
        :type matter_type_2_code: str
        """

        self._matter_type_2_code = matter_type_2_code

    @property
    def matter_type_2_title(self):
        """Gets the matter_type_2_title of this LegalAidUkMatterBase.

        Matter type 2 title

        :return: The matter_type_2_title of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._matter_type_2_title

    @matter_type_2_title.setter
    def matter_type_2_title(self, matter_type_2_title):
        """Sets the matter_type_2_title of this LegalAidUkMatterBase.

        Matter type 2 title

        :param matter_type_2_title: The matter_type_2_title of this LegalAidUkMatterBase.
        :type matter_type_2_title: str
        """

        self._matter_type_2_title = matter_type_2_title

    @property
    def matter_types_combined(self):
        """Gets the matter_types_combined of this LegalAidUkMatterBase.

        Matter types combined

        :return: The matter_types_combined of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._matter_types_combined

    @matter_types_combined.setter
    def matter_types_combined(self, matter_types_combined):
        """Sets the matter_types_combined of this LegalAidUkMatterBase.

        Matter types combined

        :param matter_types_combined: The matter_types_combined of this LegalAidUkMatterBase.
        :type matter_types_combined: str
        """

        self._matter_types_combined = matter_types_combined

    @property
    def number_of_clients_seen_at_surgery(self):
        """Gets the number_of_clients_seen_at_surgery of this LegalAidUkMatterBase.

        Number of clients seen at surgery

        :return: The number_of_clients_seen_at_surgery of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._number_of_clients_seen_at_surgery

    @number_of_clients_seen_at_surgery.setter
    def number_of_clients_seen_at_surgery(self, number_of_clients_seen_at_surgery):
        """Sets the number_of_clients_seen_at_surgery of this LegalAidUkMatterBase.

        Number of clients seen at surgery

        :param number_of_clients_seen_at_surgery: The number_of_clients_seen_at_surgery of this LegalAidUkMatterBase.
        :type number_of_clients_seen_at_surgery: int
        """

        self._number_of_clients_seen_at_surgery = number_of_clients_seen_at_surgery

    @property
    def number_of_clients(self):
        """Gets the number_of_clients of this LegalAidUkMatterBase.

        Number of clients

        :return: The number_of_clients of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._number_of_clients

    @number_of_clients.setter
    def number_of_clients(self, number_of_clients):
        """Sets the number_of_clients of this LegalAidUkMatterBase.

        Number of clients

        :param number_of_clients: The number_of_clients of this LegalAidUkMatterBase.
        :type number_of_clients: int
        """

        self._number_of_clients = number_of_clients

    @property
    def party(self):
        """Gets the party of this LegalAidUkMatterBase.

        Party

        :return: The party of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._party

    @party.setter
    def party(self, party):
        """Sets the party of this LegalAidUkMatterBase.

        Party

        :param party: The party of this LegalAidUkMatterBase.
        :type party: int
        """

        self._party = party

    @property
    def police_station(self):
        """Gets the police_station of this LegalAidUkMatterBase.

        Police station

        :return: The police_station of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._police_station

    @police_station.setter
    def police_station(self, police_station):
        """Sets the police_station of this LegalAidUkMatterBase.

        Police station

        :param police_station: The police_station of this LegalAidUkMatterBase.
        :type police_station: str
        """

        self._police_station = police_station

    @property
    def post_transfer_clients_represented(self):
        """Gets the post_transfer_clients_represented of this LegalAidUkMatterBase.

        Post transfer clients represented

        :return: The post_transfer_clients_represented of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._post_transfer_clients_represented

    @post_transfer_clients_represented.setter
    def post_transfer_clients_represented(self, post_transfer_clients_represented):
        """Sets the post_transfer_clients_represented of this LegalAidUkMatterBase.

        Post transfer clients represented

        :param post_transfer_clients_represented: The post_transfer_clients_represented of this LegalAidUkMatterBase.
        :type post_transfer_clients_represented: int
        """

        self._post_transfer_clients_represented = post_transfer_clients_represented

    @property
    def postal_application_accepted(self):
        """Gets the postal_application_accepted of this LegalAidUkMatterBase.

        Postal application accepted

        :return: The postal_application_accepted of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._postal_application_accepted

    @postal_application_accepted.setter
    def postal_application_accepted(self, postal_application_accepted):
        """Sets the postal_application_accepted of this LegalAidUkMatterBase.

        Postal application accepted

        :param postal_application_accepted: The postal_application_accepted of this LegalAidUkMatterBase.
        :type postal_application_accepted: str
        """

        self._postal_application_accepted = postal_application_accepted

    @property
    def prior_authority_reference(self):
        """Gets the prior_authority_reference of this LegalAidUkMatterBase.

        Priory authority reference

        :return: The prior_authority_reference of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._prior_authority_reference

    @prior_authority_reference.setter
    def prior_authority_reference(self, prior_authority_reference):
        """Sets the prior_authority_reference of this LegalAidUkMatterBase.

        Priory authority reference

        :param prior_authority_reference: The prior_authority_reference of this LegalAidUkMatterBase.
        :type prior_authority_reference: str
        """

        self._prior_authority_reference = prior_authority_reference

    @property
    def prison_id(self):
        """Gets the prison_id of this LegalAidUkMatterBase.

        Prison ID

        :return: The prison_id of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._prison_id

    @prison_id.setter
    def prison_id(self, prison_id):
        """Sets the prison_id of this LegalAidUkMatterBase.

        Prison ID

        :param prison_id: The prison_id of this LegalAidUkMatterBase.
        :type prison_id: int
        """

        self._prison_id = prison_id

    @property
    def prison_law_prior_approval_number(self):
        """Gets the prison_law_prior_approval_number of this LegalAidUkMatterBase.

        Prison law prior approval number

        :return: The prison_law_prior_approval_number of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._prison_law_prior_approval_number

    @prison_law_prior_approval_number.setter
    def prison_law_prior_approval_number(self, prison_law_prior_approval_number):
        """Sets the prison_law_prior_approval_number of this LegalAidUkMatterBase.

        Prison law prior approval number

        :param prison_law_prior_approval_number: The prison_law_prior_approval_number of this LegalAidUkMatterBase.
        :type prison_law_prior_approval_number: str
        """

        self._prison_law_prior_approval_number = prison_law_prior_approval_number

    @property
    def procurement_area(self):
        """Gets the procurement_area of this LegalAidUkMatterBase.

        Procurement area

        :return: The procurement_area of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._procurement_area

    @procurement_area.setter
    def procurement_area(self, procurement_area):
        """Sets the procurement_area of this LegalAidUkMatterBase.

        Procurement area

        :param procurement_area: The procurement_area of this LegalAidUkMatterBase.
        :type procurement_area: str
        """

        self._procurement_area = procurement_area

    @property
    def region(self):
        """Gets the region of this LegalAidUkMatterBase.

        Region

        :return: The region of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this LegalAidUkMatterBase.

        Region

        :param region: The region of this LegalAidUkMatterBase.
        :type region: int
        """

        self._region = region

    @property
    def related_claims_number(self):
        """Gets the related_claims_number of this LegalAidUkMatterBase.

        Related claims number

        :return: The related_claims_number of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._related_claims_number

    @related_claims_number.setter
    def related_claims_number(self, related_claims_number):
        """Sets the related_claims_number of this LegalAidUkMatterBase.

        Related claims number

        :param related_claims_number: The related_claims_number of this LegalAidUkMatterBase.
        :type related_claims_number: str
        """

        self._related_claims_number = related_claims_number

    @property
    def representation_order_date(self):
        """Gets the representation_order_date of this LegalAidUkMatterBase.

        Representation order date

        :return: The representation_order_date of this LegalAidUkMatterBase.
        :rtype: date
        """
        return self._representation_order_date

    @representation_order_date.setter
    def representation_order_date(self, representation_order_date):
        """Sets the representation_order_date of this LegalAidUkMatterBase.

        Representation order date

        :param representation_order_date: The representation_order_date of this LegalAidUkMatterBase.
        :type representation_order_date: date
        """

        self._representation_order_date = representation_order_date

    @property
    def schedule_reference_number(self):
        """Gets the schedule_reference_number of this LegalAidUkMatterBase.

        Schedule reference number

        :return: The schedule_reference_number of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._schedule_reference_number

    @schedule_reference_number.setter
    def schedule_reference_number(self, schedule_reference_number):
        """Sets the schedule_reference_number of this LegalAidUkMatterBase.

        Schedule reference number

        :param schedule_reference_number: The schedule_reference_number of this LegalAidUkMatterBase.
        :type schedule_reference_number: str
        """

        self._schedule_reference_number = schedule_reference_number

    @property
    def scheme_id(self):
        """Gets the scheme_id of this LegalAidUkMatterBase.

        Scheme ID

        :return: The scheme_id of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._scheme_id

    @scheme_id.setter
    def scheme_id(self, scheme_id):
        """Sets the scheme_id of this LegalAidUkMatterBase.

        Scheme ID

        :param scheme_id: The scheme_id of this LegalAidUkMatterBase.
        :type scheme_id: str
        """

        self._scheme_id = scheme_id

    @property
    def session_type(self):
        """Gets the session_type of this LegalAidUkMatterBase.

        Session type

        :return: The session_type of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._session_type

    @session_type.setter
    def session_type(self, session_type):
        """Sets the session_type of this LegalAidUkMatterBase.

        Session type

        :param session_type: The session_type of this LegalAidUkMatterBase.
        :type session_type: int
        """

        self._session_type = session_type

    @property
    def solicitor_type(self):
        """Gets the solicitor_type of this LegalAidUkMatterBase.

        Solicitor type

        :return: The solicitor_type of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._solicitor_type

    @solicitor_type.setter
    def solicitor_type(self, solicitor_type):
        """Sets the solicitor_type of this LegalAidUkMatterBase.

        Solicitor type

        :param solicitor_type: The solicitor_type of this LegalAidUkMatterBase.
        :type solicitor_type: int
        """

        self._solicitor_type = solicitor_type

    @property
    def standard_fee_category(self):
        """Gets the standard_fee_category of this LegalAidUkMatterBase.

        Standard fee category

        :return: The standard_fee_category of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._standard_fee_category

    @standard_fee_category.setter
    def standard_fee_category(self, standard_fee_category):
        """Sets the standard_fee_category of this LegalAidUkMatterBase.

        Standard fee category

        :param standard_fee_category: The standard_fee_category of this LegalAidUkMatterBase.
        :type standard_fee_category: int
        """

        self._standard_fee_category = standard_fee_category

    @property
    def surgery_clients_resulting_in_a_legal_help_matter_opened(self):
        """Gets the surgery_clients_resulting_in_a_legal_help_matter_opened of this LegalAidUkMatterBase.

        Surgery clients resulting in a legal help matter opened

        :return: The surgery_clients_resulting_in_a_legal_help_matter_opened of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._surgery_clients_resulting_in_a_legal_help_matter_opened

    @surgery_clients_resulting_in_a_legal_help_matter_opened.setter
    def surgery_clients_resulting_in_a_legal_help_matter_opened(self, surgery_clients_resulting_in_a_legal_help_matter_opened):
        """Sets the surgery_clients_resulting_in_a_legal_help_matter_opened of this LegalAidUkMatterBase.

        Surgery clients resulting in a legal help matter opened

        :param surgery_clients_resulting_in_a_legal_help_matter_opened: The surgery_clients_resulting_in_a_legal_help_matter_opened of this LegalAidUkMatterBase.
        :type surgery_clients_resulting_in_a_legal_help_matter_opened: int
        """

        self._surgery_clients_resulting_in_a_legal_help_matter_opened = surgery_clients_resulting_in_a_legal_help_matter_opened

    @property
    def surgery_clients(self):
        """Gets the surgery_clients of this LegalAidUkMatterBase.

        Surgery clients

        :return: The surgery_clients of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._surgery_clients

    @surgery_clients.setter
    def surgery_clients(self, surgery_clients):
        """Sets the surgery_clients of this LegalAidUkMatterBase.

        Surgery clients

        :param surgery_clients: The surgery_clients of this LegalAidUkMatterBase.
        :type surgery_clients: int
        """

        self._surgery_clients = surgery_clients

    @property
    def surgery_date(self):
        """Gets the surgery_date of this LegalAidUkMatterBase.

        Surgery date

        :return: The surgery_date of this LegalAidUkMatterBase.
        :rtype: date
        """
        return self._surgery_date

    @surgery_date.setter
    def surgery_date(self, surgery_date):
        """Sets the surgery_date of this LegalAidUkMatterBase.

        Surgery date

        :param surgery_date: The surgery_date of this LegalAidUkMatterBase.
        :type surgery_date: date
        """

        self._surgery_date = surgery_date

    @property
    def transfer_date(self):
        """Gets the transfer_date of this LegalAidUkMatterBase.

        Transfer date

        :return: The transfer_date of this LegalAidUkMatterBase.
        :rtype: date
        """
        return self._transfer_date

    @transfer_date.setter
    def transfer_date(self, transfer_date):
        """Sets the transfer_date of this LegalAidUkMatterBase.

        Transfer date

        :param transfer_date: The transfer_date of this LegalAidUkMatterBase.
        :type transfer_date: date
        """

        self._transfer_date = transfer_date

    @property
    def type_of_advice(self):
        """Gets the type_of_advice of this LegalAidUkMatterBase.

        Type of advice

        :return: The type_of_advice of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._type_of_advice

    @type_of_advice.setter
    def type_of_advice(self, type_of_advice):
        """Sets the type_of_advice of this LegalAidUkMatterBase.

        Type of advice

        :param type_of_advice: The type_of_advice of this LegalAidUkMatterBase.
        :type type_of_advice: int
        """

        self._type_of_advice = type_of_advice

    @property
    def type_of_service(self):
        """Gets the type_of_service of this LegalAidUkMatterBase.

        Type of service

        :return: The type_of_service of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._type_of_service

    @type_of_service.setter
    def type_of_service(self, type_of_service):
        """Sets the type_of_service of this LegalAidUkMatterBase.

        Type of service

        :param type_of_service: The type_of_service of this LegalAidUkMatterBase.
        :type type_of_service: str
        """

        self._type_of_service = type_of_service

    @property
    def ucn(self):
        """Gets the ucn of this LegalAidUkMatterBase.

        UCN

        :return: The ucn of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._ucn

    @ucn.setter
    def ucn(self, ucn):
        """Sets the ucn of this LegalAidUkMatterBase.

        UCN

        :param ucn: The ucn of this LegalAidUkMatterBase.
        :type ucn: str
        """

        self._ucn = ucn

    @property
    def ufn(self):
        """Gets the ufn of this LegalAidUkMatterBase.

        UFN

        :return: The ufn of this LegalAidUkMatterBase.
        :rtype: str
        """
        return self._ufn

    @ufn.setter
    def ufn(self, ufn):
        """Sets the ufn of this LegalAidUkMatterBase.

        UFN

        :param ufn: The ufn of this LegalAidUkMatterBase.
        :type ufn: str
        """

        self._ufn = ufn

    @property
    def undesignated_area_court(self):
        """Gets the undesignated_area_court of this LegalAidUkMatterBase.

        Undesignated area court

        :return: The undesignated_area_court of this LegalAidUkMatterBase.
        :rtype: bool
        """
        return self._undesignated_area_court

    @undesignated_area_court.setter
    def undesignated_area_court(self, undesignated_area_court):
        """Sets the undesignated_area_court of this LegalAidUkMatterBase.

        Undesignated area court

        :param undesignated_area_court: The undesignated_area_court of this LegalAidUkMatterBase.
        :type undesignated_area_court: bool
        """

        self._undesignated_area_court = undesignated_area_court

    @property
    def updated_at(self):
        """Gets the updated_at of this LegalAidUkMatterBase.

        The time the *LegalAidUkMatter* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this LegalAidUkMatterBase.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this LegalAidUkMatterBase.

        The time the *LegalAidUkMatter* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this LegalAidUkMatterBase.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def user_type(self):
        """Gets the user_type of this LegalAidUkMatterBase.

        User type

        :return: The user_type of this LegalAidUkMatterBase.
        :rtype: int
        """
        return self._user_type

    @user_type.setter
    def user_type(self, user_type):
        """Sets the user_type of this LegalAidUkMatterBase.

        User type

        :param user_type: The user_type of this LegalAidUkMatterBase.
        :type user_type: int
        """

        self._user_type = user_type

    @property
    def youth_court(self):
        """Gets the youth_court of this LegalAidUkMatterBase.

        Youth court

        :return: The youth_court of this LegalAidUkMatterBase.
        :rtype: bool
        """
        return self._youth_court

    @youth_court.setter
    def youth_court(self, youth_court):
        """Sets the youth_court of this LegalAidUkMatterBase.

        Youth court

        :param youth_court: The youth_court of this LegalAidUkMatterBase.
        :type youth_court: bool
        """

        self._youth_court = youth_court
