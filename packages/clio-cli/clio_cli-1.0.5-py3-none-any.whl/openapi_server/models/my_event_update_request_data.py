# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MyEventUpdateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, marked_as_read: bool=None):
        """MyEventUpdateRequestData - a model defined in OpenAPI

        :param marked_as_read: The marked_as_read of this MyEventUpdateRequestData.
        """
        self.openapi_types = {
            'marked_as_read': bool
        }

        self.attribute_map = {
            'marked_as_read': 'marked_as_read'
        }

        self._marked_as_read = marked_as_read

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MyEventUpdateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MyEvent_update_request_data of this MyEventUpdateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def marked_as_read(self):
        """Gets the marked_as_read of this MyEventUpdateRequestData.

        Indicates whether the event notification should be marked as read by the current user. If `false` the event status is reset to unread.

        :return: The marked_as_read of this MyEventUpdateRequestData.
        :rtype: bool
        """
        return self._marked_as_read

    @marked_as_read.setter
    def marked_as_read(self, marked_as_read):
        """Sets the marked_as_read of this MyEventUpdateRequestData.

        Indicates whether the event notification should be marked as read by the current user. If `false` the event status is reset to unread.

        :param marked_as_read: The marked_as_read of this MyEventUpdateRequestData.
        :type marked_as_read: bool
        """

        self._marked_as_read = marked_as_read
