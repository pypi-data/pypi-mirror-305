# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LegalAidUkBillBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_travel_payment: bool=None, adjourned_hearing_fee: str=None, advocacy_costs: float=None, advice_time: int=None, bill_type: int=None, case_concluded: date=None, case_stage_level: int=None, cla_exemption_code: str=None, cla_reference: str=None, cmrh_oral: int=None, cmrh_telephone: int=None, cost_of_counsel: str=None, costs_are_those_of: int=None, court_location: str=None, date_of_claim: date=None, designated_accredited_representative: int=None, detention_travel_and_waiting_costs: str=None, disbursements_vat: float=None, exceptional_case_funding_reference: str=None, exemption_criteria_satisfied: int=None, follow_on_work: int=None, ho_interview: int=None, ho_ucn: int=None, id: int=None, independent_medical_reports_claimed: str=None, jr_form_filling: str=None, maat_id: str=None, meetings_attended: int=None, mht_ref_no: str=None, net_disbursements: float=None, net_profit_costs: float=None, niat_disbursement_prior_authority_number: str=None, number_of_attendances: int=None, outcome_for_the_client: int=None, profit_costs_ex_vat: int=None, prior_authority_reference: str=None, representation_order_date: date=None, stage_reached: int=None, substantive_hearing: int=None, travel_and_waiting_costs: float=None, travel_time: int=None, value_of_costs: str=None, waiting_time: int=None):
        """LegalAidUkBillBase - a model defined in OpenAPI

        :param additional_travel_payment: The additional_travel_payment of this LegalAidUkBillBase.
        :param adjourned_hearing_fee: The adjourned_hearing_fee of this LegalAidUkBillBase.
        :param advocacy_costs: The advocacy_costs of this LegalAidUkBillBase.
        :param advice_time: The advice_time of this LegalAidUkBillBase.
        :param bill_type: The bill_type of this LegalAidUkBillBase.
        :param case_concluded: The case_concluded of this LegalAidUkBillBase.
        :param case_stage_level: The case_stage_level of this LegalAidUkBillBase.
        :param cla_exemption_code: The cla_exemption_code of this LegalAidUkBillBase.
        :param cla_reference: The cla_reference of this LegalAidUkBillBase.
        :param cmrh_oral: The cmrh_oral of this LegalAidUkBillBase.
        :param cmrh_telephone: The cmrh_telephone of this LegalAidUkBillBase.
        :param cost_of_counsel: The cost_of_counsel of this LegalAidUkBillBase.
        :param costs_are_those_of: The costs_are_those_of of this LegalAidUkBillBase.
        :param court_location: The court_location of this LegalAidUkBillBase.
        :param date_of_claim: The date_of_claim of this LegalAidUkBillBase.
        :param designated_accredited_representative: The designated_accredited_representative of this LegalAidUkBillBase.
        :param detention_travel_and_waiting_costs: The detention_travel_and_waiting_costs of this LegalAidUkBillBase.
        :param disbursements_vat: The disbursements_vat of this LegalAidUkBillBase.
        :param exceptional_case_funding_reference: The exceptional_case_funding_reference of this LegalAidUkBillBase.
        :param exemption_criteria_satisfied: The exemption_criteria_satisfied of this LegalAidUkBillBase.
        :param follow_on_work: The follow_on_work of this LegalAidUkBillBase.
        :param ho_interview: The ho_interview of this LegalAidUkBillBase.
        :param ho_ucn: The ho_ucn of this LegalAidUkBillBase.
        :param id: The id of this LegalAidUkBillBase.
        :param independent_medical_reports_claimed: The independent_medical_reports_claimed of this LegalAidUkBillBase.
        :param jr_form_filling: The jr_form_filling of this LegalAidUkBillBase.
        :param maat_id: The maat_id of this LegalAidUkBillBase.
        :param meetings_attended: The meetings_attended of this LegalAidUkBillBase.
        :param mht_ref_no: The mht_ref_no of this LegalAidUkBillBase.
        :param net_disbursements: The net_disbursements of this LegalAidUkBillBase.
        :param net_profit_costs: The net_profit_costs of this LegalAidUkBillBase.
        :param niat_disbursement_prior_authority_number: The niat_disbursement_prior_authority_number of this LegalAidUkBillBase.
        :param number_of_attendances: The number_of_attendances of this LegalAidUkBillBase.
        :param outcome_for_the_client: The outcome_for_the_client of this LegalAidUkBillBase.
        :param profit_costs_ex_vat: The profit_costs_ex_vat of this LegalAidUkBillBase.
        :param prior_authority_reference: The prior_authority_reference of this LegalAidUkBillBase.
        :param representation_order_date: The representation_order_date of this LegalAidUkBillBase.
        :param stage_reached: The stage_reached of this LegalAidUkBillBase.
        :param substantive_hearing: The substantive_hearing of this LegalAidUkBillBase.
        :param travel_and_waiting_costs: The travel_and_waiting_costs of this LegalAidUkBillBase.
        :param travel_time: The travel_time of this LegalAidUkBillBase.
        :param value_of_costs: The value_of_costs of this LegalAidUkBillBase.
        :param waiting_time: The waiting_time of this LegalAidUkBillBase.
        """
        self.openapi_types = {
            'additional_travel_payment': bool,
            'adjourned_hearing_fee': str,
            'advocacy_costs': float,
            'advice_time': int,
            'bill_type': int,
            'case_concluded': date,
            'case_stage_level': int,
            'cla_exemption_code': str,
            'cla_reference': str,
            'cmrh_oral': int,
            'cmrh_telephone': int,
            'cost_of_counsel': str,
            'costs_are_those_of': int,
            'court_location': str,
            'date_of_claim': date,
            'designated_accredited_representative': int,
            'detention_travel_and_waiting_costs': str,
            'disbursements_vat': float,
            'exceptional_case_funding_reference': str,
            'exemption_criteria_satisfied': int,
            'follow_on_work': int,
            'ho_interview': int,
            'ho_ucn': int,
            'id': int,
            'independent_medical_reports_claimed': str,
            'jr_form_filling': str,
            'maat_id': str,
            'meetings_attended': int,
            'mht_ref_no': str,
            'net_disbursements': float,
            'net_profit_costs': float,
            'niat_disbursement_prior_authority_number': str,
            'number_of_attendances': int,
            'outcome_for_the_client': int,
            'profit_costs_ex_vat': int,
            'prior_authority_reference': str,
            'representation_order_date': date,
            'stage_reached': int,
            'substantive_hearing': int,
            'travel_and_waiting_costs': float,
            'travel_time': int,
            'value_of_costs': str,
            'waiting_time': int
        }

        self.attribute_map = {
            'additional_travel_payment': 'additional_travel_payment',
            'adjourned_hearing_fee': 'adjourned_hearing_fee',
            'advocacy_costs': 'advocacy_costs',
            'advice_time': 'advice_time',
            'bill_type': 'bill_type',
            'case_concluded': 'case_concluded',
            'case_stage_level': 'case_stage_level',
            'cla_exemption_code': 'cla_exemption_code',
            'cla_reference': 'cla_reference',
            'cmrh_oral': 'cmrh_oral',
            'cmrh_telephone': 'cmrh_telephone',
            'cost_of_counsel': 'cost_of_counsel',
            'costs_are_those_of': 'costs_are_those_of',
            'court_location': 'court_location',
            'date_of_claim': 'date_of_claim',
            'designated_accredited_representative': 'designated_accredited_representative',
            'detention_travel_and_waiting_costs': 'detention_travel_and_waiting_costs',
            'disbursements_vat': 'disbursements_vat',
            'exceptional_case_funding_reference': 'exceptional_case_funding_reference',
            'exemption_criteria_satisfied': 'exemption_criteria_satisfied',
            'follow_on_work': 'follow_on_work',
            'ho_interview': 'ho_interview',
            'ho_ucn': 'ho_ucn',
            'id': 'id',
            'independent_medical_reports_claimed': 'independent_medical_reports_claimed',
            'jr_form_filling': 'jr_form_filling',
            'maat_id': 'maat_id',
            'meetings_attended': 'meetings_attended',
            'mht_ref_no': 'mht_ref_no',
            'net_disbursements': 'net_disbursements',
            'net_profit_costs': 'net_profit_costs',
            'niat_disbursement_prior_authority_number': 'niat_disbursement_prior_authority_number',
            'number_of_attendances': 'number_of_attendances',
            'outcome_for_the_client': 'outcome_for_the_client',
            'profit_costs_ex_vat': 'profit_costs_ex_vat',
            'prior_authority_reference': 'prior_authority_reference',
            'representation_order_date': 'representation_order_date',
            'stage_reached': 'stage_reached',
            'substantive_hearing': 'substantive_hearing',
            'travel_and_waiting_costs': 'travel_and_waiting_costs',
            'travel_time': 'travel_time',
            'value_of_costs': 'value_of_costs',
            'waiting_time': 'waiting_time'
        }

        self._additional_travel_payment = additional_travel_payment
        self._adjourned_hearing_fee = adjourned_hearing_fee
        self._advocacy_costs = advocacy_costs
        self._advice_time = advice_time
        self._bill_type = bill_type
        self._case_concluded = case_concluded
        self._case_stage_level = case_stage_level
        self._cla_exemption_code = cla_exemption_code
        self._cla_reference = cla_reference
        self._cmrh_oral = cmrh_oral
        self._cmrh_telephone = cmrh_telephone
        self._cost_of_counsel = cost_of_counsel
        self._costs_are_those_of = costs_are_those_of
        self._court_location = court_location
        self._date_of_claim = date_of_claim
        self._designated_accredited_representative = designated_accredited_representative
        self._detention_travel_and_waiting_costs = detention_travel_and_waiting_costs
        self._disbursements_vat = disbursements_vat
        self._exceptional_case_funding_reference = exceptional_case_funding_reference
        self._exemption_criteria_satisfied = exemption_criteria_satisfied
        self._follow_on_work = follow_on_work
        self._ho_interview = ho_interview
        self._ho_ucn = ho_ucn
        self._id = id
        self._independent_medical_reports_claimed = independent_medical_reports_claimed
        self._jr_form_filling = jr_form_filling
        self._maat_id = maat_id
        self._meetings_attended = meetings_attended
        self._mht_ref_no = mht_ref_no
        self._net_disbursements = net_disbursements
        self._net_profit_costs = net_profit_costs
        self._niat_disbursement_prior_authority_number = niat_disbursement_prior_authority_number
        self._number_of_attendances = number_of_attendances
        self._outcome_for_the_client = outcome_for_the_client
        self._profit_costs_ex_vat = profit_costs_ex_vat
        self._prior_authority_reference = prior_authority_reference
        self._representation_order_date = representation_order_date
        self._stage_reached = stage_reached
        self._substantive_hearing = substantive_hearing
        self._travel_and_waiting_costs = travel_and_waiting_costs
        self._travel_time = travel_time
        self._value_of_costs = value_of_costs
        self._waiting_time = waiting_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegalAidUkBillBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LegalAidUkBill_base of this LegalAidUkBillBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_travel_payment(self):
        """Gets the additional_travel_payment of this LegalAidUkBillBase.

        Additional travel payment, for Legal Aid England and Wales

        :return: The additional_travel_payment of this LegalAidUkBillBase.
        :rtype: bool
        """
        return self._additional_travel_payment

    @additional_travel_payment.setter
    def additional_travel_payment(self, additional_travel_payment):
        """Sets the additional_travel_payment of this LegalAidUkBillBase.

        Additional travel payment, for Legal Aid England and Wales

        :param additional_travel_payment: The additional_travel_payment of this LegalAidUkBillBase.
        :type additional_travel_payment: bool
        """

        self._additional_travel_payment = additional_travel_payment

    @property
    def adjourned_hearing_fee(self):
        """Gets the adjourned_hearing_fee of this LegalAidUkBillBase.

        Adjourned hearing fee

        :return: The adjourned_hearing_fee of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._adjourned_hearing_fee

    @adjourned_hearing_fee.setter
    def adjourned_hearing_fee(self, adjourned_hearing_fee):
        """Sets the adjourned_hearing_fee of this LegalAidUkBillBase.

        Adjourned hearing fee

        :param adjourned_hearing_fee: The adjourned_hearing_fee of this LegalAidUkBillBase.
        :type adjourned_hearing_fee: str
        """

        self._adjourned_hearing_fee = adjourned_hearing_fee

    @property
    def advocacy_costs(self):
        """Gets the advocacy_costs of this LegalAidUkBillBase.

        Advocacy costs

        :return: The advocacy_costs of this LegalAidUkBillBase.
        :rtype: float
        """
        return self._advocacy_costs

    @advocacy_costs.setter
    def advocacy_costs(self, advocacy_costs):
        """Sets the advocacy_costs of this LegalAidUkBillBase.

        Advocacy costs

        :param advocacy_costs: The advocacy_costs of this LegalAidUkBillBase.
        :type advocacy_costs: float
        """

        self._advocacy_costs = advocacy_costs

    @property
    def advice_time(self):
        """Gets the advice_time of this LegalAidUkBillBase.

        Advice time

        :return: The advice_time of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._advice_time

    @advice_time.setter
    def advice_time(self, advice_time):
        """Sets the advice_time of this LegalAidUkBillBase.

        Advice time

        :param advice_time: The advice_time of this LegalAidUkBillBase.
        :type advice_time: int
        """

        self._advice_time = advice_time

    @property
    def bill_type(self):
        """Gets the bill_type of this LegalAidUkBillBase.

        Bill type

        :return: The bill_type of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._bill_type

    @bill_type.setter
    def bill_type(self, bill_type):
        """Sets the bill_type of this LegalAidUkBillBase.

        Bill type

        :param bill_type: The bill_type of this LegalAidUkBillBase.
        :type bill_type: int
        """

        self._bill_type = bill_type

    @property
    def case_concluded(self):
        """Gets the case_concluded of this LegalAidUkBillBase.

        Case concluded

        :return: The case_concluded of this LegalAidUkBillBase.
        :rtype: date
        """
        return self._case_concluded

    @case_concluded.setter
    def case_concluded(self, case_concluded):
        """Sets the case_concluded of this LegalAidUkBillBase.

        Case concluded

        :param case_concluded: The case_concluded of this LegalAidUkBillBase.
        :type case_concluded: date
        """

        self._case_concluded = case_concluded

    @property
    def case_stage_level(self):
        """Gets the case_stage_level of this LegalAidUkBillBase.

        Case stage level

        :return: The case_stage_level of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._case_stage_level

    @case_stage_level.setter
    def case_stage_level(self, case_stage_level):
        """Sets the case_stage_level of this LegalAidUkBillBase.

        Case stage level

        :param case_stage_level: The case_stage_level of this LegalAidUkBillBase.
        :type case_stage_level: int
        """

        self._case_stage_level = case_stage_level

    @property
    def cla_exemption_code(self):
        """Gets the cla_exemption_code of this LegalAidUkBillBase.

        CLA exemption code

        :return: The cla_exemption_code of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._cla_exemption_code

    @cla_exemption_code.setter
    def cla_exemption_code(self, cla_exemption_code):
        """Sets the cla_exemption_code of this LegalAidUkBillBase.

        CLA exemption code

        :param cla_exemption_code: The cla_exemption_code of this LegalAidUkBillBase.
        :type cla_exemption_code: str
        """

        self._cla_exemption_code = cla_exemption_code

    @property
    def cla_reference(self):
        """Gets the cla_reference of this LegalAidUkBillBase.

        CLA reference

        :return: The cla_reference of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._cla_reference

    @cla_reference.setter
    def cla_reference(self, cla_reference):
        """Sets the cla_reference of this LegalAidUkBillBase.

        CLA reference

        :param cla_reference: The cla_reference of this LegalAidUkBillBase.
        :type cla_reference: str
        """

        self._cla_reference = cla_reference

    @property
    def cmrh_oral(self):
        """Gets the cmrh_oral of this LegalAidUkBillBase.

        CMRH oral

        :return: The cmrh_oral of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._cmrh_oral

    @cmrh_oral.setter
    def cmrh_oral(self, cmrh_oral):
        """Sets the cmrh_oral of this LegalAidUkBillBase.

        CMRH oral

        :param cmrh_oral: The cmrh_oral of this LegalAidUkBillBase.
        :type cmrh_oral: int
        """

        self._cmrh_oral = cmrh_oral

    @property
    def cmrh_telephone(self):
        """Gets the cmrh_telephone of this LegalAidUkBillBase.

        CMRH telephone

        :return: The cmrh_telephone of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._cmrh_telephone

    @cmrh_telephone.setter
    def cmrh_telephone(self, cmrh_telephone):
        """Sets the cmrh_telephone of this LegalAidUkBillBase.

        CMRH telephone

        :param cmrh_telephone: The cmrh_telephone of this LegalAidUkBillBase.
        :type cmrh_telephone: int
        """

        self._cmrh_telephone = cmrh_telephone

    @property
    def cost_of_counsel(self):
        """Gets the cost_of_counsel of this LegalAidUkBillBase.

        Cost of counsel

        :return: The cost_of_counsel of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._cost_of_counsel

    @cost_of_counsel.setter
    def cost_of_counsel(self, cost_of_counsel):
        """Sets the cost_of_counsel of this LegalAidUkBillBase.

        Cost of counsel

        :param cost_of_counsel: The cost_of_counsel of this LegalAidUkBillBase.
        :type cost_of_counsel: str
        """

        self._cost_of_counsel = cost_of_counsel

    @property
    def costs_are_those_of(self):
        """Gets the costs_are_those_of of this LegalAidUkBillBase.

        Costs are those of

        :return: The costs_are_those_of of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._costs_are_those_of

    @costs_are_those_of.setter
    def costs_are_those_of(self, costs_are_those_of):
        """Sets the costs_are_those_of of this LegalAidUkBillBase.

        Costs are those of

        :param costs_are_those_of: The costs_are_those_of of this LegalAidUkBillBase.
        :type costs_are_those_of: int
        """

        self._costs_are_those_of = costs_are_those_of

    @property
    def court_location(self):
        """Gets the court_location of this LegalAidUkBillBase.

        Court location (HPCDS matters)

        :return: The court_location of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._court_location

    @court_location.setter
    def court_location(self, court_location):
        """Sets the court_location of this LegalAidUkBillBase.

        Court location (HPCDS matters)

        :param court_location: The court_location of this LegalAidUkBillBase.
        :type court_location: str
        """

        self._court_location = court_location

    @property
    def date_of_claim(self):
        """Gets the date_of_claim of this LegalAidUkBillBase.

        Date of claim

        :return: The date_of_claim of this LegalAidUkBillBase.
        :rtype: date
        """
        return self._date_of_claim

    @date_of_claim.setter
    def date_of_claim(self, date_of_claim):
        """Sets the date_of_claim of this LegalAidUkBillBase.

        Date of claim

        :param date_of_claim: The date_of_claim of this LegalAidUkBillBase.
        :type date_of_claim: date
        """

        self._date_of_claim = date_of_claim

    @property
    def designated_accredited_representative(self):
        """Gets the designated_accredited_representative of this LegalAidUkBillBase.

        Designated accredited representative

        :return: The designated_accredited_representative of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._designated_accredited_representative

    @designated_accredited_representative.setter
    def designated_accredited_representative(self, designated_accredited_representative):
        """Sets the designated_accredited_representative of this LegalAidUkBillBase.

        Designated accredited representative

        :param designated_accredited_representative: The designated_accredited_representative of this LegalAidUkBillBase.
        :type designated_accredited_representative: int
        """

        self._designated_accredited_representative = designated_accredited_representative

    @property
    def detention_travel_and_waiting_costs(self):
        """Gets the detention_travel_and_waiting_costs of this LegalAidUkBillBase.

        Detention travel & waiting costs ex VAT

        :return: The detention_travel_and_waiting_costs of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._detention_travel_and_waiting_costs

    @detention_travel_and_waiting_costs.setter
    def detention_travel_and_waiting_costs(self, detention_travel_and_waiting_costs):
        """Sets the detention_travel_and_waiting_costs of this LegalAidUkBillBase.

        Detention travel & waiting costs ex VAT

        :param detention_travel_and_waiting_costs: The detention_travel_and_waiting_costs of this LegalAidUkBillBase.
        :type detention_travel_and_waiting_costs: str
        """

        self._detention_travel_and_waiting_costs = detention_travel_and_waiting_costs

    @property
    def disbursements_vat(self):
        """Gets the disbursements_vat of this LegalAidUkBillBase.

        Disbursements VAT

        :return: The disbursements_vat of this LegalAidUkBillBase.
        :rtype: float
        """
        return self._disbursements_vat

    @disbursements_vat.setter
    def disbursements_vat(self, disbursements_vat):
        """Sets the disbursements_vat of this LegalAidUkBillBase.

        Disbursements VAT

        :param disbursements_vat: The disbursements_vat of this LegalAidUkBillBase.
        :type disbursements_vat: float
        """

        self._disbursements_vat = disbursements_vat

    @property
    def exceptional_case_funding_reference(self):
        """Gets the exceptional_case_funding_reference of this LegalAidUkBillBase.

        Exceptional case funding reference

        :return: The exceptional_case_funding_reference of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._exceptional_case_funding_reference

    @exceptional_case_funding_reference.setter
    def exceptional_case_funding_reference(self, exceptional_case_funding_reference):
        """Sets the exceptional_case_funding_reference of this LegalAidUkBillBase.

        Exceptional case funding reference

        :param exceptional_case_funding_reference: The exceptional_case_funding_reference of this LegalAidUkBillBase.
        :type exceptional_case_funding_reference: str
        """

        self._exceptional_case_funding_reference = exceptional_case_funding_reference

    @property
    def exemption_criteria_satisfied(self):
        """Gets the exemption_criteria_satisfied of this LegalAidUkBillBase.

        Exemption criteria satisfied

        :return: The exemption_criteria_satisfied of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._exemption_criteria_satisfied

    @exemption_criteria_satisfied.setter
    def exemption_criteria_satisfied(self, exemption_criteria_satisfied):
        """Sets the exemption_criteria_satisfied of this LegalAidUkBillBase.

        Exemption criteria satisfied

        :param exemption_criteria_satisfied: The exemption_criteria_satisfied of this LegalAidUkBillBase.
        :type exemption_criteria_satisfied: int
        """

        self._exemption_criteria_satisfied = exemption_criteria_satisfied

    @property
    def follow_on_work(self):
        """Gets the follow_on_work of this LegalAidUkBillBase.

        Follow on work

        :return: The follow_on_work of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._follow_on_work

    @follow_on_work.setter
    def follow_on_work(self, follow_on_work):
        """Sets the follow_on_work of this LegalAidUkBillBase.

        Follow on work

        :param follow_on_work: The follow_on_work of this LegalAidUkBillBase.
        :type follow_on_work: int
        """

        self._follow_on_work = follow_on_work

    @property
    def ho_interview(self):
        """Gets the ho_interview of this LegalAidUkBillBase.

        HO interview

        :return: The ho_interview of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._ho_interview

    @ho_interview.setter
    def ho_interview(self, ho_interview):
        """Sets the ho_interview of this LegalAidUkBillBase.

        HO interview

        :param ho_interview: The ho_interview of this LegalAidUkBillBase.
        :type ho_interview: int
        """

        self._ho_interview = ho_interview

    @property
    def ho_ucn(self):
        """Gets the ho_ucn of this LegalAidUkBillBase.

        HO UCN

        :return: The ho_ucn of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._ho_ucn

    @ho_ucn.setter
    def ho_ucn(self, ho_ucn):
        """Sets the ho_ucn of this LegalAidUkBillBase.

        HO UCN

        :param ho_ucn: The ho_ucn of this LegalAidUkBillBase.
        :type ho_ucn: int
        """

        self._ho_ucn = ho_ucn

    @property
    def id(self):
        """Gets the id of this LegalAidUkBillBase.

        Unique identifier for the *LegalAidUkBill*

        :return: The id of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LegalAidUkBillBase.

        Unique identifier for the *LegalAidUkBill*

        :param id: The id of this LegalAidUkBillBase.
        :type id: int
        """

        self._id = id

    @property
    def independent_medical_reports_claimed(self):
        """Gets the independent_medical_reports_claimed of this LegalAidUkBillBase.

        Independent medical reports claimed

        :return: The independent_medical_reports_claimed of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._independent_medical_reports_claimed

    @independent_medical_reports_claimed.setter
    def independent_medical_reports_claimed(self, independent_medical_reports_claimed):
        """Sets the independent_medical_reports_claimed of this LegalAidUkBillBase.

        Independent medical reports claimed

        :param independent_medical_reports_claimed: The independent_medical_reports_claimed of this LegalAidUkBillBase.
        :type independent_medical_reports_claimed: str
        """

        self._independent_medical_reports_claimed = independent_medical_reports_claimed

    @property
    def jr_form_filling(self):
        """Gets the jr_form_filling of this LegalAidUkBillBase.

        JR/Form filling ex VAT, for Legal Aid England and Wales

        :return: The jr_form_filling of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._jr_form_filling

    @jr_form_filling.setter
    def jr_form_filling(self, jr_form_filling):
        """Sets the jr_form_filling of this LegalAidUkBillBase.

        JR/Form filling ex VAT, for Legal Aid England and Wales

        :param jr_form_filling: The jr_form_filling of this LegalAidUkBillBase.
        :type jr_form_filling: str
        """

        self._jr_form_filling = jr_form_filling

    @property
    def maat_id(self):
        """Gets the maat_id of this LegalAidUkBillBase.

        MAAT ID

        :return: The maat_id of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._maat_id

    @maat_id.setter
    def maat_id(self, maat_id):
        """Sets the maat_id of this LegalAidUkBillBase.

        MAAT ID

        :param maat_id: The maat_id of this LegalAidUkBillBase.
        :type maat_id: str
        """

        self._maat_id = maat_id

    @property
    def meetings_attended(self):
        """Gets the meetings_attended of this LegalAidUkBillBase.

        Meetings attended

        :return: The meetings_attended of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._meetings_attended

    @meetings_attended.setter
    def meetings_attended(self, meetings_attended):
        """Sets the meetings_attended of this LegalAidUkBillBase.

        Meetings attended

        :param meetings_attended: The meetings_attended of this LegalAidUkBillBase.
        :type meetings_attended: int
        """

        self._meetings_attended = meetings_attended

    @property
    def mht_ref_no(self):
        """Gets the mht_ref_no of this LegalAidUkBillBase.

        MHT reference number

        :return: The mht_ref_no of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._mht_ref_no

    @mht_ref_no.setter
    def mht_ref_no(self, mht_ref_no):
        """Sets the mht_ref_no of this LegalAidUkBillBase.

        MHT reference number

        :param mht_ref_no: The mht_ref_no of this LegalAidUkBillBase.
        :type mht_ref_no: str
        """

        self._mht_ref_no = mht_ref_no

    @property
    def net_disbursements(self):
        """Gets the net_disbursements of this LegalAidUkBillBase.

        Net disbursements

        :return: The net_disbursements of this LegalAidUkBillBase.
        :rtype: float
        """
        return self._net_disbursements

    @net_disbursements.setter
    def net_disbursements(self, net_disbursements):
        """Sets the net_disbursements of this LegalAidUkBillBase.

        Net disbursements

        :param net_disbursements: The net_disbursements of this LegalAidUkBillBase.
        :type net_disbursements: float
        """

        self._net_disbursements = net_disbursements

    @property
    def net_profit_costs(self):
        """Gets the net_profit_costs of this LegalAidUkBillBase.

        Net profit cost

        :return: The net_profit_costs of this LegalAidUkBillBase.
        :rtype: float
        """
        return self._net_profit_costs

    @net_profit_costs.setter
    def net_profit_costs(self, net_profit_costs):
        """Sets the net_profit_costs of this LegalAidUkBillBase.

        Net profit cost

        :param net_profit_costs: The net_profit_costs of this LegalAidUkBillBase.
        :type net_profit_costs: float
        """

        self._net_profit_costs = net_profit_costs

    @property
    def niat_disbursement_prior_authority_number(self):
        """Gets the niat_disbursement_prior_authority_number of this LegalAidUkBillBase.

        NIAT disbursement prior authority number

        :return: The niat_disbursement_prior_authority_number of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._niat_disbursement_prior_authority_number

    @niat_disbursement_prior_authority_number.setter
    def niat_disbursement_prior_authority_number(self, niat_disbursement_prior_authority_number):
        """Sets the niat_disbursement_prior_authority_number of this LegalAidUkBillBase.

        NIAT disbursement prior authority number

        :param niat_disbursement_prior_authority_number: The niat_disbursement_prior_authority_number of this LegalAidUkBillBase.
        :type niat_disbursement_prior_authority_number: str
        """

        self._niat_disbursement_prior_authority_number = niat_disbursement_prior_authority_number

    @property
    def number_of_attendances(self):
        """Gets the number_of_attendances of this LegalAidUkBillBase.

        Number of attendances

        :return: The number_of_attendances of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._number_of_attendances

    @number_of_attendances.setter
    def number_of_attendances(self, number_of_attendances):
        """Sets the number_of_attendances of this LegalAidUkBillBase.

        Number of attendances

        :param number_of_attendances: The number_of_attendances of this LegalAidUkBillBase.
        :type number_of_attendances: int
        """

        self._number_of_attendances = number_of_attendances

    @property
    def outcome_for_the_client(self):
        """Gets the outcome_for_the_client of this LegalAidUkBillBase.

        Outcome for the client

        :return: The outcome_for_the_client of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._outcome_for_the_client

    @outcome_for_the_client.setter
    def outcome_for_the_client(self, outcome_for_the_client):
        """Sets the outcome_for_the_client of this LegalAidUkBillBase.

        Outcome for the client

        :param outcome_for_the_client: The outcome_for_the_client of this LegalAidUkBillBase.
        :type outcome_for_the_client: int
        """

        self._outcome_for_the_client = outcome_for_the_client

    @property
    def profit_costs_ex_vat(self):
        """Gets the profit_costs_ex_vat of this LegalAidUkBillBase.

        Profit costs ex VAT

        :return: The profit_costs_ex_vat of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._profit_costs_ex_vat

    @profit_costs_ex_vat.setter
    def profit_costs_ex_vat(self, profit_costs_ex_vat):
        """Sets the profit_costs_ex_vat of this LegalAidUkBillBase.

        Profit costs ex VAT

        :param profit_costs_ex_vat: The profit_costs_ex_vat of this LegalAidUkBillBase.
        :type profit_costs_ex_vat: int
        """

        self._profit_costs_ex_vat = profit_costs_ex_vat

    @property
    def prior_authority_reference(self):
        """Gets the prior_authority_reference of this LegalAidUkBillBase.

        Prior authority reference number

        :return: The prior_authority_reference of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._prior_authority_reference

    @prior_authority_reference.setter
    def prior_authority_reference(self, prior_authority_reference):
        """Sets the prior_authority_reference of this LegalAidUkBillBase.

        Prior authority reference number

        :param prior_authority_reference: The prior_authority_reference of this LegalAidUkBillBase.
        :type prior_authority_reference: str
        """

        self._prior_authority_reference = prior_authority_reference

    @property
    def representation_order_date(self):
        """Gets the representation_order_date of this LegalAidUkBillBase.

        Representation order date

        :return: The representation_order_date of this LegalAidUkBillBase.
        :rtype: date
        """
        return self._representation_order_date

    @representation_order_date.setter
    def representation_order_date(self, representation_order_date):
        """Sets the representation_order_date of this LegalAidUkBillBase.

        Representation order date

        :param representation_order_date: The representation_order_date of this LegalAidUkBillBase.
        :type representation_order_date: date
        """

        self._representation_order_date = representation_order_date

    @property
    def stage_reached(self):
        """Gets the stage_reached of this LegalAidUkBillBase.

        Stage reached

        :return: The stage_reached of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._stage_reached

    @stage_reached.setter
    def stage_reached(self, stage_reached):
        """Sets the stage_reached of this LegalAidUkBillBase.

        Stage reached

        :param stage_reached: The stage_reached of this LegalAidUkBillBase.
        :type stage_reached: int
        """

        self._stage_reached = stage_reached

    @property
    def substantive_hearing(self):
        """Gets the substantive_hearing of this LegalAidUkBillBase.

        Substantive hearing

        :return: The substantive_hearing of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._substantive_hearing

    @substantive_hearing.setter
    def substantive_hearing(self, substantive_hearing):
        """Sets the substantive_hearing of this LegalAidUkBillBase.

        Substantive hearing

        :param substantive_hearing: The substantive_hearing of this LegalAidUkBillBase.
        :type substantive_hearing: int
        """

        self._substantive_hearing = substantive_hearing

    @property
    def travel_and_waiting_costs(self):
        """Gets the travel_and_waiting_costs of this LegalAidUkBillBase.

        Travel & waiting costs

        :return: The travel_and_waiting_costs of this LegalAidUkBillBase.
        :rtype: float
        """
        return self._travel_and_waiting_costs

    @travel_and_waiting_costs.setter
    def travel_and_waiting_costs(self, travel_and_waiting_costs):
        """Sets the travel_and_waiting_costs of this LegalAidUkBillBase.

        Travel & waiting costs

        :param travel_and_waiting_costs: The travel_and_waiting_costs of this LegalAidUkBillBase.
        :type travel_and_waiting_costs: float
        """

        self._travel_and_waiting_costs = travel_and_waiting_costs

    @property
    def travel_time(self):
        """Gets the travel_time of this LegalAidUkBillBase.

        Travel time

        :return: The travel_time of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._travel_time

    @travel_time.setter
    def travel_time(self, travel_time):
        """Sets the travel_time of this LegalAidUkBillBase.

        Travel time

        :param travel_time: The travel_time of this LegalAidUkBillBase.
        :type travel_time: int
        """

        self._travel_time = travel_time

    @property
    def value_of_costs(self):
        """Gets the value_of_costs of this LegalAidUkBillBase.

        Value of costs

        :return: The value_of_costs of this LegalAidUkBillBase.
        :rtype: str
        """
        return self._value_of_costs

    @value_of_costs.setter
    def value_of_costs(self, value_of_costs):
        """Sets the value_of_costs of this LegalAidUkBillBase.

        Value of costs

        :param value_of_costs: The value_of_costs of this LegalAidUkBillBase.
        :type value_of_costs: str
        """

        self._value_of_costs = value_of_costs

    @property
    def waiting_time(self):
        """Gets the waiting_time of this LegalAidUkBillBase.

        Waiting time

        :return: The waiting_time of this LegalAidUkBillBase.
        :rtype: int
        """
        return self._waiting_time

    @waiting_time.setter
    def waiting_time(self, waiting_time):
        """Sets the waiting_time of this LegalAidUkBillBase.

        Waiting time

        :param waiting_time: The waiting_time of this LegalAidUkBillBase.
        :type waiting_time: int
        """

        self._waiting_time = waiting_time
