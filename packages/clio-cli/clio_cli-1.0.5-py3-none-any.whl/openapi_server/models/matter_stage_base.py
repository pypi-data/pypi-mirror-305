# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatterStageBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, practice_area_id: str=None, name: str=None, order: int=None, created_at: datetime=None, updated_at: datetime=None):
        """MatterStageBase - a model defined in OpenAPI

        :param id: The id of this MatterStageBase.
        :param etag: The etag of this MatterStageBase.
        :param practice_area_id: The practice_area_id of this MatterStageBase.
        :param name: The name of this MatterStageBase.
        :param order: The order of this MatterStageBase.
        :param created_at: The created_at of this MatterStageBase.
        :param updated_at: The updated_at of this MatterStageBase.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            'practice_area_id': str,
            'name': str,
            'order': int,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            'practice_area_id': 'practice_area_id',
            'name': 'name',
            'order': 'order',
            'created_at': 'created_at',
            'updated_at': 'updated_at'
        }

        self._id = id
        self._etag = etag
        self._practice_area_id = practice_area_id
        self._name = name
        self._order = order
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatterStageBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatterStage_base of this MatterStageBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this MatterStageBase.

        Unique identifier for the *MatterStage*

        :return: The id of this MatterStageBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MatterStageBase.

        Unique identifier for the *MatterStage*

        :param id: The id of this MatterStageBase.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this MatterStageBase.

        ETag for the *MatterStage*

        :return: The etag of this MatterStageBase.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this MatterStageBase.

        ETag for the *MatterStage*

        :param etag: The etag of this MatterStageBase.
        :type etag: str
        """

        self._etag = etag

    @property
    def practice_area_id(self):
        """Gets the practice_area_id of this MatterStageBase.

        Practice Area ID

        :return: The practice_area_id of this MatterStageBase.
        :rtype: str
        """
        return self._practice_area_id

    @practice_area_id.setter
    def practice_area_id(self, practice_area_id):
        """Sets the practice_area_id of this MatterStageBase.

        Practice Area ID

        :param practice_area_id: The practice_area_id of this MatterStageBase.
        :type practice_area_id: str
        """

        self._practice_area_id = practice_area_id

    @property
    def name(self):
        """Gets the name of this MatterStageBase.

        The name of the *MatterStage*

        :return: The name of this MatterStageBase.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MatterStageBase.

        The name of the *MatterStage*

        :param name: The name of this MatterStageBase.
        :type name: str
        """

        self._name = name

    @property
    def order(self):
        """Gets the order of this MatterStageBase.

        The order of the matter stage within a practice area

        :return: The order of this MatterStageBase.
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this MatterStageBase.

        The order of the matter stage within a practice area

        :param order: The order of this MatterStageBase.
        :type order: int
        """

        self._order = order

    @property
    def created_at(self):
        """Gets the created_at of this MatterStageBase.

        The time the *MatterStage* was created (as a ISO-8601 timestamp)

        :return: The created_at of this MatterStageBase.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MatterStageBase.

        The time the *MatterStage* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this MatterStageBase.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this MatterStageBase.

        The time the *MatterStage* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this MatterStageBase.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this MatterStageBase.

        The time the *MatterStage* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this MatterStageBase.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
