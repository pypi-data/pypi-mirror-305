# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactCreateRequestDataAvatar(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image: str=None, destroy: bool=None):
        """ContactCreateRequestDataAvatar - a model defined in OpenAPI

        :param image: The image of this ContactCreateRequestDataAvatar.
        :param destroy: The destroy of this ContactCreateRequestDataAvatar.
        """
        self.openapi_types = {
            'image': str,
            'destroy': bool
        }

        self.attribute_map = {
            'image': 'image',
            'destroy': '_destroy'
        }

        self._image = image
        self._destroy = destroy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactCreateRequestDataAvatar':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact_create_request_data_avatar of this ContactCreateRequestDataAvatar.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image(self):
        """Gets the image of this ContactCreateRequestDataAvatar.

        The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size.

        :return: The image of this ContactCreateRequestDataAvatar.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ContactCreateRequestDataAvatar.

        The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size.

        :param image: The image of this ContactCreateRequestDataAvatar.
        :type image: str
        """

        self._image = image

    @property
    def destroy(self):
        """Gets the destroy of this ContactCreateRequestDataAvatar.

        The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact.

        :return: The destroy of this ContactCreateRequestDataAvatar.
        :rtype: bool
        """
        return self._destroy

    @destroy.setter
    def destroy(self, destroy):
        """Sets the destroy of this ContactCreateRequestDataAvatar.

        The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact.

        :param destroy: The destroy of this ContactCreateRequestDataAvatar.
        :type destroy: bool
        """

        self._destroy = destroy
