# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_copy_request_data_document_category import DocumentCopyRequestDataDocumentCategory
from openapi_server.models.document_copy_request_data_parent import DocumentCopyRequestDataParent
from openapi_server.models.document_create_request_data_external_properties_inner import DocumentCreateRequestDataExternalPropertiesInner
from openapi_server.models.document_create_request_data_multiparts_inner import DocumentCreateRequestDataMultipartsInner
from openapi_server import util


class DocumentCreateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, communication_id: int=None, content_type: str=None, document_category: DocumentCopyRequestDataDocumentCategory=None, external_properties: List[DocumentCreateRequestDataExternalPropertiesInner]=None, filename: str='name', multiparts: List[DocumentCreateRequestDataMultipartsInner]=None, name: str=None, parent: DocumentCopyRequestDataParent=None, received_at: datetime=None):
        """DocumentCreateRequestData - a model defined in OpenAPI

        :param communication_id: The communication_id of this DocumentCreateRequestData.
        :param content_type: The content_type of this DocumentCreateRequestData.
        :param document_category: The document_category of this DocumentCreateRequestData.
        :param external_properties: The external_properties of this DocumentCreateRequestData.
        :param filename: The filename of this DocumentCreateRequestData.
        :param multiparts: The multiparts of this DocumentCreateRequestData.
        :param name: The name of this DocumentCreateRequestData.
        :param parent: The parent of this DocumentCreateRequestData.
        :param received_at: The received_at of this DocumentCreateRequestData.
        """
        self.openapi_types = {
            'communication_id': int,
            'content_type': str,
            'document_category': DocumentCopyRequestDataDocumentCategory,
            'external_properties': List[DocumentCreateRequestDataExternalPropertiesInner],
            'filename': str,
            'multiparts': List[DocumentCreateRequestDataMultipartsInner],
            'name': str,
            'parent': DocumentCopyRequestDataParent,
            'received_at': datetime
        }

        self.attribute_map = {
            'communication_id': 'communication_id',
            'content_type': 'content_type',
            'document_category': 'document_category',
            'external_properties': 'external_properties',
            'filename': 'filename',
            'multiparts': 'multiparts',
            'name': 'name',
            'parent': 'parent',
            'received_at': 'received_at'
        }

        self._communication_id = communication_id
        self._content_type = content_type
        self._document_category = document_category
        self._external_properties = external_properties
        self._filename = filename
        self._multiparts = multiparts
        self._name = name
        self._parent = parent
        self._received_at = received_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentCreateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Document_create_request_data of this DocumentCreateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def communication_id(self):
        """Gets the communication_id of this DocumentCreateRequestData.

        Related communication record.

        :return: The communication_id of this DocumentCreateRequestData.
        :rtype: int
        """
        return self._communication_id

    @communication_id.setter
    def communication_id(self, communication_id):
        """Sets the communication_id of this DocumentCreateRequestData.

        Related communication record.

        :param communication_id: The communication_id of this DocumentCreateRequestData.
        :type communication_id: int
        """

        self._communication_id = communication_id

    @property
    def content_type(self):
        """Gets the content_type of this DocumentCreateRequestData.

        A standard MIME type describing the format of the object data. If the field is not specified, it is determined by the file extension.

        :return: The content_type of this DocumentCreateRequestData.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this DocumentCreateRequestData.

        A standard MIME type describing the format of the object data. If the field is not specified, it is determined by the file extension.

        :param content_type: The content_type of this DocumentCreateRequestData.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def document_category(self):
        """Gets the document_category of this DocumentCreateRequestData.


        :return: The document_category of this DocumentCreateRequestData.
        :rtype: DocumentCopyRequestDataDocumentCategory
        """
        return self._document_category

    @document_category.setter
    def document_category(self, document_category):
        """Sets the document_category of this DocumentCreateRequestData.


        :param document_category: The document_category of this DocumentCreateRequestData.
        :type document_category: DocumentCopyRequestDataDocumentCategory
        """

        self._document_category = document_category

    @property
    def external_properties(self):
        """Gets the external_properties of this DocumentCreateRequestData.


        :return: The external_properties of this DocumentCreateRequestData.
        :rtype: List[DocumentCreateRequestDataExternalPropertiesInner]
        """
        return self._external_properties

    @external_properties.setter
    def external_properties(self, external_properties):
        """Sets the external_properties of this DocumentCreateRequestData.


        :param external_properties: The external_properties of this DocumentCreateRequestData.
        :type external_properties: List[DocumentCreateRequestDataExternalPropertiesInner]
        """

        self._external_properties = external_properties

    @property
    def filename(self):
        """Gets the filename of this DocumentCreateRequestData.

        Name of the original file.

        :return: The filename of this DocumentCreateRequestData.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this DocumentCreateRequestData.

        Name of the original file.

        :param filename: The filename of this DocumentCreateRequestData.
        :type filename: str
        """

        self._filename = filename

    @property
    def multiparts(self):
        """Gets the multiparts of this DocumentCreateRequestData.


        :return: The multiparts of this DocumentCreateRequestData.
        :rtype: List[DocumentCreateRequestDataMultipartsInner]
        """
        return self._multiparts

    @multiparts.setter
    def multiparts(self, multiparts):
        """Sets the multiparts of this DocumentCreateRequestData.


        :param multiparts: The multiparts of this DocumentCreateRequestData.
        :type multiparts: List[DocumentCreateRequestDataMultipartsInner]
        """

        self._multiparts = multiparts

    @property
    def name(self):
        """Gets the name of this DocumentCreateRequestData.

        Document name.

        :return: The name of this DocumentCreateRequestData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DocumentCreateRequestData.

        Document name.

        :param name: The name of this DocumentCreateRequestData.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def parent(self):
        """Gets the parent of this DocumentCreateRequestData.


        :return: The parent of this DocumentCreateRequestData.
        :rtype: DocumentCopyRequestDataParent
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this DocumentCreateRequestData.


        :param parent: The parent of this DocumentCreateRequestData.
        :type parent: DocumentCopyRequestDataParent
        """
        if parent is None:
            raise ValueError("Invalid value for `parent`, must not be `None`")

        self._parent = parent

    @property
    def received_at(self):
        """Gets the received_at of this DocumentCreateRequestData.

        Date and time the document was received (Expects an ISO-8601 timestamp).

        :return: The received_at of this DocumentCreateRequestData.
        :rtype: datetime
        """
        return self._received_at

    @received_at.setter
    def received_at(self, received_at):
        """Sets the received_at of this DocumentCreateRequestData.

        Date and time the document was received (Expects an ISO-8601 timestamp).

        :param received_at: The received_at of this DocumentCreateRequestData.
        :type received_at: datetime
        """

        self._received_at = received_at
