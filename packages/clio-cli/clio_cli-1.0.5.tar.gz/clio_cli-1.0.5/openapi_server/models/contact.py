# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_balance_base import AccountBalanceBase
from openapi_server.models.activity_rate_base import ActivityRateBase
from openapi_server.models.address_base import AddressBase
from openapi_server.models.avatar_base import AvatarBase
from openapi_server.models.contact_base import ContactBase
from openapi_server.models.custom_field_set_association_base import CustomFieldSetAssociationBase
from openapi_server.models.custom_field_value import CustomFieldValue
from openapi_server.models.email_address_base import EmailAddressBase
from openapi_server.models.folder_base import FolderBase
from openapi_server.models.instant_messenger_base import InstantMessengerBase
from openapi_server.models.legal_aid_uk_contact_base import LegalAidUkContactBase
from openapi_server.models.notification_method_base import NotificationMethodBase
from openapi_server.models.payment_profile_base import PaymentProfileBase
from openapi_server.models.phone_number_base import PhoneNumberBase
from openapi_server.models.web_site_base import WebSiteBase
from openapi_server import util


class Contact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, name: str=None, first_name: str=None, middle_name: str=None, last_name: str=None, date_of_birth: date=None, type: str=None, created_at: datetime=None, updated_at: datetime=None, prefix: str=None, title: str=None, initials: str=None, clio_connect_email: str=None, locked_clio_connect_email: bool=None, client_connect_user_id: int=None, primary_email_address: str=None, secondary_email_address: str=None, primary_phone_number: str=None, secondary_phone_number: str=None, ledes_client_id: str=None, has_clio_for_clients_permission: bool=None, is_client: bool=None, is_clio_for_client_user: bool=None, is_co_counsel: bool=None, is_bill_recipient: bool=None, sales_tax_number: str=None, activity_rates: List[ActivityRateBase]=None, addresses: List[AddressBase]=None, custom_field_values: List[CustomFieldValue]=None, custom_field_set_associations: List[CustomFieldSetAssociationBase]=None, email_addresses: List[EmailAddressBase]=None, instant_messengers: List[InstantMessengerBase]=None, phone_numbers: List[PhoneNumberBase]=None, web_sites: List[WebSiteBase]=None, notification_methods: List[NotificationMethodBase]=None, account_balances: List[AccountBalanceBase]=None, related_contacts: List[ContactBase]=None, primary_work_address: AddressBase=None, primary_address: AddressBase=None, secondary_address: AddressBase=None, company: ContactBase=None, avatar: AvatarBase=None, payment_profile: PaymentProfileBase=None, folder: FolderBase=None, co_counsel_rate: ActivityRateBase=None, primary_web_site: WebSiteBase=None, legal_aid_uk_contact: LegalAidUkContactBase=None):
        """Contact - a model defined in OpenAPI

        :param id: The id of this Contact.
        :param etag: The etag of this Contact.
        :param name: The name of this Contact.
        :param first_name: The first_name of this Contact.
        :param middle_name: The middle_name of this Contact.
        :param last_name: The last_name of this Contact.
        :param date_of_birth: The date_of_birth of this Contact.
        :param type: The type of this Contact.
        :param created_at: The created_at of this Contact.
        :param updated_at: The updated_at of this Contact.
        :param prefix: The prefix of this Contact.
        :param title: The title of this Contact.
        :param initials: The initials of this Contact.
        :param clio_connect_email: The clio_connect_email of this Contact.
        :param locked_clio_connect_email: The locked_clio_connect_email of this Contact.
        :param client_connect_user_id: The client_connect_user_id of this Contact.
        :param primary_email_address: The primary_email_address of this Contact.
        :param secondary_email_address: The secondary_email_address of this Contact.
        :param primary_phone_number: The primary_phone_number of this Contact.
        :param secondary_phone_number: The secondary_phone_number of this Contact.
        :param ledes_client_id: The ledes_client_id of this Contact.
        :param has_clio_for_clients_permission: The has_clio_for_clients_permission of this Contact.
        :param is_client: The is_client of this Contact.
        :param is_clio_for_client_user: The is_clio_for_client_user of this Contact.
        :param is_co_counsel: The is_co_counsel of this Contact.
        :param is_bill_recipient: The is_bill_recipient of this Contact.
        :param sales_tax_number: The sales_tax_number of this Contact.
        :param activity_rates: The activity_rates of this Contact.
        :param addresses: The addresses of this Contact.
        :param custom_field_values: The custom_field_values of this Contact.
        :param custom_field_set_associations: The custom_field_set_associations of this Contact.
        :param email_addresses: The email_addresses of this Contact.
        :param instant_messengers: The instant_messengers of this Contact.
        :param phone_numbers: The phone_numbers of this Contact.
        :param web_sites: The web_sites of this Contact.
        :param notification_methods: The notification_methods of this Contact.
        :param account_balances: The account_balances of this Contact.
        :param related_contacts: The related_contacts of this Contact.
        :param primary_work_address: The primary_work_address of this Contact.
        :param primary_address: The primary_address of this Contact.
        :param secondary_address: The secondary_address of this Contact.
        :param company: The company of this Contact.
        :param avatar: The avatar of this Contact.
        :param payment_profile: The payment_profile of this Contact.
        :param folder: The folder of this Contact.
        :param co_counsel_rate: The co_counsel_rate of this Contact.
        :param primary_web_site: The primary_web_site of this Contact.
        :param legal_aid_uk_contact: The legal_aid_uk_contact of this Contact.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            'name': str,
            'first_name': str,
            'middle_name': str,
            'last_name': str,
            'date_of_birth': date,
            'type': str,
            'created_at': datetime,
            'updated_at': datetime,
            'prefix': str,
            'title': str,
            'initials': str,
            'clio_connect_email': str,
            'locked_clio_connect_email': bool,
            'client_connect_user_id': int,
            'primary_email_address': str,
            'secondary_email_address': str,
            'primary_phone_number': str,
            'secondary_phone_number': str,
            'ledes_client_id': str,
            'has_clio_for_clients_permission': bool,
            'is_client': bool,
            'is_clio_for_client_user': bool,
            'is_co_counsel': bool,
            'is_bill_recipient': bool,
            'sales_tax_number': str,
            'activity_rates': List[ActivityRateBase],
            'addresses': List[AddressBase],
            'custom_field_values': List[CustomFieldValue],
            'custom_field_set_associations': List[CustomFieldSetAssociationBase],
            'email_addresses': List[EmailAddressBase],
            'instant_messengers': List[InstantMessengerBase],
            'phone_numbers': List[PhoneNumberBase],
            'web_sites': List[WebSiteBase],
            'notification_methods': List[NotificationMethodBase],
            'account_balances': List[AccountBalanceBase],
            'related_contacts': List[ContactBase],
            'primary_work_address': AddressBase,
            'primary_address': AddressBase,
            'secondary_address': AddressBase,
            'company': ContactBase,
            'avatar': AvatarBase,
            'payment_profile': PaymentProfileBase,
            'folder': FolderBase,
            'co_counsel_rate': ActivityRateBase,
            'primary_web_site': WebSiteBase,
            'legal_aid_uk_contact': LegalAidUkContactBase
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            'name': 'name',
            'first_name': 'first_name',
            'middle_name': 'middle_name',
            'last_name': 'last_name',
            'date_of_birth': 'date_of_birth',
            'type': 'type',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'prefix': 'prefix',
            'title': 'title',
            'initials': 'initials',
            'clio_connect_email': 'clio_connect_email',
            'locked_clio_connect_email': 'locked_clio_connect_email',
            'client_connect_user_id': 'client_connect_user_id',
            'primary_email_address': 'primary_email_address',
            'secondary_email_address': 'secondary_email_address',
            'primary_phone_number': 'primary_phone_number',
            'secondary_phone_number': 'secondary_phone_number',
            'ledes_client_id': 'ledes_client_id',
            'has_clio_for_clients_permission': 'has_clio_for_clients_permission',
            'is_client': 'is_client',
            'is_clio_for_client_user': 'is_clio_for_client_user',
            'is_co_counsel': 'is_co_counsel',
            'is_bill_recipient': 'is_bill_recipient',
            'sales_tax_number': 'sales_tax_number',
            'activity_rates': 'activity_rates',
            'addresses': 'addresses',
            'custom_field_values': 'custom_field_values',
            'custom_field_set_associations': 'custom_field_set_associations',
            'email_addresses': 'email_addresses',
            'instant_messengers': 'instant_messengers',
            'phone_numbers': 'phone_numbers',
            'web_sites': 'web_sites',
            'notification_methods': 'notification_methods',
            'account_balances': 'account_balances',
            'related_contacts': 'related_contacts',
            'primary_work_address': 'primary_work_address',
            'primary_address': 'primary_address',
            'secondary_address': 'secondary_address',
            'company': 'company',
            'avatar': 'avatar',
            'payment_profile': 'payment_profile',
            'folder': 'folder',
            'co_counsel_rate': 'co_counsel_rate',
            'primary_web_site': 'primary_web_site',
            'legal_aid_uk_contact': 'legal_aid_uk_contact'
        }

        self._id = id
        self._etag = etag
        self._name = name
        self._first_name = first_name
        self._middle_name = middle_name
        self._last_name = last_name
        self._date_of_birth = date_of_birth
        self._type = type
        self._created_at = created_at
        self._updated_at = updated_at
        self._prefix = prefix
        self._title = title
        self._initials = initials
        self._clio_connect_email = clio_connect_email
        self._locked_clio_connect_email = locked_clio_connect_email
        self._client_connect_user_id = client_connect_user_id
        self._primary_email_address = primary_email_address
        self._secondary_email_address = secondary_email_address
        self._primary_phone_number = primary_phone_number
        self._secondary_phone_number = secondary_phone_number
        self._ledes_client_id = ledes_client_id
        self._has_clio_for_clients_permission = has_clio_for_clients_permission
        self._is_client = is_client
        self._is_clio_for_client_user = is_clio_for_client_user
        self._is_co_counsel = is_co_counsel
        self._is_bill_recipient = is_bill_recipient
        self._sales_tax_number = sales_tax_number
        self._activity_rates = activity_rates
        self._addresses = addresses
        self._custom_field_values = custom_field_values
        self._custom_field_set_associations = custom_field_set_associations
        self._email_addresses = email_addresses
        self._instant_messengers = instant_messengers
        self._phone_numbers = phone_numbers
        self._web_sites = web_sites
        self._notification_methods = notification_methods
        self._account_balances = account_balances
        self._related_contacts = related_contacts
        self._primary_work_address = primary_work_address
        self._primary_address = primary_address
        self._secondary_address = secondary_address
        self._company = company
        self._avatar = avatar
        self._payment_profile = payment_profile
        self._folder = folder
        self._co_counsel_rate = co_counsel_rate
        self._primary_web_site = primary_web_site
        self._legal_aid_uk_contact = legal_aid_uk_contact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Contact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact of this Contact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Contact.

        Unique identifier for the *Contact*

        :return: The id of this Contact.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Contact.

        Unique identifier for the *Contact*

        :param id: The id of this Contact.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this Contact.

        ETag for the *Contact*

        :return: The etag of this Contact.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this Contact.

        ETag for the *Contact*

        :param etag: The etag of this Contact.
        :type etag: str
        """

        self._etag = etag

    @property
    def name(self):
        """Gets the name of this Contact.

        The full name of the *Contact*

        :return: The name of this Contact.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Contact.

        The full name of the *Contact*

        :param name: The name of this Contact.
        :type name: str
        """

        self._name = name

    @property
    def first_name(self):
        """Gets the first_name of this Contact.

        First name of the Person

        :return: The first_name of this Contact.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Contact.

        First name of the Person

        :param first_name: The first_name of this Contact.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def middle_name(self):
        """Gets the middle_name of this Contact.

        Middle name of the Person

        :return: The middle_name of this Contact.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this Contact.

        Middle name of the Person

        :param middle_name: The middle_name of this Contact.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def last_name(self):
        """Gets the last_name of this Contact.

        Last name of the Person

        :return: The last_name of this Contact.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Contact.

        Last name of the Person

        :param last_name: The last_name of this Contact.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this Contact.

        Date of birth

        :return: The date_of_birth of this Contact.
        :rtype: date
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this Contact.

        Date of birth

        :param date_of_birth: The date_of_birth of this Contact.
        :type date_of_birth: date
        """

        self._date_of_birth = date_of_birth

    @property
    def type(self):
        """Gets the type of this Contact.

        The type of the *Contact*

        :return: The type of this Contact.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Contact.

        The type of the *Contact*

        :param type: The type of this Contact.
        :type type: str
        """
        allowed_values = ["Company", "Person"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def created_at(self):
        """Gets the created_at of this Contact.

        The time the *Contact* was created (as a ISO-8601 timestamp)

        :return: The created_at of this Contact.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Contact.

        The time the *Contact* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this Contact.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this Contact.

        The time the *Contact* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this Contact.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Contact.

        The time the *Contact* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this Contact.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def prefix(self):
        """Gets the prefix of this Contact.

        The prefix of the *Contact* (Mr, Mrs, etc)

        :return: The prefix of this Contact.
        :rtype: str
        """
        return self._prefix

    @prefix.setter
    def prefix(self, prefix):
        """Sets the prefix of this Contact.

        The prefix of the *Contact* (Mr, Mrs, etc)

        :param prefix: The prefix of this Contact.
        :type prefix: str
        """

        self._prefix = prefix

    @property
    def title(self):
        """Gets the title of this Contact.

        The designated title of the *Contact*

        :return: The title of this Contact.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Contact.

        The designated title of the *Contact*

        :param title: The title of this Contact.
        :type title: str
        """

        self._title = title

    @property
    def initials(self):
        """Gets the initials of this Contact.

        The initials of the *Contact*

        :return: The initials of this Contact.
        :rtype: str
        """
        return self._initials

    @initials.setter
    def initials(self, initials):
        """Sets the initials of this Contact.

        The initials of the *Contact*

        :param initials: The initials of this Contact.
        :type initials: str
        """

        self._initials = initials

    @property
    def clio_connect_email(self):
        """Gets the clio_connect_email of this Contact.

        Clio Connect email if the *Contact* is a ClioConnect User

        :return: The clio_connect_email of this Contact.
        :rtype: str
        """
        return self._clio_connect_email

    @clio_connect_email.setter
    def clio_connect_email(self, clio_connect_email):
        """Sets the clio_connect_email of this Contact.

        Clio Connect email if the *Contact* is a ClioConnect User

        :param clio_connect_email: The clio_connect_email of this Contact.
        :type clio_connect_email: str
        """

        self._clio_connect_email = clio_connect_email

    @property
    def locked_clio_connect_email(self):
        """Gets the locked_clio_connect_email of this Contact.

        A boolean indicating if the ability to modify this *Contacts Clio connect email is locked.

        :return: The locked_clio_connect_email of this Contact.
        :rtype: bool
        """
        return self._locked_clio_connect_email

    @locked_clio_connect_email.setter
    def locked_clio_connect_email(self, locked_clio_connect_email):
        """Sets the locked_clio_connect_email of this Contact.

        A boolean indicating if the ability to modify this *Contacts Clio connect email is locked.

        :param locked_clio_connect_email: The locked_clio_connect_email of this Contact.
        :type locked_clio_connect_email: bool
        """

        self._locked_clio_connect_email = locked_clio_connect_email

    @property
    def client_connect_user_id(self):
        """Gets the client_connect_user_id of this Contact.

        The ID for the Clio Connect user associated with this *Contact*

        :return: The client_connect_user_id of this Contact.
        :rtype: int
        """
        return self._client_connect_user_id

    @client_connect_user_id.setter
    def client_connect_user_id(self, client_connect_user_id):
        """Sets the client_connect_user_id of this Contact.

        The ID for the Clio Connect user associated with this *Contact*

        :param client_connect_user_id: The client_connect_user_id of this Contact.
        :type client_connect_user_id: int
        """

        self._client_connect_user_id = client_connect_user_id

    @property
    def primary_email_address(self):
        """Gets the primary_email_address of this Contact.

        The primary email address associated with this *Contact*.

        :return: The primary_email_address of this Contact.
        :rtype: str
        """
        return self._primary_email_address

    @primary_email_address.setter
    def primary_email_address(self, primary_email_address):
        """Sets the primary_email_address of this Contact.

        The primary email address associated with this *Contact*.

        :param primary_email_address: The primary_email_address of this Contact.
        :type primary_email_address: str
        """

        self._primary_email_address = primary_email_address

    @property
    def secondary_email_address(self):
        """Gets the secondary_email_address of this Contact.

        The secondary email address associated with this *Contact*.

        :return: The secondary_email_address of this Contact.
        :rtype: str
        """
        return self._secondary_email_address

    @secondary_email_address.setter
    def secondary_email_address(self, secondary_email_address):
        """Sets the secondary_email_address of this Contact.

        The secondary email address associated with this *Contact*.

        :param secondary_email_address: The secondary_email_address of this Contact.
        :type secondary_email_address: str
        """

        self._secondary_email_address = secondary_email_address

    @property
    def primary_phone_number(self):
        """Gets the primary_phone_number of this Contact.

        The primary phone number associated with this *Contact*.

        :return: The primary_phone_number of this Contact.
        :rtype: str
        """
        return self._primary_phone_number

    @primary_phone_number.setter
    def primary_phone_number(self, primary_phone_number):
        """Sets the primary_phone_number of this Contact.

        The primary phone number associated with this *Contact*.

        :param primary_phone_number: The primary_phone_number of this Contact.
        :type primary_phone_number: str
        """

        self._primary_phone_number = primary_phone_number

    @property
    def secondary_phone_number(self):
        """Gets the secondary_phone_number of this Contact.

        The secondary phone number of the *Contact*.

        :return: The secondary_phone_number of this Contact.
        :rtype: str
        """
        return self._secondary_phone_number

    @secondary_phone_number.setter
    def secondary_phone_number(self, secondary_phone_number):
        """Sets the secondary_phone_number of this Contact.

        The secondary phone number of the *Contact*.

        :param secondary_phone_number: The secondary_phone_number of this Contact.
        :type secondary_phone_number: str
        """

        self._secondary_phone_number = secondary_phone_number

    @property
    def ledes_client_id(self):
        """Gets the ledes_client_id of this Contact.

        LEDES client id of the Contact

        :return: The ledes_client_id of this Contact.
        :rtype: str
        """
        return self._ledes_client_id

    @ledes_client_id.setter
    def ledes_client_id(self, ledes_client_id):
        """Sets the ledes_client_id of this Contact.

        LEDES client id of the Contact

        :param ledes_client_id: The ledes_client_id of this Contact.
        :type ledes_client_id: str
        """

        self._ledes_client_id = ledes_client_id

    @property
    def has_clio_for_clients_permission(self):
        """Gets the has_clio_for_clients_permission of this Contact.

        True if at least one resource has been shared with the contact using Clio for Clients.

        :return: The has_clio_for_clients_permission of this Contact.
        :rtype: bool
        """
        return self._has_clio_for_clients_permission

    @has_clio_for_clients_permission.setter
    def has_clio_for_clients_permission(self, has_clio_for_clients_permission):
        """Sets the has_clio_for_clients_permission of this Contact.

        True if at least one resource has been shared with the contact using Clio for Clients.

        :param has_clio_for_clients_permission: The has_clio_for_clients_permission of this Contact.
        :type has_clio_for_clients_permission: bool
        """

        self._has_clio_for_clients_permission = has_clio_for_clients_permission

    @property
    def is_client(self):
        """Gets the is_client of this Contact.

        Whether or not the Contact is a client

        :return: The is_client of this Contact.
        :rtype: bool
        """
        return self._is_client

    @is_client.setter
    def is_client(self, is_client):
        """Sets the is_client of this Contact.

        Whether or not the Contact is a client

        :param is_client: The is_client of this Contact.
        :type is_client: bool
        """

        self._is_client = is_client

    @property
    def is_clio_for_client_user(self):
        """Gets the is_clio_for_client_user of this Contact.

        Whether or not this contact has client_login and client_user (can be created due to addition to client portal or client_share_permissions)

        :return: The is_clio_for_client_user of this Contact.
        :rtype: bool
        """
        return self._is_clio_for_client_user

    @is_clio_for_client_user.setter
    def is_clio_for_client_user(self, is_clio_for_client_user):
        """Sets the is_clio_for_client_user of this Contact.

        Whether or not this contact has client_login and client_user (can be created due to addition to client portal or client_share_permissions)

        :param is_clio_for_client_user: The is_clio_for_client_user of this Contact.
        :type is_clio_for_client_user: bool
        """

        self._is_clio_for_client_user = is_clio_for_client_user

    @property
    def is_co_counsel(self):
        """Gets the is_co_counsel of this Contact.

        Whether or not the Contact has matters shared as co-counsel

        :return: The is_co_counsel of this Contact.
        :rtype: bool
        """
        return self._is_co_counsel

    @is_co_counsel.setter
    def is_co_counsel(self, is_co_counsel):
        """Sets the is_co_counsel of this Contact.

        Whether or not the Contact has matters shared as co-counsel

        :param is_co_counsel: The is_co_counsel of this Contact.
        :type is_co_counsel: bool
        """

        self._is_co_counsel = is_co_counsel

    @property
    def is_bill_recipient(self):
        """Gets the is_bill_recipient of this Contact.

        Whether the Contact is a bill recipient on at least one matter.

        :return: The is_bill_recipient of this Contact.
        :rtype: bool
        """
        return self._is_bill_recipient

    @is_bill_recipient.setter
    def is_bill_recipient(self, is_bill_recipient):
        """Sets the is_bill_recipient of this Contact.

        Whether the Contact is a bill recipient on at least one matter.

        :param is_bill_recipient: The is_bill_recipient of this Contact.
        :type is_bill_recipient: bool
        """

        self._is_bill_recipient = is_bill_recipient

    @property
    def sales_tax_number(self):
        """Gets the sales_tax_number of this Contact.

        The sales tax number of the *Contact*

        :return: The sales_tax_number of this Contact.
        :rtype: str
        """
        return self._sales_tax_number

    @sales_tax_number.setter
    def sales_tax_number(self, sales_tax_number):
        """Sets the sales_tax_number of this Contact.

        The sales tax number of the *Contact*

        :param sales_tax_number: The sales_tax_number of this Contact.
        :type sales_tax_number: str
        """

        self._sales_tax_number = sales_tax_number

    @property
    def activity_rates(self):
        """Gets the activity_rates of this Contact.

        ActivityRate

        :return: The activity_rates of this Contact.
        :rtype: List[ActivityRateBase]
        """
        return self._activity_rates

    @activity_rates.setter
    def activity_rates(self, activity_rates):
        """Sets the activity_rates of this Contact.

        ActivityRate

        :param activity_rates: The activity_rates of this Contact.
        :type activity_rates: List[ActivityRateBase]
        """

        self._activity_rates = activity_rates

    @property
    def addresses(self):
        """Gets the addresses of this Contact.

        Address

        :return: The addresses of this Contact.
        :rtype: List[AddressBase]
        """
        return self._addresses

    @addresses.setter
    def addresses(self, addresses):
        """Sets the addresses of this Contact.

        Address

        :param addresses: The addresses of this Contact.
        :type addresses: List[AddressBase]
        """

        self._addresses = addresses

    @property
    def custom_field_values(self):
        """Gets the custom_field_values of this Contact.

        CustomFieldValue

        :return: The custom_field_values of this Contact.
        :rtype: List[CustomFieldValue]
        """
        return self._custom_field_values

    @custom_field_values.setter
    def custom_field_values(self, custom_field_values):
        """Sets the custom_field_values of this Contact.

        CustomFieldValue

        :param custom_field_values: The custom_field_values of this Contact.
        :type custom_field_values: List[CustomFieldValue]
        """

        self._custom_field_values = custom_field_values

    @property
    def custom_field_set_associations(self):
        """Gets the custom_field_set_associations of this Contact.

        CustomFieldSetAssociation

        :return: The custom_field_set_associations of this Contact.
        :rtype: List[CustomFieldSetAssociationBase]
        """
        return self._custom_field_set_associations

    @custom_field_set_associations.setter
    def custom_field_set_associations(self, custom_field_set_associations):
        """Sets the custom_field_set_associations of this Contact.

        CustomFieldSetAssociation

        :param custom_field_set_associations: The custom_field_set_associations of this Contact.
        :type custom_field_set_associations: List[CustomFieldSetAssociationBase]
        """

        self._custom_field_set_associations = custom_field_set_associations

    @property
    def email_addresses(self):
        """Gets the email_addresses of this Contact.

        EmailAddress

        :return: The email_addresses of this Contact.
        :rtype: List[EmailAddressBase]
        """
        return self._email_addresses

    @email_addresses.setter
    def email_addresses(self, email_addresses):
        """Sets the email_addresses of this Contact.

        EmailAddress

        :param email_addresses: The email_addresses of this Contact.
        :type email_addresses: List[EmailAddressBase]
        """

        self._email_addresses = email_addresses

    @property
    def instant_messengers(self):
        """Gets the instant_messengers of this Contact.

        InstantMessenger

        :return: The instant_messengers of this Contact.
        :rtype: List[InstantMessengerBase]
        """
        return self._instant_messengers

    @instant_messengers.setter
    def instant_messengers(self, instant_messengers):
        """Sets the instant_messengers of this Contact.

        InstantMessenger

        :param instant_messengers: The instant_messengers of this Contact.
        :type instant_messengers: List[InstantMessengerBase]
        """

        self._instant_messengers = instant_messengers

    @property
    def phone_numbers(self):
        """Gets the phone_numbers of this Contact.

        PhoneNumber

        :return: The phone_numbers of this Contact.
        :rtype: List[PhoneNumberBase]
        """
        return self._phone_numbers

    @phone_numbers.setter
    def phone_numbers(self, phone_numbers):
        """Sets the phone_numbers of this Contact.

        PhoneNumber

        :param phone_numbers: The phone_numbers of this Contact.
        :type phone_numbers: List[PhoneNumberBase]
        """

        self._phone_numbers = phone_numbers

    @property
    def web_sites(self):
        """Gets the web_sites of this Contact.

        WebSite

        :return: The web_sites of this Contact.
        :rtype: List[WebSiteBase]
        """
        return self._web_sites

    @web_sites.setter
    def web_sites(self, web_sites):
        """Sets the web_sites of this Contact.

        WebSite

        :param web_sites: The web_sites of this Contact.
        :type web_sites: List[WebSiteBase]
        """

        self._web_sites = web_sites

    @property
    def notification_methods(self):
        """Gets the notification_methods of this Contact.

        NotificationMethod

        :return: The notification_methods of this Contact.
        :rtype: List[NotificationMethodBase]
        """
        return self._notification_methods

    @notification_methods.setter
    def notification_methods(self, notification_methods):
        """Sets the notification_methods of this Contact.

        NotificationMethod

        :param notification_methods: The notification_methods of this Contact.
        :type notification_methods: List[NotificationMethodBase]
        """

        self._notification_methods = notification_methods

    @property
    def account_balances(self):
        """Gets the account_balances of this Contact.

        AccountBalance

        :return: The account_balances of this Contact.
        :rtype: List[AccountBalanceBase]
        """
        return self._account_balances

    @account_balances.setter
    def account_balances(self, account_balances):
        """Sets the account_balances of this Contact.

        AccountBalance

        :param account_balances: The account_balances of this Contact.
        :type account_balances: List[AccountBalanceBase]
        """

        self._account_balances = account_balances

    @property
    def related_contacts(self):
        """Gets the related_contacts of this Contact.

        Contact

        :return: The related_contacts of this Contact.
        :rtype: List[ContactBase]
        """
        return self._related_contacts

    @related_contacts.setter
    def related_contacts(self, related_contacts):
        """Sets the related_contacts of this Contact.

        Contact

        :param related_contacts: The related_contacts of this Contact.
        :type related_contacts: List[ContactBase]
        """

        self._related_contacts = related_contacts

    @property
    def primary_work_address(self):
        """Gets the primary_work_address of this Contact.


        :return: The primary_work_address of this Contact.
        :rtype: AddressBase
        """
        return self._primary_work_address

    @primary_work_address.setter
    def primary_work_address(self, primary_work_address):
        """Sets the primary_work_address of this Contact.


        :param primary_work_address: The primary_work_address of this Contact.
        :type primary_work_address: AddressBase
        """

        self._primary_work_address = primary_work_address

    @property
    def primary_address(self):
        """Gets the primary_address of this Contact.


        :return: The primary_address of this Contact.
        :rtype: AddressBase
        """
        return self._primary_address

    @primary_address.setter
    def primary_address(self, primary_address):
        """Sets the primary_address of this Contact.


        :param primary_address: The primary_address of this Contact.
        :type primary_address: AddressBase
        """

        self._primary_address = primary_address

    @property
    def secondary_address(self):
        """Gets the secondary_address of this Contact.


        :return: The secondary_address of this Contact.
        :rtype: AddressBase
        """
        return self._secondary_address

    @secondary_address.setter
    def secondary_address(self, secondary_address):
        """Sets the secondary_address of this Contact.


        :param secondary_address: The secondary_address of this Contact.
        :type secondary_address: AddressBase
        """

        self._secondary_address = secondary_address

    @property
    def company(self):
        """Gets the company of this Contact.


        :return: The company of this Contact.
        :rtype: ContactBase
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this Contact.


        :param company: The company of this Contact.
        :type company: ContactBase
        """

        self._company = company

    @property
    def avatar(self):
        """Gets the avatar of this Contact.


        :return: The avatar of this Contact.
        :rtype: AvatarBase
        """
        return self._avatar

    @avatar.setter
    def avatar(self, avatar):
        """Sets the avatar of this Contact.


        :param avatar: The avatar of this Contact.
        :type avatar: AvatarBase
        """

        self._avatar = avatar

    @property
    def payment_profile(self):
        """Gets the payment_profile of this Contact.


        :return: The payment_profile of this Contact.
        :rtype: PaymentProfileBase
        """
        return self._payment_profile

    @payment_profile.setter
    def payment_profile(self, payment_profile):
        """Sets the payment_profile of this Contact.


        :param payment_profile: The payment_profile of this Contact.
        :type payment_profile: PaymentProfileBase
        """

        self._payment_profile = payment_profile

    @property
    def folder(self):
        """Gets the folder of this Contact.


        :return: The folder of this Contact.
        :rtype: FolderBase
        """
        return self._folder

    @folder.setter
    def folder(self, folder):
        """Sets the folder of this Contact.


        :param folder: The folder of this Contact.
        :type folder: FolderBase
        """

        self._folder = folder

    @property
    def co_counsel_rate(self):
        """Gets the co_counsel_rate of this Contact.


        :return: The co_counsel_rate of this Contact.
        :rtype: ActivityRateBase
        """
        return self._co_counsel_rate

    @co_counsel_rate.setter
    def co_counsel_rate(self, co_counsel_rate):
        """Sets the co_counsel_rate of this Contact.


        :param co_counsel_rate: The co_counsel_rate of this Contact.
        :type co_counsel_rate: ActivityRateBase
        """

        self._co_counsel_rate = co_counsel_rate

    @property
    def primary_web_site(self):
        """Gets the primary_web_site of this Contact.


        :return: The primary_web_site of this Contact.
        :rtype: WebSiteBase
        """
        return self._primary_web_site

    @primary_web_site.setter
    def primary_web_site(self, primary_web_site):
        """Sets the primary_web_site of this Contact.


        :param primary_web_site: The primary_web_site of this Contact.
        :type primary_web_site: WebSiteBase
        """

        self._primary_web_site = primary_web_site

    @property
    def legal_aid_uk_contact(self):
        """Gets the legal_aid_uk_contact of this Contact.


        :return: The legal_aid_uk_contact of this Contact.
        :rtype: LegalAidUkContactBase
        """
        return self._legal_aid_uk_contact

    @legal_aid_uk_contact.setter
    def legal_aid_uk_contact(self, legal_aid_uk_contact):
        """Sets the legal_aid_uk_contact of this Contact.


        :param legal_aid_uk_contact: The legal_aid_uk_contact of this Contact.
        :type legal_aid_uk_contact: LegalAidUkContactBase
        """

        self._legal_aid_uk_contact = legal_aid_uk_contact
