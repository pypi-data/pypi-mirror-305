# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventMetricsBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, unread_mobile_events: int=None, unread_web_events: int=None, unread_secure_messages: int=None, unread_client_portal_messages: int=None, unread_text_messages: int=None):
        """EventMetricsBase - a model defined in OpenAPI

        :param unread_mobile_events: The unread_mobile_events of this EventMetricsBase.
        :param unread_web_events: The unread_web_events of this EventMetricsBase.
        :param unread_secure_messages: The unread_secure_messages of this EventMetricsBase.
        :param unread_client_portal_messages: The unread_client_portal_messages of this EventMetricsBase.
        :param unread_text_messages: The unread_text_messages of this EventMetricsBase.
        """
        self.openapi_types = {
            'unread_mobile_events': int,
            'unread_web_events': int,
            'unread_secure_messages': int,
            'unread_client_portal_messages': int,
            'unread_text_messages': int
        }

        self.attribute_map = {
            'unread_mobile_events': 'unread_mobile_events',
            'unread_web_events': 'unread_web_events',
            'unread_secure_messages': 'unread_secure_messages',
            'unread_client_portal_messages': 'unread_client_portal_messages',
            'unread_text_messages': 'unread_text_messages'
        }

        self._unread_mobile_events = unread_mobile_events
        self._unread_web_events = unread_web_events
        self._unread_secure_messages = unread_secure_messages
        self._unread_client_portal_messages = unread_client_portal_messages
        self._unread_text_messages = unread_text_messages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventMetricsBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventMetrics_base of this EventMetricsBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def unread_mobile_events(self):
        """Gets the unread_mobile_events of this EventMetricsBase.

        The number of unread mobile event notifications for the current user

        :return: The unread_mobile_events of this EventMetricsBase.
        :rtype: int
        """
        return self._unread_mobile_events

    @unread_mobile_events.setter
    def unread_mobile_events(self, unread_mobile_events):
        """Sets the unread_mobile_events of this EventMetricsBase.

        The number of unread mobile event notifications for the current user

        :param unread_mobile_events: The unread_mobile_events of this EventMetricsBase.
        :type unread_mobile_events: int
        """

        self._unread_mobile_events = unread_mobile_events

    @property
    def unread_web_events(self):
        """Gets the unread_web_events of this EventMetricsBase.

        The number of unread web event notifications for the current user

        :return: The unread_web_events of this EventMetricsBase.
        :rtype: int
        """
        return self._unread_web_events

    @unread_web_events.setter
    def unread_web_events(self, unread_web_events):
        """Sets the unread_web_events of this EventMetricsBase.

        The number of unread web event notifications for the current user

        :param unread_web_events: The unread_web_events of this EventMetricsBase.
        :type unread_web_events: int
        """

        self._unread_web_events = unread_web_events

    @property
    def unread_secure_messages(self):
        """Gets the unread_secure_messages of this EventMetricsBase.

        The number of unread secure messages for the current user

        :return: The unread_secure_messages of this EventMetricsBase.
        :rtype: int
        """
        return self._unread_secure_messages

    @unread_secure_messages.setter
    def unread_secure_messages(self, unread_secure_messages):
        """Sets the unread_secure_messages of this EventMetricsBase.

        The number of unread secure messages for the current user

        :param unread_secure_messages: The unread_secure_messages of this EventMetricsBase.
        :type unread_secure_messages: int
        """

        self._unread_secure_messages = unread_secure_messages

    @property
    def unread_client_portal_messages(self):
        """Gets the unread_client_portal_messages of this EventMetricsBase.

        The number of unread client portal messages for the current user

        :return: The unread_client_portal_messages of this EventMetricsBase.
        :rtype: int
        """
        return self._unread_client_portal_messages

    @unread_client_portal_messages.setter
    def unread_client_portal_messages(self, unread_client_portal_messages):
        """Sets the unread_client_portal_messages of this EventMetricsBase.

        The number of unread client portal messages for the current user

        :param unread_client_portal_messages: The unread_client_portal_messages of this EventMetricsBase.
        :type unread_client_portal_messages: int
        """

        self._unread_client_portal_messages = unread_client_portal_messages

    @property
    def unread_text_messages(self):
        """Gets the unread_text_messages of this EventMetricsBase.

        The number of unread text messages for the current user

        :return: The unread_text_messages of this EventMetricsBase.
        :rtype: int
        """
        return self._unread_text_messages

    @unread_text_messages.setter
    def unread_text_messages(self, unread_text_messages):
        """Sets the unread_text_messages of this EventMetricsBase.

        The number of unread text messages for the current user

        :param unread_text_messages: The unread_text_messages of this EventMetricsBase.
        :type unread_text_messages: int
        """

        self._unread_text_messages = unread_text_messages
