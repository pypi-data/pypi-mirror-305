# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommunicationCreateRequestDataReceiversInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted: bool=None, id: int=None, type: str=None):
        """CommunicationCreateRequestDataReceiversInner - a model defined in OpenAPI

        :param deleted: The deleted of this CommunicationCreateRequestDataReceiversInner.
        :param id: The id of this CommunicationCreateRequestDataReceiversInner.
        :param type: The type of this CommunicationCreateRequestDataReceiversInner.
        """
        self.openapi_types = {
            'deleted': bool,
            'id': int,
            'type': str
        }

        self.attribute_map = {
            'deleted': '_deleted',
            'id': 'id',
            'type': 'type'
        }

        self._deleted = deleted
        self._id = id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommunicationCreateRequestDataReceiversInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Communication_create_request_data_receivers_inner of this CommunicationCreateRequestDataReceiversInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted(self):
        """Gets the deleted of this CommunicationCreateRequestDataReceiversInner.

        Whether or not the receivers should be deleted.

        :return: The deleted of this CommunicationCreateRequestDataReceiversInner.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this CommunicationCreateRequestDataReceiversInner.

        Whether or not the receivers should be deleted.

        :param deleted: The deleted of this CommunicationCreateRequestDataReceiversInner.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this CommunicationCreateRequestDataReceiversInner.

        Unique ids for the receivers of this Communication.

        :return: The id of this CommunicationCreateRequestDataReceiversInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CommunicationCreateRequestDataReceiversInner.

        Unique ids for the receivers of this Communication.

        :param id: The id of this CommunicationCreateRequestDataReceiversInner.
        :type id: int
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this CommunicationCreateRequestDataReceiversInner.

        Types of the receivers of this Communication.

        :return: The type of this CommunicationCreateRequestDataReceiversInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CommunicationCreateRequestDataReceiversInner.

        Types of the receivers of this Communication.

        :param type: The type of this CommunicationCreateRequestDataReceiversInner.
        :type type: str
        """
        allowed_values = ["User", "Contact"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
