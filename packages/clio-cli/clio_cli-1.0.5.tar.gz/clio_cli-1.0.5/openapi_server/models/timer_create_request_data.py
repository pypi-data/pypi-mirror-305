# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.timer_create_request_data_activity import TimerCreateRequestDataActivity
from openapi_server import util


class TimerCreateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity: TimerCreateRequestDataActivity=None):
        """TimerCreateRequestData - a model defined in OpenAPI

        :param activity: The activity of this TimerCreateRequestData.
        """
        self.openapi_types = {
            'activity': TimerCreateRequestDataActivity
        }

        self.attribute_map = {
            'activity': 'activity'
        }

        self._activity = activity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimerCreateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Timer_create_request_data of this TimerCreateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity(self):
        """Gets the activity of this TimerCreateRequestData.


        :return: The activity of this TimerCreateRequestData.
        :rtype: TimerCreateRequestDataActivity
        """
        return self._activity

    @activity.setter
    def activity(self, activity):
        """Sets the activity of this TimerCreateRequestData.


        :param activity: The activity of this TimerCreateRequestData.
        :type activity: TimerCreateRequestDataActivity
        """
        if activity is None:
            raise ValueError("Invalid value for `activity`, must not be `None`")

        self._activity = activity
