# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.matter_update_request_data_relationships_inner_contact import MatterUpdateRequestDataRelationshipsInnerContact
from openapi_server.models.relationship_create_request_data_matter import RelationshipCreateRequestDataMatter
from openapi_server import util


class RelationshipCreateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact: MatterUpdateRequestDataRelationshipsInnerContact=None, description: str=None, matter: RelationshipCreateRequestDataMatter=None):
        """RelationshipCreateRequestData - a model defined in OpenAPI

        :param contact: The contact of this RelationshipCreateRequestData.
        :param description: The description of this RelationshipCreateRequestData.
        :param matter: The matter of this RelationshipCreateRequestData.
        """
        self.openapi_types = {
            'contact': MatterUpdateRequestDataRelationshipsInnerContact,
            'description': str,
            'matter': RelationshipCreateRequestDataMatter
        }

        self.attribute_map = {
            'contact': 'contact',
            'description': 'description',
            'matter': 'matter'
        }

        self._contact = contact
        self._description = description
        self._matter = matter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelationshipCreateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Relationship_create_request_data of this RelationshipCreateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact(self):
        """Gets the contact of this RelationshipCreateRequestData.


        :return: The contact of this RelationshipCreateRequestData.
        :rtype: MatterUpdateRequestDataRelationshipsInnerContact
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this RelationshipCreateRequestData.


        :param contact: The contact of this RelationshipCreateRequestData.
        :type contact: MatterUpdateRequestDataRelationshipsInnerContact
        """

        self._contact = contact

    @property
    def description(self):
        """Gets the description of this RelationshipCreateRequestData.

        Describe the relationship between a Contact and a Matter.

        :return: The description of this RelationshipCreateRequestData.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RelationshipCreateRequestData.

        Describe the relationship between a Contact and a Matter.

        :param description: The description of this RelationshipCreateRequestData.
        :type description: str
        """

        self._description = description

    @property
    def matter(self):
        """Gets the matter of this RelationshipCreateRequestData.


        :return: The matter of this RelationshipCreateRequestData.
        :rtype: RelationshipCreateRequestDataMatter
        """
        return self._matter

    @matter.setter
    def matter(self, matter):
        """Sets the matter of this RelationshipCreateRequestData.


        :param matter: The matter of this RelationshipCreateRequestData.
        :type matter: RelationshipCreateRequestDataMatter
        """

        self._matter = matter
