# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactCreateRequestDataCoCounselRate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rate: float=None):
        """ContactCreateRequestDataCoCounselRate - a model defined in OpenAPI

        :param rate: The rate of this ContactCreateRequestDataCoCounselRate.
        """
        self.openapi_types = {
            'rate': float
        }

        self.attribute_map = {
            'rate': 'rate'
        }

        self._rate = rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactCreateRequestDataCoCounselRate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact_create_request_data_co_counsel_rate of this ContactCreateRequestDataCoCounselRate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rate(self):
        """Gets the rate of this ContactCreateRequestDataCoCounselRate.

        Billing rate if the Contact is a co-counsel.  Note: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests). 

        :return: The rate of this ContactCreateRequestDataCoCounselRate.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this ContactCreateRequestDataCoCounselRate.

        Billing rate if the Contact is a co-counsel.  Note: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests). 

        :param rate: The rate of this ContactCreateRequestDataCoCounselRate.
        :type rate: float
        """

        self._rate = rate
