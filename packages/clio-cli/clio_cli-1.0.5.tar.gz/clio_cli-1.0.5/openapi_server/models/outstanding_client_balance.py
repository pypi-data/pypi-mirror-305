# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bill_base import BillBase
from openapi_server.models.contact_base import ContactBase
from openapi_server.models.currency_base import CurrencyBase
from openapi_server import util


class OutstandingClientBalance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associated_matter_ids: List[int]=None, etag: str=None, id: int=None, last_payment_date: date=None, last_shared_date: date=None, newest_issued_bill_due_date: date=None, pending_payments_total: float=None, reminders_enabled: bool=None, total_outstanding_balance: float=None, created_at: datetime=None, updated_at: datetime=None, outstanding_bills: List[BillBase]=None, contact: ContactBase=None, currency: CurrencyBase=None):
        """OutstandingClientBalance - a model defined in OpenAPI

        :param associated_matter_ids: The associated_matter_ids of this OutstandingClientBalance.
        :param etag: The etag of this OutstandingClientBalance.
        :param id: The id of this OutstandingClientBalance.
        :param last_payment_date: The last_payment_date of this OutstandingClientBalance.
        :param last_shared_date: The last_shared_date of this OutstandingClientBalance.
        :param newest_issued_bill_due_date: The newest_issued_bill_due_date of this OutstandingClientBalance.
        :param pending_payments_total: The pending_payments_total of this OutstandingClientBalance.
        :param reminders_enabled: The reminders_enabled of this OutstandingClientBalance.
        :param total_outstanding_balance: The total_outstanding_balance of this OutstandingClientBalance.
        :param created_at: The created_at of this OutstandingClientBalance.
        :param updated_at: The updated_at of this OutstandingClientBalance.
        :param outstanding_bills: The outstanding_bills of this OutstandingClientBalance.
        :param contact: The contact of this OutstandingClientBalance.
        :param currency: The currency of this OutstandingClientBalance.
        """
        self.openapi_types = {
            'associated_matter_ids': List[int],
            'etag': str,
            'id': int,
            'last_payment_date': date,
            'last_shared_date': date,
            'newest_issued_bill_due_date': date,
            'pending_payments_total': float,
            'reminders_enabled': bool,
            'total_outstanding_balance': float,
            'created_at': datetime,
            'updated_at': datetime,
            'outstanding_bills': List[BillBase],
            'contact': ContactBase,
            'currency': CurrencyBase
        }

        self.attribute_map = {
            'associated_matter_ids': 'associated_matter_ids',
            'etag': 'etag',
            'id': 'id',
            'last_payment_date': 'last_payment_date',
            'last_shared_date': 'last_shared_date',
            'newest_issued_bill_due_date': 'newest_issued_bill_due_date',
            'pending_payments_total': 'pending_payments_total',
            'reminders_enabled': 'reminders_enabled',
            'total_outstanding_balance': 'total_outstanding_balance',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'outstanding_bills': 'outstanding_bills',
            'contact': 'contact',
            'currency': 'currency'
        }

        self._associated_matter_ids = associated_matter_ids
        self._etag = etag
        self._id = id
        self._last_payment_date = last_payment_date
        self._last_shared_date = last_shared_date
        self._newest_issued_bill_due_date = newest_issued_bill_due_date
        self._pending_payments_total = pending_payments_total
        self._reminders_enabled = reminders_enabled
        self._total_outstanding_balance = total_outstanding_balance
        self._created_at = created_at
        self._updated_at = updated_at
        self._outstanding_bills = outstanding_bills
        self._contact = contact
        self._currency = currency

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutstandingClientBalance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutstandingClientBalance of this OutstandingClientBalance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associated_matter_ids(self):
        """Gets the associated_matter_ids of this OutstandingClientBalance.

        An array of Matter IDs associated with bills in the unpaid state

        :return: The associated_matter_ids of this OutstandingClientBalance.
        :rtype: List[int]
        """
        return self._associated_matter_ids

    @associated_matter_ids.setter
    def associated_matter_ids(self, associated_matter_ids):
        """Sets the associated_matter_ids of this OutstandingClientBalance.

        An array of Matter IDs associated with bills in the unpaid state

        :param associated_matter_ids: The associated_matter_ids of this OutstandingClientBalance.
        :type associated_matter_ids: List[int]
        """

        self._associated_matter_ids = associated_matter_ids

    @property
    def etag(self):
        """Gets the etag of this OutstandingClientBalance.

        ETag for the *OutstandingClientBalance*

        :return: The etag of this OutstandingClientBalance.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this OutstandingClientBalance.

        ETag for the *OutstandingClientBalance*

        :param etag: The etag of this OutstandingClientBalance.
        :type etag: str
        """

        self._etag = etag

    @property
    def id(self):
        """Gets the id of this OutstandingClientBalance.

        Unique identifier for the *OutstandingClientBalance*

        :return: The id of this OutstandingClientBalance.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OutstandingClientBalance.

        Unique identifier for the *OutstandingClientBalance*

        :param id: The id of this OutstandingClientBalance.
        :type id: int
        """

        self._id = id

    @property
    def last_payment_date(self):
        """Gets the last_payment_date of this OutstandingClientBalance.

        The date the most recent payment from the contact was received

        :return: The last_payment_date of this OutstandingClientBalance.
        :rtype: date
        """
        return self._last_payment_date

    @last_payment_date.setter
    def last_payment_date(self, last_payment_date):
        """Sets the last_payment_date of this OutstandingClientBalance.

        The date the most recent payment from the contact was received

        :param last_payment_date: The last_payment_date of this OutstandingClientBalance.
        :type last_payment_date: date
        """

        self._last_payment_date = last_payment_date

    @property
    def last_shared_date(self):
        """Gets the last_shared_date of this OutstandingClientBalance.

        The date of the most recently shared bills through the outstanding balance table

        :return: The last_shared_date of this OutstandingClientBalance.
        :rtype: date
        """
        return self._last_shared_date

    @last_shared_date.setter
    def last_shared_date(self, last_shared_date):
        """Sets the last_shared_date of this OutstandingClientBalance.

        The date of the most recently shared bills through the outstanding balance table

        :param last_shared_date: The last_shared_date of this OutstandingClientBalance.
        :type last_shared_date: date
        """

        self._last_shared_date = last_shared_date

    @property
    def newest_issued_bill_due_date(self):
        """Gets the newest_issued_bill_due_date of this OutstandingClientBalance.

        The due date of the contact's newest bill

        :return: The newest_issued_bill_due_date of this OutstandingClientBalance.
        :rtype: date
        """
        return self._newest_issued_bill_due_date

    @newest_issued_bill_due_date.setter
    def newest_issued_bill_due_date(self, newest_issued_bill_due_date):
        """Sets the newest_issued_bill_due_date of this OutstandingClientBalance.

        The due date of the contact's newest bill

        :param newest_issued_bill_due_date: The newest_issued_bill_due_date of this OutstandingClientBalance.
        :type newest_issued_bill_due_date: date
        """

        self._newest_issued_bill_due_date = newest_issued_bill_due_date

    @property
    def pending_payments_total(self):
        """Gets the pending_payments_total of this OutstandingClientBalance.

        The sum of all online payments in a pending state on the outstanding bills

        :return: The pending_payments_total of this OutstandingClientBalance.
        :rtype: float
        """
        return self._pending_payments_total

    @pending_payments_total.setter
    def pending_payments_total(self, pending_payments_total):
        """Sets the pending_payments_total of this OutstandingClientBalance.

        The sum of all online payments in a pending state on the outstanding bills

        :param pending_payments_total: The pending_payments_total of this OutstandingClientBalance.
        :type pending_payments_total: float
        """

        self._pending_payments_total = pending_payments_total

    @property
    def reminders_enabled(self):
        """Gets the reminders_enabled of this OutstandingClientBalance.

        The status of automated reminders for this client

        :return: The reminders_enabled of this OutstandingClientBalance.
        :rtype: bool
        """
        return self._reminders_enabled

    @reminders_enabled.setter
    def reminders_enabled(self, reminders_enabled):
        """Sets the reminders_enabled of this OutstandingClientBalance.

        The status of automated reminders for this client

        :param reminders_enabled: The reminders_enabled of this OutstandingClientBalance.
        :type reminders_enabled: bool
        """

        self._reminders_enabled = reminders_enabled

    @property
    def total_outstanding_balance(self):
        """Gets the total_outstanding_balance of this OutstandingClientBalance.

        The sum of all bills in the unpaid state

        :return: The total_outstanding_balance of this OutstandingClientBalance.
        :rtype: float
        """
        return self._total_outstanding_balance

    @total_outstanding_balance.setter
    def total_outstanding_balance(self, total_outstanding_balance):
        """Sets the total_outstanding_balance of this OutstandingClientBalance.

        The sum of all bills in the unpaid state

        :param total_outstanding_balance: The total_outstanding_balance of this OutstandingClientBalance.
        :type total_outstanding_balance: float
        """

        self._total_outstanding_balance = total_outstanding_balance

    @property
    def created_at(self):
        """Gets the created_at of this OutstandingClientBalance.

        The time the *OutstandingClientBalance* was created (as a ISO-8601 timestamp)

        :return: The created_at of this OutstandingClientBalance.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this OutstandingClientBalance.

        The time the *OutstandingClientBalance* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this OutstandingClientBalance.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this OutstandingClientBalance.

        The time the *OutstandingClientBalance* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this OutstandingClientBalance.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this OutstandingClientBalance.

        The time the *OutstandingClientBalance* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this OutstandingClientBalance.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def outstanding_bills(self):
        """Gets the outstanding_bills of this OutstandingClientBalance.

        Bill

        :return: The outstanding_bills of this OutstandingClientBalance.
        :rtype: List[BillBase]
        """
        return self._outstanding_bills

    @outstanding_bills.setter
    def outstanding_bills(self, outstanding_bills):
        """Sets the outstanding_bills of this OutstandingClientBalance.

        Bill

        :param outstanding_bills: The outstanding_bills of this OutstandingClientBalance.
        :type outstanding_bills: List[BillBase]
        """

        self._outstanding_bills = outstanding_bills

    @property
    def contact(self):
        """Gets the contact of this OutstandingClientBalance.


        :return: The contact of this OutstandingClientBalance.
        :rtype: ContactBase
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this OutstandingClientBalance.


        :param contact: The contact of this OutstandingClientBalance.
        :type contact: ContactBase
        """

        self._contact = contact

    @property
    def currency(self):
        """Gets the currency of this OutstandingClientBalance.


        :return: The currency of this OutstandingClientBalance.
        :rtype: CurrencyBase
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this OutstandingClientBalance.


        :param currency: The currency of this OutstandingClientBalance.
        :type currency: CurrencyBase
        """

        self._currency = currency
