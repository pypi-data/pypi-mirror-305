# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactUpdateRequestDataPhoneNumbersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str='Other', number: str=None, default_number: bool=None, id: int=None, destroy: bool=None):
        """ContactUpdateRequestDataPhoneNumbersInner - a model defined in OpenAPI

        :param name: The name of this ContactUpdateRequestDataPhoneNumbersInner.
        :param number: The number of this ContactUpdateRequestDataPhoneNumbersInner.
        :param default_number: The default_number of this ContactUpdateRequestDataPhoneNumbersInner.
        :param id: The id of this ContactUpdateRequestDataPhoneNumbersInner.
        :param destroy: The destroy of this ContactUpdateRequestDataPhoneNumbersInner.
        """
        self.openapi_types = {
            'name': str,
            'number': str,
            'default_number': bool,
            'id': int,
            'destroy': bool
        }

        self.attribute_map = {
            'name': 'name',
            'number': 'number',
            'default_number': 'default_number',
            'id': 'id',
            'destroy': '_destroy'
        }

        self._name = name
        self._number = number
        self._default_number = default_number
        self._id = id
        self._destroy = destroy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactUpdateRequestDataPhoneNumbersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact_update_request_data_phone_numbers_inner of this ContactUpdateRequestDataPhoneNumbersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ContactUpdateRequestDataPhoneNumbersInner.

        Name of the PhoneNumber.

        :return: The name of this ContactUpdateRequestDataPhoneNumbersInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContactUpdateRequestDataPhoneNumbersInner.

        Name of the PhoneNumber.

        :param name: The name of this ContactUpdateRequestDataPhoneNumbersInner.
        :type name: str
        """
        allowed_values = ["Work", "Home", "Mobile", "Fax", "Pager", "Skype", "Other"]  # noqa: E501
        if name not in allowed_values:
            raise ValueError(
                "Invalid value for `name` ({0}), must be one of {1}"
                .format(name, allowed_values)
            )

        self._name = name

    @property
    def number(self):
        """Gets the number of this ContactUpdateRequestDataPhoneNumbersInner.

        Phone number.

        :return: The number of this ContactUpdateRequestDataPhoneNumbersInner.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this ContactUpdateRequestDataPhoneNumbersInner.

        Phone number.

        :param number: The number of this ContactUpdateRequestDataPhoneNumbersInner.
        :type number: str
        """

        self._number = number

    @property
    def default_number(self):
        """Gets the default_number of this ContactUpdateRequestDataPhoneNumbersInner.

        Whether or not the PhoneNumber should be the default number for the Contact.

        :return: The default_number of this ContactUpdateRequestDataPhoneNumbersInner.
        :rtype: bool
        """
        return self._default_number

    @default_number.setter
    def default_number(self, default_number):
        """Sets the default_number of this ContactUpdateRequestDataPhoneNumbersInner.

        Whether or not the PhoneNumber should be the default number for the Contact.

        :param default_number: The default_number of this ContactUpdateRequestDataPhoneNumbersInner.
        :type default_number: bool
        """

        self._default_number = default_number

    @property
    def id(self):
        """Gets the id of this ContactUpdateRequestDataPhoneNumbersInner.

        The unique identifier for a single PhoneNumber associated with the Contact. The keyword `null` is not valid for this field.

        :return: The id of this ContactUpdateRequestDataPhoneNumbersInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContactUpdateRequestDataPhoneNumbersInner.

        The unique identifier for a single PhoneNumber associated with the Contact. The keyword `null` is not valid for this field.

        :param id: The id of this ContactUpdateRequestDataPhoneNumbersInner.
        :type id: int
        """

        self._id = id

    @property
    def destroy(self):
        """Gets the destroy of this ContactUpdateRequestDataPhoneNumbersInner.

        The destroy flag. If the flag is set to `true` and the unique identifier of the associated PhoneNumber is present, the PhoneNumber is deleted from the Contact.

        :return: The destroy of this ContactUpdateRequestDataPhoneNumbersInner.
        :rtype: bool
        """
        return self._destroy

    @destroy.setter
    def destroy(self, destroy):
        """Sets the destroy of this ContactUpdateRequestDataPhoneNumbersInner.

        The destroy flag. If the flag is set to `true` and the unique identifier of the associated PhoneNumber is present, the PhoneNumber is deleted from the Contact.

        :param destroy: The destroy of this ContactUpdateRequestDataPhoneNumbersInner.
        :type destroy: bool
        """

        self._destroy = destroy
