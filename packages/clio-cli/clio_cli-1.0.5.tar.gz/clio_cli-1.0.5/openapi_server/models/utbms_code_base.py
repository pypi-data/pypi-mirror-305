# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UtbmsCodeBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, name: str=None, code: str=None, description: str=None, type: str=None, utbms_set_id: int=None, created_at: datetime=None, updated_at: datetime=None):
        """UtbmsCodeBase - a model defined in OpenAPI

        :param id: The id of this UtbmsCodeBase.
        :param etag: The etag of this UtbmsCodeBase.
        :param name: The name of this UtbmsCodeBase.
        :param code: The code of this UtbmsCodeBase.
        :param description: The description of this UtbmsCodeBase.
        :param type: The type of this UtbmsCodeBase.
        :param utbms_set_id: The utbms_set_id of this UtbmsCodeBase.
        :param created_at: The created_at of this UtbmsCodeBase.
        :param updated_at: The updated_at of this UtbmsCodeBase.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            'name': str,
            'code': str,
            'description': str,
            'type': str,
            'utbms_set_id': int,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            'name': 'name',
            'code': 'code',
            'description': 'description',
            'type': 'type',
            'utbms_set_id': 'utbms_set_id',
            'created_at': 'created_at',
            'updated_at': 'updated_at'
        }

        self._id = id
        self._etag = etag
        self._name = name
        self._code = code
        self._description = description
        self._type = type
        self._utbms_set_id = utbms_set_id
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UtbmsCodeBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UtbmsCode_base of this UtbmsCodeBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UtbmsCodeBase.

        Unique identifier for the *UtbmsCode*

        :return: The id of this UtbmsCodeBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UtbmsCodeBase.

        Unique identifier for the *UtbmsCode*

        :param id: The id of this UtbmsCodeBase.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this UtbmsCodeBase.

        ETag for the *UtbmsCode*

        :return: The etag of this UtbmsCodeBase.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this UtbmsCodeBase.

        ETag for the *UtbmsCode*

        :param etag: The etag of this UtbmsCodeBase.
        :type etag: str
        """

        self._etag = etag

    @property
    def name(self):
        """Gets the name of this UtbmsCodeBase.

        The name of the *UtbmsCode*

        :return: The name of this UtbmsCodeBase.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UtbmsCodeBase.

        The name of the *UtbmsCode*

        :param name: The name of this UtbmsCodeBase.
        :type name: str
        """

        self._name = name

    @property
    def code(self):
        """Gets the code of this UtbmsCodeBase.

        The UTBMS code for the *UtbmsCode*

        :return: The code of this UtbmsCodeBase.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this UtbmsCodeBase.

        The UTBMS code for the *UtbmsCode*

        :param code: The code of this UtbmsCodeBase.
        :type code: str
        """

        self._code = code

    @property
    def description(self):
        """Gets the description of this UtbmsCodeBase.

        The UTBMS description for the *UtbmsCode*

        :return: The description of this UtbmsCodeBase.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UtbmsCodeBase.

        The UTBMS description for the *UtbmsCode*

        :param description: The description of this UtbmsCodeBase.
        :type description: str
        """

        self._description = description

    @property
    def type(self):
        """Gets the type of this UtbmsCodeBase.

        The type of the *UtbmsCode*

        :return: The type of this UtbmsCodeBase.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UtbmsCodeBase.

        The type of the *UtbmsCode*

        :param type: The type of this UtbmsCodeBase.
        :type type: str
        """
        allowed_values = ["UtbmsTask", "UtbmsExpense", "UtbmsActivity"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def utbms_set_id(self):
        """Gets the utbms_set_id of this UtbmsCodeBase.

        Set id for the *UtbmsCode*

        :return: The utbms_set_id of this UtbmsCodeBase.
        :rtype: int
        """
        return self._utbms_set_id

    @utbms_set_id.setter
    def utbms_set_id(self, utbms_set_id):
        """Sets the utbms_set_id of this UtbmsCodeBase.

        Set id for the *UtbmsCode*

        :param utbms_set_id: The utbms_set_id of this UtbmsCodeBase.
        :type utbms_set_id: int
        """

        self._utbms_set_id = utbms_set_id

    @property
    def created_at(self):
        """Gets the created_at of this UtbmsCodeBase.

        The time the *UtbmsCode* was created (as a ISO-8601 timestamp)

        :return: The created_at of this UtbmsCodeBase.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this UtbmsCodeBase.

        The time the *UtbmsCode* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this UtbmsCodeBase.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this UtbmsCodeBase.

        The time the *UtbmsCode* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this UtbmsCodeBase.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this UtbmsCodeBase.

        The time the *UtbmsCode* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this UtbmsCodeBase.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
