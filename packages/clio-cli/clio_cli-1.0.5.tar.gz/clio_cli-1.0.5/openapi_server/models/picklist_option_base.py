# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PicklistOptionBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, created_at: datetime=None, updated_at: datetime=None, option: str=None, deleted_at: datetime=None):
        """PicklistOptionBase - a model defined in OpenAPI

        :param id: The id of this PicklistOptionBase.
        :param etag: The etag of this PicklistOptionBase.
        :param created_at: The created_at of this PicklistOptionBase.
        :param updated_at: The updated_at of this PicklistOptionBase.
        :param option: The option of this PicklistOptionBase.
        :param deleted_at: The deleted_at of this PicklistOptionBase.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            'created_at': datetime,
            'updated_at': datetime,
            'option': str,
            'deleted_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'option': 'option',
            'deleted_at': 'deleted_at'
        }

        self._id = id
        self._etag = etag
        self._created_at = created_at
        self._updated_at = updated_at
        self._option = option
        self._deleted_at = deleted_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PicklistOptionBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PicklistOption_base of this PicklistOptionBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this PicklistOptionBase.

        Unique identifier for the *PicklistOption*

        :return: The id of this PicklistOptionBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PicklistOptionBase.

        Unique identifier for the *PicklistOption*

        :param id: The id of this PicklistOptionBase.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this PicklistOptionBase.

        ETag for the *PicklistOption*

        :return: The etag of this PicklistOptionBase.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this PicklistOptionBase.

        ETag for the *PicklistOption*

        :param etag: The etag of this PicklistOptionBase.
        :type etag: str
        """

        self._etag = etag

    @property
    def created_at(self):
        """Gets the created_at of this PicklistOptionBase.

        The time the *PicklistOption* was created (as a ISO-8601 timestamp)

        :return: The created_at of this PicklistOptionBase.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PicklistOptionBase.

        The time the *PicklistOption* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this PicklistOptionBase.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this PicklistOptionBase.

        The time the *PicklistOption* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this PicklistOptionBase.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PicklistOptionBase.

        The time the *PicklistOption* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this PicklistOptionBase.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def option(self):
        """Gets the option of this PicklistOptionBase.

        The value of the *PicklistOption*

        :return: The option of this PicklistOptionBase.
        :rtype: str
        """
        return self._option

    @option.setter
    def option(self, option):
        """Sets the option of this PicklistOptionBase.

        The value of the *PicklistOption*

        :param option: The option of this PicklistOptionBase.
        :type option: str
        """

        self._option = option

    @property
    def deleted_at(self):
        """Gets the deleted_at of this PicklistOptionBase.

        The time the *PicklistOption* was deleted (as a ISO-8601 timestamp)

        :return: The deleted_at of this PicklistOptionBase.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this PicklistOptionBase.

        The time the *PicklistOption* was deleted (as a ISO-8601 timestamp)

        :param deleted_at: The deleted_at of this PicklistOptionBase.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at
