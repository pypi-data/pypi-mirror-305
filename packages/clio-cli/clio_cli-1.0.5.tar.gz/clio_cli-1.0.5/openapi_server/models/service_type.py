# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, etag: str=None, created_at: datetime=None, updated_at: datetime=None, system_id: int=None, description: str=None, default: bool=None):
        """ServiceType - a model defined in OpenAPI

        :param id: The id of this ServiceType.
        :param etag: The etag of this ServiceType.
        :param created_at: The created_at of this ServiceType.
        :param updated_at: The updated_at of this ServiceType.
        :param system_id: The system_id of this ServiceType.
        :param description: The description of this ServiceType.
        :param default: The default of this ServiceType.
        """
        self.openapi_types = {
            'id': int,
            'etag': str,
            'created_at': datetime,
            'updated_at': datetime,
            'system_id': int,
            'description': str,
            'default': bool
        }

        self.attribute_map = {
            'id': 'id',
            'etag': 'etag',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'system_id': 'system_id',
            'description': 'description',
            'default': 'default'
        }

        self._id = id
        self._etag = etag
        self._created_at = created_at
        self._updated_at = updated_at
        self._system_id = system_id
        self._description = description
        self._default = default

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceType of this ServiceType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ServiceType.

        Unique identifier for the *ServiceType*

        :return: The id of this ServiceType.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServiceType.

        Unique identifier for the *ServiceType*

        :param id: The id of this ServiceType.
        :type id: int
        """

        self._id = id

    @property
    def etag(self):
        """Gets the etag of this ServiceType.

        ETag for the *ServiceType*

        :return: The etag of this ServiceType.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ServiceType.

        ETag for the *ServiceType*

        :param etag: The etag of this ServiceType.
        :type etag: str
        """

        self._etag = etag

    @property
    def created_at(self):
        """Gets the created_at of this ServiceType.

        The time the *ServiceType* was created (as a ISO-8601 timestamp)

        :return: The created_at of this ServiceType.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ServiceType.

        The time the *ServiceType* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this ServiceType.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this ServiceType.

        The time the *ServiceType* was last updated (as a ISO-8601 timestamp)

        :return: The updated_at of this ServiceType.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ServiceType.

        The time the *ServiceType* was last updated (as a ISO-8601 timestamp)

        :param updated_at: The updated_at of this ServiceType.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def system_id(self):
        """Gets the system_id of this ServiceType.

        Server ID

        :return: The system_id of this ServiceType.
        :rtype: int
        """
        return self._system_id

    @system_id.setter
    def system_id(self, system_id):
        """Sets the system_id of this ServiceType.

        Server ID

        :param system_id: The system_id of this ServiceType.
        :type system_id: int
        """

        self._system_id = system_id

    @property
    def description(self):
        """Gets the description of this ServiceType.

        A detailed description of the *ServiceType*

        :return: The description of this ServiceType.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ServiceType.

        A detailed description of the *ServiceType*

        :param description: The description of this ServiceType.
        :type description: str
        """

        self._description = description

    @property
    def default(self):
        """Gets the default of this ServiceType.

        Whether *ServiceType* is default for the current user

        :return: The default of this ServiceType.
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this ServiceType.

        Whether *ServiceType* is default for the current user

        :param default: The default of this ServiceType.
        :type default: bool
        """

        self._default = default
