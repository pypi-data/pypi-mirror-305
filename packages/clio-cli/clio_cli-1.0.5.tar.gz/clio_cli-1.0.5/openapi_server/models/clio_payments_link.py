# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bank_account_base import BankAccountBase
from openapi_server.models.bill_base import BillBase
from openapi_server.models.clio_payments_payment_base import ClioPaymentsPaymentBase
from openapi_server.models.contact_base import ContactBase
from openapi_server import util


class ClioPaymentsLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, amount: float=None, created_at: datetime=None, currency: str=None, description: str=None, email_address: str=None, etag: str=None, expires_at: datetime=None, id: int=None, is_allocated_as_revenue: bool=None, redirect_url: str=None, url: str=None, bank_account: BankAccountBase=None, bill: BillBase=None, clio_payments_payment: ClioPaymentsPaymentBase=None, contact: ContactBase=None, destination_account: BankAccountBase=None, destination_contact: ContactBase=None):
        """ClioPaymentsLink - a model defined in OpenAPI

        :param active: The active of this ClioPaymentsLink.
        :param amount: The amount of this ClioPaymentsLink.
        :param created_at: The created_at of this ClioPaymentsLink.
        :param currency: The currency of this ClioPaymentsLink.
        :param description: The description of this ClioPaymentsLink.
        :param email_address: The email_address of this ClioPaymentsLink.
        :param etag: The etag of this ClioPaymentsLink.
        :param expires_at: The expires_at of this ClioPaymentsLink.
        :param id: The id of this ClioPaymentsLink.
        :param is_allocated_as_revenue: The is_allocated_as_revenue of this ClioPaymentsLink.
        :param redirect_url: The redirect_url of this ClioPaymentsLink.
        :param url: The url of this ClioPaymentsLink.
        :param bank_account: The bank_account of this ClioPaymentsLink.
        :param bill: The bill of this ClioPaymentsLink.
        :param clio_payments_payment: The clio_payments_payment of this ClioPaymentsLink.
        :param contact: The contact of this ClioPaymentsLink.
        :param destination_account: The destination_account of this ClioPaymentsLink.
        :param destination_contact: The destination_contact of this ClioPaymentsLink.
        """
        self.openapi_types = {
            'active': bool,
            'amount': float,
            'created_at': datetime,
            'currency': str,
            'description': str,
            'email_address': str,
            'etag': str,
            'expires_at': datetime,
            'id': int,
            'is_allocated_as_revenue': bool,
            'redirect_url': str,
            'url': str,
            'bank_account': BankAccountBase,
            'bill': BillBase,
            'clio_payments_payment': ClioPaymentsPaymentBase,
            'contact': ContactBase,
            'destination_account': BankAccountBase,
            'destination_contact': ContactBase
        }

        self.attribute_map = {
            'active': 'active',
            'amount': 'amount',
            'created_at': 'created_at',
            'currency': 'currency',
            'description': 'description',
            'email_address': 'email_address',
            'etag': 'etag',
            'expires_at': 'expires_at',
            'id': 'id',
            'is_allocated_as_revenue': 'is_allocated_as_revenue',
            'redirect_url': 'redirect_url',
            'url': 'url',
            'bank_account': 'bank_account',
            'bill': 'bill',
            'clio_payments_payment': 'clio_payments_payment',
            'contact': 'contact',
            'destination_account': 'destination_account',
            'destination_contact': 'destination_contact'
        }

        self._active = active
        self._amount = amount
        self._created_at = created_at
        self._currency = currency
        self._description = description
        self._email_address = email_address
        self._etag = etag
        self._expires_at = expires_at
        self._id = id
        self._is_allocated_as_revenue = is_allocated_as_revenue
        self._redirect_url = redirect_url
        self._url = url
        self._bank_account = bank_account
        self._bill = bill
        self._clio_payments_payment = clio_payments_payment
        self._contact = contact
        self._destination_account = destination_account
        self._destination_contact = destination_contact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClioPaymentsLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClioPaymentsLink of this ClioPaymentsLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this ClioPaymentsLink.

        Whether or not the payment link is active.

        :return: The active of this ClioPaymentsLink.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this ClioPaymentsLink.

        Whether or not the payment link is active.

        :param active: The active of this ClioPaymentsLink.
        :type active: bool
        """

        self._active = active

    @property
    def amount(self):
        """Gets the amount of this ClioPaymentsLink.

        The defined amount of the payment link, if set.

        :return: The amount of this ClioPaymentsLink.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this ClioPaymentsLink.

        The defined amount of the payment link, if set.

        :param amount: The amount of this ClioPaymentsLink.
        :type amount: float
        """

        self._amount = amount

    @property
    def created_at(self):
        """Gets the created_at of this ClioPaymentsLink.

        The time the *ClioPaymentsLink* was created (as a ISO-8601 timestamp)

        :return: The created_at of this ClioPaymentsLink.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ClioPaymentsLink.

        The time the *ClioPaymentsLink* was created (as a ISO-8601 timestamp)

        :param created_at: The created_at of this ClioPaymentsLink.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def currency(self):
        """Gets the currency of this ClioPaymentsLink.

        The currency the payment link will collect.

        :return: The currency of this ClioPaymentsLink.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this ClioPaymentsLink.

        The currency the payment link will collect.

        :param currency: The currency of this ClioPaymentsLink.
        :type currency: str
        """

        self._currency = currency

    @property
    def description(self):
        """Gets the description of this ClioPaymentsLink.

        The defined description of the payment link, if set.

        :return: The description of this ClioPaymentsLink.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ClioPaymentsLink.

        The defined description of the payment link, if set.

        :param description: The description of this ClioPaymentsLink.
        :type description: str
        """

        self._description = description

    @property
    def email_address(self):
        """Gets the email_address of this ClioPaymentsLink.

        The email address to pre-fill the field on the the payment link, if set.

        :return: The email_address of this ClioPaymentsLink.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this ClioPaymentsLink.

        The email address to pre-fill the field on the the payment link, if set.

        :param email_address: The email_address of this ClioPaymentsLink.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def etag(self):
        """Gets the etag of this ClioPaymentsLink.

        ETag for the *ClioPaymentsLink*

        :return: The etag of this ClioPaymentsLink.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ClioPaymentsLink.

        ETag for the *ClioPaymentsLink*

        :param etag: The etag of this ClioPaymentsLink.
        :type etag: str
        """

        self._etag = etag

    @property
    def expires_at(self):
        """Gets the expires_at of this ClioPaymentsLink.

        The ISO 8601 date and time the payment link will expire.

        :return: The expires_at of this ClioPaymentsLink.
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this ClioPaymentsLink.

        The ISO 8601 date and time the payment link will expire.

        :param expires_at: The expires_at of this ClioPaymentsLink.
        :type expires_at: datetime
        """

        self._expires_at = expires_at

    @property
    def id(self):
        """Gets the id of this ClioPaymentsLink.

        Unique identifier for the *ClioPaymentsLink*

        :return: The id of this ClioPaymentsLink.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ClioPaymentsLink.

        Unique identifier for the *ClioPaymentsLink*

        :param id: The id of this ClioPaymentsLink.
        :type id: int
        """

        self._id = id

    @property
    def is_allocated_as_revenue(self):
        """Gets the is_allocated_as_revenue of this ClioPaymentsLink.

        Whether the payment link is allocated as revenue.

        :return: The is_allocated_as_revenue of this ClioPaymentsLink.
        :rtype: bool
        """
        return self._is_allocated_as_revenue

    @is_allocated_as_revenue.setter
    def is_allocated_as_revenue(self, is_allocated_as_revenue):
        """Sets the is_allocated_as_revenue of this ClioPaymentsLink.

        Whether the payment link is allocated as revenue.

        :param is_allocated_as_revenue: The is_allocated_as_revenue of this ClioPaymentsLink.
        :type is_allocated_as_revenue: bool
        """

        self._is_allocated_as_revenue = is_allocated_as_revenue

    @property
    def redirect_url(self):
        """Gets the redirect_url of this ClioPaymentsLink.

        The URL to redirect the client to after the payment has been made.

        :return: The redirect_url of this ClioPaymentsLink.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this ClioPaymentsLink.

        The URL to redirect the client to after the payment has been made.

        :param redirect_url: The redirect_url of this ClioPaymentsLink.
        :type redirect_url: str
        """

        self._redirect_url = redirect_url

    @property
    def url(self):
        """Gets the url of this ClioPaymentsLink.

        The URL of the payment link.

        :return: The url of this ClioPaymentsLink.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ClioPaymentsLink.

        The URL of the payment link.

        :param url: The url of this ClioPaymentsLink.
        :type url: str
        """

        self._url = url

    @property
    def bank_account(self):
        """Gets the bank_account of this ClioPaymentsLink.


        :return: The bank_account of this ClioPaymentsLink.
        :rtype: BankAccountBase
        """
        return self._bank_account

    @bank_account.setter
    def bank_account(self, bank_account):
        """Sets the bank_account of this ClioPaymentsLink.


        :param bank_account: The bank_account of this ClioPaymentsLink.
        :type bank_account: BankAccountBase
        """

        self._bank_account = bank_account

    @property
    def bill(self):
        """Gets the bill of this ClioPaymentsLink.


        :return: The bill of this ClioPaymentsLink.
        :rtype: BillBase
        """
        return self._bill

    @bill.setter
    def bill(self, bill):
        """Sets the bill of this ClioPaymentsLink.


        :param bill: The bill of this ClioPaymentsLink.
        :type bill: BillBase
        """

        self._bill = bill

    @property
    def clio_payments_payment(self):
        """Gets the clio_payments_payment of this ClioPaymentsLink.


        :return: The clio_payments_payment of this ClioPaymentsLink.
        :rtype: ClioPaymentsPaymentBase
        """
        return self._clio_payments_payment

    @clio_payments_payment.setter
    def clio_payments_payment(self, clio_payments_payment):
        """Sets the clio_payments_payment of this ClioPaymentsLink.


        :param clio_payments_payment: The clio_payments_payment of this ClioPaymentsLink.
        :type clio_payments_payment: ClioPaymentsPaymentBase
        """

        self._clio_payments_payment = clio_payments_payment

    @property
    def contact(self):
        """Gets the contact of this ClioPaymentsLink.


        :return: The contact of this ClioPaymentsLink.
        :rtype: ContactBase
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this ClioPaymentsLink.


        :param contact: The contact of this ClioPaymentsLink.
        :type contact: ContactBase
        """

        self._contact = contact

    @property
    def destination_account(self):
        """Gets the destination_account of this ClioPaymentsLink.


        :return: The destination_account of this ClioPaymentsLink.
        :rtype: BankAccountBase
        """
        return self._destination_account

    @destination_account.setter
    def destination_account(self, destination_account):
        """Sets the destination_account of this ClioPaymentsLink.


        :param destination_account: The destination_account of this ClioPaymentsLink.
        :type destination_account: BankAccountBase
        """

        self._destination_account = destination_account

    @property
    def destination_contact(self):
        """Gets the destination_contact of this ClioPaymentsLink.


        :return: The destination_contact of this ClioPaymentsLink.
        :rtype: ContactBase
        """
        return self._destination_contact

    @destination_contact.setter
    def destination_contact(self, destination_contact):
        """Sets the destination_contact of this ClioPaymentsLink.


        :param destination_contact: The destination_contact of this ClioPaymentsLink.
        :type destination_contact: ContactBase
        """

        self._destination_contact = destination_contact
