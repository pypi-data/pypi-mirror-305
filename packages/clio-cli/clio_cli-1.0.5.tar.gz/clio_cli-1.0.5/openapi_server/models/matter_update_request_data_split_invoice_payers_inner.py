# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatterUpdateRequestDataSplitInvoicePayersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_id: int=None, id: int=None, send_to_bill_recipients: bool=None, split_portion: float=None, destroy: bool=None):
        """MatterUpdateRequestDataSplitInvoicePayersInner - a model defined in OpenAPI

        :param contact_id: The contact_id of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :param id: The id of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :param send_to_bill_recipients: The send_to_bill_recipients of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :param split_portion: The split_portion of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :param destroy: The destroy of this MatterUpdateRequestDataSplitInvoicePayersInner.
        """
        self.openapi_types = {
            'contact_id': int,
            'id': int,
            'send_to_bill_recipients': bool,
            'split_portion': float,
            'destroy': bool
        }

        self.attribute_map = {
            'contact_id': 'contact_id',
            'id': 'id',
            'send_to_bill_recipients': 'send_to_bill_recipients',
            'split_portion': 'split_portion',
            'destroy': '_destroy'
        }

        self._contact_id = contact_id
        self._id = id
        self._send_to_bill_recipients = send_to_bill_recipients
        self._split_portion = split_portion
        self._destroy = destroy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatterUpdateRequestDataSplitInvoicePayersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Matter_update_request_data_split_invoice_payers_inner of this MatterUpdateRequestDataSplitInvoicePayersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_id(self):
        """Gets the contact_id of this MatterUpdateRequestDataSplitInvoicePayersInner.

        Contact id for the matter payer.

        :return: The contact_id of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :rtype: int
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this MatterUpdateRequestDataSplitInvoicePayersInner.

        Contact id for the matter payer.

        :param contact_id: The contact_id of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :type contact_id: int
        """

        self._contact_id = contact_id

    @property
    def id(self):
        """Gets the id of this MatterUpdateRequestDataSplitInvoicePayersInner.

        The id for the payer.

        :return: The id of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MatterUpdateRequestDataSplitInvoicePayersInner.

        The id for the payer.

        :param id: The id of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :type id: int
        """

        self._id = id

    @property
    def send_to_bill_recipients(self):
        """Gets the send_to_bill_recipients of this MatterUpdateRequestDataSplitInvoicePayersInner.

        Boolean indication to send a split invoice to all bill recipients.

        :return: The send_to_bill_recipients of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :rtype: bool
        """
        return self._send_to_bill_recipients

    @send_to_bill_recipients.setter
    def send_to_bill_recipients(self, send_to_bill_recipients):
        """Sets the send_to_bill_recipients of this MatterUpdateRequestDataSplitInvoicePayersInner.

        Boolean indication to send a split invoice to all bill recipients.

        :param send_to_bill_recipients: The send_to_bill_recipients of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :type send_to_bill_recipients: bool
        """

        self._send_to_bill_recipients = send_to_bill_recipients

    @property
    def split_portion(self):
        """Gets the split_portion of this MatterUpdateRequestDataSplitInvoicePayersInner.

        The split portion for the payer.

        :return: The split_portion of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :rtype: float
        """
        return self._split_portion

    @split_portion.setter
    def split_portion(self, split_portion):
        """Sets the split_portion of this MatterUpdateRequestDataSplitInvoicePayersInner.

        The split portion for the payer.

        :param split_portion: The split_portion of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :type split_portion: float
        """

        self._split_portion = split_portion

    @property
    def destroy(self):
        """Gets the destroy of this MatterUpdateRequestDataSplitInvoicePayersInner.

        If this flag is set to `true`, the split invoice payer will be deleted from the Matter.

        :return: The destroy of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :rtype: bool
        """
        return self._destroy

    @destroy.setter
    def destroy(self, destroy):
        """Sets the destroy of this MatterUpdateRequestDataSplitInvoicePayersInner.

        If this flag is set to `true`, the split invoice payer will be deleted from the Matter.

        :param destroy: The destroy of this MatterUpdateRequestDataSplitInvoicePayersInner.
        :type destroy: bool
        """

        self._destroy = destroy
