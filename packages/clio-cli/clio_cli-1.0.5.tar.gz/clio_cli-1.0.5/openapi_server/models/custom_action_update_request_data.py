# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomActionUpdateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: str=None, target_url: str=None, ui_reference: str=None):
        """CustomActionUpdateRequestData - a model defined in OpenAPI

        :param label: The label of this CustomActionUpdateRequestData.
        :param target_url: The target_url of this CustomActionUpdateRequestData.
        :param ui_reference: The ui_reference of this CustomActionUpdateRequestData.
        """
        self.openapi_types = {
            'label': str,
            'target_url': str,
            'ui_reference': str
        }

        self.attribute_map = {
            'label': 'label',
            'target_url': 'target_url',
            'ui_reference': 'ui_reference'
        }

        self._label = label
        self._target_url = target_url
        self._ui_reference = ui_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomActionUpdateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomAction_update_request_data of this CustomActionUpdateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this CustomActionUpdateRequestData.

        Text label to be displayed on the custom link.

        :return: The label of this CustomActionUpdateRequestData.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this CustomActionUpdateRequestData.

        Text label to be displayed on the custom link.

        :param label: The label of this CustomActionUpdateRequestData.
        :type label: str
        """

        self._label = label

    @property
    def target_url(self):
        """Gets the target_url of this CustomActionUpdateRequestData.

        Target URL which will be opened in a new tab when the user clicks the custom link.

        :return: The target_url of this CustomActionUpdateRequestData.
        :rtype: str
        """
        return self._target_url

    @target_url.setter
    def target_url(self, target_url):
        """Sets the target_url of this CustomActionUpdateRequestData.

        Target URL which will be opened in a new tab when the user clicks the custom link.

        :param target_url: The target_url of this CustomActionUpdateRequestData.
        :type target_url: str
        """

        self._target_url = target_url

    @property
    def ui_reference(self):
        """Gets the ui_reference of this CustomActionUpdateRequestData.

        UI reference location within Clio where the link will be displayed.

        :return: The ui_reference of this CustomActionUpdateRequestData.
        :rtype: str
        """
        return self._ui_reference

    @ui_reference.setter
    def ui_reference(self, ui_reference):
        """Sets the ui_reference of this CustomActionUpdateRequestData.

        UI reference location within Clio where the link will be displayed.

        :param ui_reference: The ui_reference of this CustomActionUpdateRequestData.
        :type ui_reference: str
        """
        allowed_values = ["activities/show", "documents/show", "contacts/show", "matters/show", "folders/show"]  # noqa: E501
        if ui_reference not in allowed_values:
            raise ValueError(
                "Invalid value for `ui_reference` ({0}), must be one of {1}"
                .format(ui_reference, allowed_values)
            )

        self._ui_reference = ui_reference
