# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_create_request_data_addresses_inner import ContactCreateRequestDataAddressesInner
from openapi_server.models.contact_create_request_data_avatar import ContactCreateRequestDataAvatar
from openapi_server.models.contact_create_request_data_co_counsel_rate import ContactCreateRequestDataCoCounselRate
from openapi_server.models.contact_create_request_data_company import ContactCreateRequestDataCompany
from openapi_server.models.contact_create_request_data_custom_field_set_associations_inner import ContactCreateRequestDataCustomFieldSetAssociationsInner
from openapi_server.models.contact_create_request_data_custom_field_values_inner import ContactCreateRequestDataCustomFieldValuesInner
from openapi_server.models.contact_create_request_data_email_addresses_inner import ContactCreateRequestDataEmailAddressesInner
from openapi_server.models.contact_create_request_data_instant_messengers_inner import ContactCreateRequestDataInstantMessengersInner
from openapi_server.models.contact_create_request_data_phone_numbers_inner import ContactCreateRequestDataPhoneNumbersInner
from openapi_server.models.contact_create_request_data_web_sites_inner import ContactCreateRequestDataWebSitesInner
from openapi_server import util


class ContactCreateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addresses: List[ContactCreateRequestDataAddressesInner]=None, avatar: ContactCreateRequestDataAvatar=None, clio_connect_email: str=None, co_counsel_rate: ContactCreateRequestDataCoCounselRate=None, company: ContactCreateRequestDataCompany=None, custom_field_set_associations: List[ContactCreateRequestDataCustomFieldSetAssociationsInner]=None, custom_field_values: List[ContactCreateRequestDataCustomFieldValuesInner]=None, date_of_birth: date=None, email_addresses: List[ContactCreateRequestDataEmailAddressesInner]=None, first_name: str=None, instant_messengers: List[ContactCreateRequestDataInstantMessengersInner]=None, last_name: str=None, ledes_client_id: str=None, middle_name: str=None, name: str=None, phone_numbers: List[ContactCreateRequestDataPhoneNumbersInner]=None, prefix: str=None, sales_tax_number: str=None, title: str=None, type: str=None, web_sites: List[ContactCreateRequestDataWebSitesInner]=None):
        """ContactCreateRequestData - a model defined in OpenAPI

        :param addresses: The addresses of this ContactCreateRequestData.
        :param avatar: The avatar of this ContactCreateRequestData.
        :param clio_connect_email: The clio_connect_email of this ContactCreateRequestData.
        :param co_counsel_rate: The co_counsel_rate of this ContactCreateRequestData.
        :param company: The company of this ContactCreateRequestData.
        :param custom_field_set_associations: The custom_field_set_associations of this ContactCreateRequestData.
        :param custom_field_values: The custom_field_values of this ContactCreateRequestData.
        :param date_of_birth: The date_of_birth of this ContactCreateRequestData.
        :param email_addresses: The email_addresses of this ContactCreateRequestData.
        :param first_name: The first_name of this ContactCreateRequestData.
        :param instant_messengers: The instant_messengers of this ContactCreateRequestData.
        :param last_name: The last_name of this ContactCreateRequestData.
        :param ledes_client_id: The ledes_client_id of this ContactCreateRequestData.
        :param middle_name: The middle_name of this ContactCreateRequestData.
        :param name: The name of this ContactCreateRequestData.
        :param phone_numbers: The phone_numbers of this ContactCreateRequestData.
        :param prefix: The prefix of this ContactCreateRequestData.
        :param sales_tax_number: The sales_tax_number of this ContactCreateRequestData.
        :param title: The title of this ContactCreateRequestData.
        :param type: The type of this ContactCreateRequestData.
        :param web_sites: The web_sites of this ContactCreateRequestData.
        """
        self.openapi_types = {
            'addresses': List[ContactCreateRequestDataAddressesInner],
            'avatar': ContactCreateRequestDataAvatar,
            'clio_connect_email': str,
            'co_counsel_rate': ContactCreateRequestDataCoCounselRate,
            'company': ContactCreateRequestDataCompany,
            'custom_field_set_associations': List[ContactCreateRequestDataCustomFieldSetAssociationsInner],
            'custom_field_values': List[ContactCreateRequestDataCustomFieldValuesInner],
            'date_of_birth': date,
            'email_addresses': List[ContactCreateRequestDataEmailAddressesInner],
            'first_name': str,
            'instant_messengers': List[ContactCreateRequestDataInstantMessengersInner],
            'last_name': str,
            'ledes_client_id': str,
            'middle_name': str,
            'name': str,
            'phone_numbers': List[ContactCreateRequestDataPhoneNumbersInner],
            'prefix': str,
            'sales_tax_number': str,
            'title': str,
            'type': str,
            'web_sites': List[ContactCreateRequestDataWebSitesInner]
        }

        self.attribute_map = {
            'addresses': 'addresses',
            'avatar': 'avatar',
            'clio_connect_email': 'clio_connect_email',
            'co_counsel_rate': 'co_counsel_rate',
            'company': 'company',
            'custom_field_set_associations': 'custom_field_set_associations',
            'custom_field_values': 'custom_field_values',
            'date_of_birth': 'date_of_birth',
            'email_addresses': 'email_addresses',
            'first_name': 'first_name',
            'instant_messengers': 'instant_messengers',
            'last_name': 'last_name',
            'ledes_client_id': 'ledes_client_id',
            'middle_name': 'middle_name',
            'name': 'name',
            'phone_numbers': 'phone_numbers',
            'prefix': 'prefix',
            'sales_tax_number': 'sales_tax_number',
            'title': 'title',
            'type': 'type',
            'web_sites': 'web_sites'
        }

        self._addresses = addresses
        self._avatar = avatar
        self._clio_connect_email = clio_connect_email
        self._co_counsel_rate = co_counsel_rate
        self._company = company
        self._custom_field_set_associations = custom_field_set_associations
        self._custom_field_values = custom_field_values
        self._date_of_birth = date_of_birth
        self._email_addresses = email_addresses
        self._first_name = first_name
        self._instant_messengers = instant_messengers
        self._last_name = last_name
        self._ledes_client_id = ledes_client_id
        self._middle_name = middle_name
        self._name = name
        self._phone_numbers = phone_numbers
        self._prefix = prefix
        self._sales_tax_number = sales_tax_number
        self._title = title
        self._type = type
        self._web_sites = web_sites

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactCreateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact_create_request_data of this ContactCreateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addresses(self):
        """Gets the addresses of this ContactCreateRequestData.


        :return: The addresses of this ContactCreateRequestData.
        :rtype: List[ContactCreateRequestDataAddressesInner]
        """
        return self._addresses

    @addresses.setter
    def addresses(self, addresses):
        """Sets the addresses of this ContactCreateRequestData.


        :param addresses: The addresses of this ContactCreateRequestData.
        :type addresses: List[ContactCreateRequestDataAddressesInner]
        """

        self._addresses = addresses

    @property
    def avatar(self):
        """Gets the avatar of this ContactCreateRequestData.


        :return: The avatar of this ContactCreateRequestData.
        :rtype: ContactCreateRequestDataAvatar
        """
        return self._avatar

    @avatar.setter
    def avatar(self, avatar):
        """Sets the avatar of this ContactCreateRequestData.


        :param avatar: The avatar of this ContactCreateRequestData.
        :type avatar: ContactCreateRequestDataAvatar
        """

        self._avatar = avatar

    @property
    def clio_connect_email(self):
        """Gets the clio_connect_email of this ContactCreateRequestData.

        Notifications will be sent to this email when a resource is shared.

        :return: The clio_connect_email of this ContactCreateRequestData.
        :rtype: str
        """
        return self._clio_connect_email

    @clio_connect_email.setter
    def clio_connect_email(self, clio_connect_email):
        """Sets the clio_connect_email of this ContactCreateRequestData.

        Notifications will be sent to this email when a resource is shared.

        :param clio_connect_email: The clio_connect_email of this ContactCreateRequestData.
        :type clio_connect_email: str
        """

        self._clio_connect_email = clio_connect_email

    @property
    def co_counsel_rate(self):
        """Gets the co_counsel_rate of this ContactCreateRequestData.


        :return: The co_counsel_rate of this ContactCreateRequestData.
        :rtype: ContactCreateRequestDataCoCounselRate
        """
        return self._co_counsel_rate

    @co_counsel_rate.setter
    def co_counsel_rate(self, co_counsel_rate):
        """Sets the co_counsel_rate of this ContactCreateRequestData.


        :param co_counsel_rate: The co_counsel_rate of this ContactCreateRequestData.
        :type co_counsel_rate: ContactCreateRequestDataCoCounselRate
        """

        self._co_counsel_rate = co_counsel_rate

    @property
    def company(self):
        """Gets the company of this ContactCreateRequestData.


        :return: The company of this ContactCreateRequestData.
        :rtype: ContactCreateRequestDataCompany
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this ContactCreateRequestData.


        :param company: The company of this ContactCreateRequestData.
        :type company: ContactCreateRequestDataCompany
        """

        self._company = company

    @property
    def custom_field_set_associations(self):
        """Gets the custom_field_set_associations of this ContactCreateRequestData.


        :return: The custom_field_set_associations of this ContactCreateRequestData.
        :rtype: List[ContactCreateRequestDataCustomFieldSetAssociationsInner]
        """
        return self._custom_field_set_associations

    @custom_field_set_associations.setter
    def custom_field_set_associations(self, custom_field_set_associations):
        """Sets the custom_field_set_associations of this ContactCreateRequestData.


        :param custom_field_set_associations: The custom_field_set_associations of this ContactCreateRequestData.
        :type custom_field_set_associations: List[ContactCreateRequestDataCustomFieldSetAssociationsInner]
        """

        self._custom_field_set_associations = custom_field_set_associations

    @property
    def custom_field_values(self):
        """Gets the custom_field_values of this ContactCreateRequestData.


        :return: The custom_field_values of this ContactCreateRequestData.
        :rtype: List[ContactCreateRequestDataCustomFieldValuesInner]
        """
        return self._custom_field_values

    @custom_field_values.setter
    def custom_field_values(self, custom_field_values):
        """Sets the custom_field_values of this ContactCreateRequestData.


        :param custom_field_values: The custom_field_values of this ContactCreateRequestData.
        :type custom_field_values: List[ContactCreateRequestDataCustomFieldValuesInner]
        """

        self._custom_field_values = custom_field_values

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this ContactCreateRequestData.

        Date of birth of the Contact.

        :return: The date_of_birth of this ContactCreateRequestData.
        :rtype: date
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this ContactCreateRequestData.

        Date of birth of the Contact.

        :param date_of_birth: The date_of_birth of this ContactCreateRequestData.
        :type date_of_birth: date
        """

        self._date_of_birth = date_of_birth

    @property
    def email_addresses(self):
        """Gets the email_addresses of this ContactCreateRequestData.


        :return: The email_addresses of this ContactCreateRequestData.
        :rtype: List[ContactCreateRequestDataEmailAddressesInner]
        """
        return self._email_addresses

    @email_addresses.setter
    def email_addresses(self, email_addresses):
        """Sets the email_addresses of this ContactCreateRequestData.


        :param email_addresses: The email_addresses of this ContactCreateRequestData.
        :type email_addresses: List[ContactCreateRequestDataEmailAddressesInner]
        """

        self._email_addresses = email_addresses

    @property
    def first_name(self):
        """Gets the first_name of this ContactCreateRequestData.

        First name of the Contact.

        :return: The first_name of this ContactCreateRequestData.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ContactCreateRequestData.

        First name of the Contact.

        :param first_name: The first_name of this ContactCreateRequestData.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def instant_messengers(self):
        """Gets the instant_messengers of this ContactCreateRequestData.


        :return: The instant_messengers of this ContactCreateRequestData.
        :rtype: List[ContactCreateRequestDataInstantMessengersInner]
        """
        return self._instant_messengers

    @instant_messengers.setter
    def instant_messengers(self, instant_messengers):
        """Sets the instant_messengers of this ContactCreateRequestData.


        :param instant_messengers: The instant_messengers of this ContactCreateRequestData.
        :type instant_messengers: List[ContactCreateRequestDataInstantMessengersInner]
        """

        self._instant_messengers = instant_messengers

    @property
    def last_name(self):
        """Gets the last_name of this ContactCreateRequestData.

        Last name of the Contact.

        :return: The last_name of this ContactCreateRequestData.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ContactCreateRequestData.

        Last name of the Contact.

        :param last_name: The last_name of this ContactCreateRequestData.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def ledes_client_id(self):
        """Gets the ledes_client_id of this ContactCreateRequestData.

        LEDES client id of the Contact.

        :return: The ledes_client_id of this ContactCreateRequestData.
        :rtype: str
        """
        return self._ledes_client_id

    @ledes_client_id.setter
    def ledes_client_id(self, ledes_client_id):
        """Sets the ledes_client_id of this ContactCreateRequestData.

        LEDES client id of the Contact.

        :param ledes_client_id: The ledes_client_id of this ContactCreateRequestData.
        :type ledes_client_id: str
        """

        self._ledes_client_id = ledes_client_id

    @property
    def middle_name(self):
        """Gets the middle_name of this ContactCreateRequestData.

        Middle name of the Contact.

        :return: The middle_name of this ContactCreateRequestData.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this ContactCreateRequestData.

        Middle name of the Contact.

        :param middle_name: The middle_name of this ContactCreateRequestData.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def name(self):
        """Gets the name of this ContactCreateRequestData.

        Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name).

        :return: The name of this ContactCreateRequestData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContactCreateRequestData.

        Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name).

        :param name: The name of this ContactCreateRequestData.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def phone_numbers(self):
        """Gets the phone_numbers of this ContactCreateRequestData.


        :return: The phone_numbers of this ContactCreateRequestData.
        :rtype: List[ContactCreateRequestDataPhoneNumbersInner]
        """
        return self._phone_numbers

    @phone_numbers.setter
    def phone_numbers(self, phone_numbers):
        """Sets the phone_numbers of this ContactCreateRequestData.


        :param phone_numbers: The phone_numbers of this ContactCreateRequestData.
        :type phone_numbers: List[ContactCreateRequestDataPhoneNumbersInner]
        """

        self._phone_numbers = phone_numbers

    @property
    def prefix(self):
        """Gets the prefix of this ContactCreateRequestData.

        Personal title of the Contact.

        :return: The prefix of this ContactCreateRequestData.
        :rtype: str
        """
        return self._prefix

    @prefix.setter
    def prefix(self, prefix):
        """Sets the prefix of this ContactCreateRequestData.

        Personal title of the Contact.

        :param prefix: The prefix of this ContactCreateRequestData.
        :type prefix: str
        """

        self._prefix = prefix

    @property
    def sales_tax_number(self):
        """Gets the sales_tax_number of this ContactCreateRequestData.

        A contact's sales tax number will appear on invoices generated for the Contact.

        :return: The sales_tax_number of this ContactCreateRequestData.
        :rtype: str
        """
        return self._sales_tax_number

    @sales_tax_number.setter
    def sales_tax_number(self, sales_tax_number):
        """Sets the sales_tax_number of this ContactCreateRequestData.

        A contact's sales tax number will appear on invoices generated for the Contact.

        :param sales_tax_number: The sales_tax_number of this ContactCreateRequestData.
        :type sales_tax_number: str
        """

        self._sales_tax_number = sales_tax_number

    @property
    def title(self):
        """Gets the title of this ContactCreateRequestData.

        Professional title of the Contact.

        :return: The title of this ContactCreateRequestData.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ContactCreateRequestData.

        Professional title of the Contact.

        :param title: The title of this ContactCreateRequestData.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this ContactCreateRequestData.

        Type of the Contact.

        :return: The type of this ContactCreateRequestData.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ContactCreateRequestData.

        Type of the Contact.

        :param type: The type of this ContactCreateRequestData.
        :type type: str
        """
        allowed_values = ["Person", "Company"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def web_sites(self):
        """Gets the web_sites of this ContactCreateRequestData.


        :return: The web_sites of this ContactCreateRequestData.
        :rtype: List[ContactCreateRequestDataWebSitesInner]
        """
        return self._web_sites

    @web_sites.setter
    def web_sites(self, web_sites):
        """Sets the web_sites of this ContactCreateRequestData.


        :param web_sites: The web_sites of this ContactCreateRequestData.
        :type web_sites: List[ContactCreateRequestDataWebSitesInner]
        """

        self._web_sites = web_sites
