# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DamageUpdateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, damage_type: str=None, description: str=None):
        """DamageUpdateRequestData - a model defined in OpenAPI

        :param amount: The amount of this DamageUpdateRequestData.
        :param damage_type: The damage_type of this DamageUpdateRequestData.
        :param description: The description of this DamageUpdateRequestData.
        """
        self.openapi_types = {
            'amount': float,
            'damage_type': str,
            'description': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'damage_type': 'damage_type',
            'description': 'description'
        }

        self._amount = amount
        self._damage_type = damage_type
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DamageUpdateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Damage_update_request_data of this DamageUpdateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this DamageUpdateRequestData.

        Amount

        :return: The amount of this DamageUpdateRequestData.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this DamageUpdateRequestData.

        Amount

        :param amount: The amount of this DamageUpdateRequestData.
        :type amount: float
        """

        self._amount = amount

    @property
    def damage_type(self):
        """Gets the damage_type of this DamageUpdateRequestData.

        Damage type

        :return: The damage_type of this DamageUpdateRequestData.
        :rtype: str
        """
        return self._damage_type

    @damage_type.setter
    def damage_type(self, damage_type):
        """Sets the damage_type of this DamageUpdateRequestData.

        Damage type

        :param damage_type: The damage_type of this DamageUpdateRequestData.
        :type damage_type: str
        """
        allowed_values = ["special", "general", "other"]  # noqa: E501
        if damage_type not in allowed_values:
            raise ValueError(
                "Invalid value for `damage_type` ({0}), must be one of {1}"
                .format(damage_type, allowed_values)
            )

        self._damage_type = damage_type

    @property
    def description(self):
        """Gets the description of this DamageUpdateRequestData.

        Description

        :return: The description of this DamageUpdateRequestData.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DamageUpdateRequestData.

        Description

        :param description: The description of this DamageUpdateRequestData.
        :type description: str
        """

        self._description = description
