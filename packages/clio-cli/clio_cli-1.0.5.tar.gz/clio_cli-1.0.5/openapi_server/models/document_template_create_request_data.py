# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_template_create_request_data_document_category import DocumentTemplateCreateRequestDataDocumentCategory
from openapi_server import util


class DocumentTemplateCreateRequestData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_category: DocumentTemplateCreateRequestDataDocumentCategory=None, file: str=None, filename: str=None):
        """DocumentTemplateCreateRequestData - a model defined in OpenAPI

        :param document_category: The document_category of this DocumentTemplateCreateRequestData.
        :param file: The file of this DocumentTemplateCreateRequestData.
        :param filename: The filename of this DocumentTemplateCreateRequestData.
        """
        self.openapi_types = {
            'document_category': DocumentTemplateCreateRequestDataDocumentCategory,
            'file': str,
            'filename': str
        }

        self.attribute_map = {
            'document_category': 'document_category',
            'file': 'file',
            'filename': 'filename'
        }

        self._document_category = document_category
        self._file = file
        self._filename = filename

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentTemplateCreateRequestData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentTemplate_create_request_data of this DocumentTemplateCreateRequestData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_category(self):
        """Gets the document_category of this DocumentTemplateCreateRequestData.


        :return: The document_category of this DocumentTemplateCreateRequestData.
        :rtype: DocumentTemplateCreateRequestDataDocumentCategory
        """
        return self._document_category

    @document_category.setter
    def document_category(self, document_category):
        """Sets the document_category of this DocumentTemplateCreateRequestData.


        :param document_category: The document_category of this DocumentTemplateCreateRequestData.
        :type document_category: DocumentTemplateCreateRequestDataDocumentCategory
        """

        self._document_category = document_category

    @property
    def file(self):
        """Gets the file of this DocumentTemplateCreateRequestData.

        A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request. Alternatively, the file can be converted to a BASE64-encoded string and serialized to JSON. 

        :return: The file of this DocumentTemplateCreateRequestData.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this DocumentTemplateCreateRequestData.

        A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request. Alternatively, the file can be converted to a BASE64-encoded string and serialized to JSON. 

        :param file: The file of this DocumentTemplateCreateRequestData.
        :type file: str
        """
        if file is None:
            raise ValueError("Invalid value for `file`, must not be `None`")

        self._file = file

    @property
    def filename(self):
        """Gets the filename of this DocumentTemplateCreateRequestData.

        The name of the file. The field is required when the file is BASE64-encoded string.

        :return: The filename of this DocumentTemplateCreateRequestData.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this DocumentTemplateCreateRequestData.

        The name of the file. The field is required when the file is BASE64-encoded string.

        :param filename: The filename of this DocumentTemplateCreateRequestData.
        :type filename: str
        """

        self._filename = filename
