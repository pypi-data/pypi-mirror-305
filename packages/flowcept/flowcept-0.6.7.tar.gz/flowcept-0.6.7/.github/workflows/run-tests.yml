name: Unit, integration, and notebook tests
on: [push]

jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    if: "!contains(github.event.head_commit.message, 'CI Bot')"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Show OS Info
        run: '[[ "$OSTYPE" == "linux-gnu"* ]] && { echo "OS Type: Linux"; (command -v lsb_release &> /dev/null && lsb_release -a) || cat /etc/os-release; uname -r; } || [[ "$OSTYPE" == "darwin"* ]] && { echo "OS Type: macOS"; sw_vers; uname -r; } || echo "Unsupported OS type: $OSTYPE"'

      - name: Copy settings file
        run: |
          mkdir ~/.flowcept
          cp resources/sample_settings.yaml ~/.flowcept
          mv ~/.flowcept/sample_settings.yaml ~/.flowcept/settings.yaml

      - name: Install package and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[all]

      - name: List installed packages
        run: pip list

      - name: Start docker compose with redis
        run: docker compose -f deployment/compose.yml up -d

      - name: Test with pytest and redis
        run: |
          pytest --ignore=tests/decorator_tests/ml_tests/llm_tests

      - name: Test notebooks with pytest and redis
        run: |
          python src/flowcept/flowcept_webserver/app.py &
          sleep 3
          export FLOWCEPT_SETTINGS_PATH=~/.flowcept/settings.yaml
          pytest --nbmake "notebooks/" --nbmake-timeout=600 --ignore=notebooks/dask_from_CLI.ipynb

      - name: Shut down docker compose
        run: docker compose -f deployment/compose.yml down

      - name: Start docker compose with kafka
        run: docker compose -f deployment/compose-kafka.yml up -d

      - name: Wait for one minute
        run: sleep 60

      - name: Check liveness
        run: |
          export MQ_TYPE=kafka
          export MQ_PORT=9092
          python -c 'from flowcept.configs import MQ_TYPE, MQ_PORT; print(f"MQ_TYPE={MQ_TYPE}"); print(f"MQ_PORT={MQ_PORT}")'
          python -c 'from flowcept import Flowcept; assert Flowcept.services_alive()'

      - name: Run tests with kafka
        run: |
          export MQ_TYPE=kafka
          export MQ_PORT=9092
          # Ignoring heavy tests. They are executed with Kafka in another GH Action.
          pytest --ignore=tests/decorator_tests/ml_tests --ignore=tests/adapters/test_tensorboard.py
