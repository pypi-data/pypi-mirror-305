"""
    FactSet Overview Report Builder API

    Get relevant industry-specific data for high level analysis of public and private companies  # noqa: E501

    The version of the OpenAPI document: 1.2.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from fds.sdk.OverviewReportBuilder.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
    OpenApiModel
)
from fds.sdk.OverviewReportBuilder.exceptions import ApiAttributeError


def lazy_import():
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object import KeyStatsEntityObject
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_active_investors import KeyStatsEntityObjectActiveInvestors
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_average_daily_vol import KeyStatsEntityObjectAverageDailyVol
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_average_rating import KeyStatsEntityObjectAverageRating
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_basic_shares import KeyStatsEntityObjectBasicShares
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_branches import KeyStatsEntityObjectBranches
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_broker_contributors import KeyStatsEntityObjectBrokerContributors
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_diluted_market_cap import KeyStatsEntityObjectDilutedMarketCap
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_diluted_shares import KeyStatsEntityObjectDilutedShares
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_dividend_yield import KeyStatsEntityObjectDividendYield
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_employees import KeyStatsEntityObjectEmployees
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_enterprise_value import KeyStatsEntityObjectEnterpriseValue
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_estimated_vc_raised import KeyStatsEntityObjectEstimatedVcRaised
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_first_date import KeyStatsEntityObjectFirstDate
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_first_funding import KeyStatsEntityObjectFirstFunding
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_float import KeyStatsEntityObjectFloat
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_funding_rounds import KeyStatsEntityObjectFundingRounds
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_gross_assets import KeyStatsEntityObjectGrossAssets
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_gross_premiums import KeyStatsEntityObjectGrossPremiums
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_institutional import KeyStatsEntityObjectInstitutional
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_last_funding import KeyStatsEntityObjectLastFunding
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_latest_post_money_valuation import KeyStatsEntityObjectLatestPostMoneyValuation
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_lt_growth_rate import KeyStatsEntityObjectLtGrowthRate
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_market_cap import KeyStatsEntityObjectMarketCap
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_net_interest_income import KeyStatsEntityObjectNetInterestIncome
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_premiums import KeyStatsEntityObjectPremiums
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_range52_week import KeyStatsEntityObjectRange52Week
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_revenue import KeyStatsEntityObjectRevenue
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_target_price import KeyStatsEntityObjectTargetPrice
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_top10_institutional_holders import KeyStatsEntityObjectTop10InstitutionalHolders
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_total_deposits import KeyStatsEntityObjectTotalDeposits
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_total_investors import KeyStatsEntityObjectTotalInvestors
    from fds.sdk.OverviewReportBuilder.model.key_stats_entity_object_wacc import KeyStatsEntityObjectWacc
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object import KeyStatsFundObject
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_aum_fund_month import KeyStatsFundObjectAumFundMonth
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_aum_share_daily import KeyStatsFundObjectAumShareDaily
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_available_for_sale import KeyStatsFundObjectAvailableForSale
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_average_spread import KeyStatsFundObjectAverageSpread
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_currency_iso import KeyStatsFundObjectCurrencyIso
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_daily_trading_vol import KeyStatsFundObjectDailyTradingVol
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_distribution_yield import KeyStatsFundObjectDistributionYield
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_esg_compliance import KeyStatsFundObjectEsgCompliance
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_expense_ratio import KeyStatsFundObjectExpenseRatio
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_first_nav_record import KeyStatsFundObjectFirstNavRecord
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_fund_flow_ytd import KeyStatsFundObjectFundFlowYTD
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_inception_date_fund import KeyStatsFundObjectInceptionDateFund
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_inception_date_share import KeyStatsFundObjectInceptionDateShare
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_meta import KeyStatsFundObjectMeta
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_outstanding_share import KeyStatsFundObjectOutstandingShare
    from fds.sdk.OverviewReportBuilder.model.key_stats_fund_object_sfdr_classification import KeyStatsFundObjectSfdrClassification
    globals()['KeyStatsEntityObject'] = KeyStatsEntityObject
    globals()['KeyStatsEntityObjectActiveInvestors'] = KeyStatsEntityObjectActiveInvestors
    globals()['KeyStatsEntityObjectAverageDailyVol'] = KeyStatsEntityObjectAverageDailyVol
    globals()['KeyStatsEntityObjectAverageRating'] = KeyStatsEntityObjectAverageRating
    globals()['KeyStatsEntityObjectBasicShares'] = KeyStatsEntityObjectBasicShares
    globals()['KeyStatsEntityObjectBranches'] = KeyStatsEntityObjectBranches
    globals()['KeyStatsEntityObjectBrokerContributors'] = KeyStatsEntityObjectBrokerContributors
    globals()['KeyStatsEntityObjectDilutedMarketCap'] = KeyStatsEntityObjectDilutedMarketCap
    globals()['KeyStatsEntityObjectDilutedShares'] = KeyStatsEntityObjectDilutedShares
    globals()['KeyStatsEntityObjectDividendYield'] = KeyStatsEntityObjectDividendYield
    globals()['KeyStatsEntityObjectEmployees'] = KeyStatsEntityObjectEmployees
    globals()['KeyStatsEntityObjectEnterpriseValue'] = KeyStatsEntityObjectEnterpriseValue
    globals()['KeyStatsEntityObjectEstimatedVcRaised'] = KeyStatsEntityObjectEstimatedVcRaised
    globals()['KeyStatsEntityObjectFirstDate'] = KeyStatsEntityObjectFirstDate
    globals()['KeyStatsEntityObjectFirstFunding'] = KeyStatsEntityObjectFirstFunding
    globals()['KeyStatsEntityObjectFloat'] = KeyStatsEntityObjectFloat
    globals()['KeyStatsEntityObjectFundingRounds'] = KeyStatsEntityObjectFundingRounds
    globals()['KeyStatsEntityObjectGrossAssets'] = KeyStatsEntityObjectGrossAssets
    globals()['KeyStatsEntityObjectGrossPremiums'] = KeyStatsEntityObjectGrossPremiums
    globals()['KeyStatsEntityObjectInstitutional'] = KeyStatsEntityObjectInstitutional
    globals()['KeyStatsEntityObjectLastFunding'] = KeyStatsEntityObjectLastFunding
    globals()['KeyStatsEntityObjectLatestPostMoneyValuation'] = KeyStatsEntityObjectLatestPostMoneyValuation
    globals()['KeyStatsEntityObjectLtGrowthRate'] = KeyStatsEntityObjectLtGrowthRate
    globals()['KeyStatsEntityObjectMarketCap'] = KeyStatsEntityObjectMarketCap
    globals()['KeyStatsEntityObjectNetInterestIncome'] = KeyStatsEntityObjectNetInterestIncome
    globals()['KeyStatsEntityObjectPremiums'] = KeyStatsEntityObjectPremiums
    globals()['KeyStatsEntityObjectRange52Week'] = KeyStatsEntityObjectRange52Week
    globals()['KeyStatsEntityObjectRevenue'] = KeyStatsEntityObjectRevenue
    globals()['KeyStatsEntityObjectTargetPrice'] = KeyStatsEntityObjectTargetPrice
    globals()['KeyStatsEntityObjectTop10InstitutionalHolders'] = KeyStatsEntityObjectTop10InstitutionalHolders
    globals()['KeyStatsEntityObjectTotalDeposits'] = KeyStatsEntityObjectTotalDeposits
    globals()['KeyStatsEntityObjectTotalInvestors'] = KeyStatsEntityObjectTotalInvestors
    globals()['KeyStatsEntityObjectWacc'] = KeyStatsEntityObjectWacc
    globals()['KeyStatsFundObject'] = KeyStatsFundObject
    globals()['KeyStatsFundObjectAumFundMonth'] = KeyStatsFundObjectAumFundMonth
    globals()['KeyStatsFundObjectAumShareDaily'] = KeyStatsFundObjectAumShareDaily
    globals()['KeyStatsFundObjectAvailableForSale'] = KeyStatsFundObjectAvailableForSale
    globals()['KeyStatsFundObjectAverageSpread'] = KeyStatsFundObjectAverageSpread
    globals()['KeyStatsFundObjectCurrencyIso'] = KeyStatsFundObjectCurrencyIso
    globals()['KeyStatsFundObjectDailyTradingVol'] = KeyStatsFundObjectDailyTradingVol
    globals()['KeyStatsFundObjectDistributionYield'] = KeyStatsFundObjectDistributionYield
    globals()['KeyStatsFundObjectEsgCompliance'] = KeyStatsFundObjectEsgCompliance
    globals()['KeyStatsFundObjectExpenseRatio'] = KeyStatsFundObjectExpenseRatio
    globals()['KeyStatsFundObjectFirstNavRecord'] = KeyStatsFundObjectFirstNavRecord
    globals()['KeyStatsFundObjectFundFlowYTD'] = KeyStatsFundObjectFundFlowYTD
    globals()['KeyStatsFundObjectInceptionDateFund'] = KeyStatsFundObjectInceptionDateFund
    globals()['KeyStatsFundObjectInceptionDateShare'] = KeyStatsFundObjectInceptionDateShare
    globals()['KeyStatsFundObjectMeta'] = KeyStatsFundObjectMeta
    globals()['KeyStatsFundObjectOutstandingShare'] = KeyStatsFundObjectOutstandingShare
    globals()['KeyStatsFundObjectSfdrClassification'] = KeyStatsFundObjectSfdrClassification


class KeyStatsObject(ModelComposed):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        lazy_import()
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'range52_week': (KeyStatsEntityObjectRange52Week,),  # noqa: E501
            'average_daily_vol': (KeyStatsEntityObjectAverageDailyVol,),  # noqa: E501
            'basic_shares': (KeyStatsEntityObjectBasicShares,),  # noqa: E501
            'market_cap': (KeyStatsEntityObjectMarketCap,),  # noqa: E501
            'dividend_yield': (KeyStatsEntityObjectDividendYield,),  # noqa: E501
            'first_date': (KeyStatsEntityObjectFirstDate,),  # noqa: E501
            'diluted_shares': (KeyStatsEntityObjectDilutedShares,),  # noqa: E501
            'diluted_market_cap': (KeyStatsEntityObjectDilutedMarketCap,),  # noqa: E501
            'enterprise_value': (KeyStatsEntityObjectEnterpriseValue,),  # noqa: E501
            'wacc': (KeyStatsEntityObjectWacc,),  # noqa: E501
            'float': (KeyStatsEntityObjectFloat,),  # noqa: E501
            'institutional': (KeyStatsEntityObjectInstitutional,),  # noqa: E501
            'top10_institutional_holders': (KeyStatsEntityObjectTop10InstitutionalHolders,),  # noqa: E501
            'broker_contributors': (KeyStatsEntityObjectBrokerContributors,),  # noqa: E501
            'average_rating': (KeyStatsEntityObjectAverageRating,),  # noqa: E501
            'target_price': (KeyStatsEntityObjectTargetPrice,),  # noqa: E501
            'lt_growth_rate': (KeyStatsEntityObjectLtGrowthRate,),  # noqa: E501
            'revenue': (KeyStatsEntityObjectRevenue,),  # noqa: E501
            'employees': (KeyStatsEntityObjectEmployees,),  # noqa: E501
            'funding_rounds': (KeyStatsEntityObjectFundingRounds,),  # noqa: E501
            'estimated_vc_raised': (KeyStatsEntityObjectEstimatedVcRaised,),  # noqa: E501
            'last_funding': (KeyStatsEntityObjectLastFunding,),  # noqa: E501
            'first_funding': (KeyStatsEntityObjectFirstFunding,),  # noqa: E501
            'latest_post_money_valuation': (KeyStatsEntityObjectLatestPostMoneyValuation,),  # noqa: E501
            'active_investors': (KeyStatsEntityObjectActiveInvestors,),  # noqa: E501
            'total_investors': (KeyStatsEntityObjectTotalInvestors,),  # noqa: E501
            'premiums': (KeyStatsEntityObjectPremiums,),  # noqa: E501
            'gross_premiums': (KeyStatsEntityObjectGrossPremiums,),  # noqa: E501
            'gross_assets': (KeyStatsEntityObjectGrossAssets,),  # noqa: E501
            'total_deposits': (KeyStatsEntityObjectTotalDeposits,),  # noqa: E501
            'branches': (KeyStatsEntityObjectBranches,),  # noqa: E501
            'net_interest_income': (KeyStatsEntityObjectNetInterestIncome,),  # noqa: E501
            'meta': (KeyStatsFundObjectMeta,),  # noqa: E501
            'expense_ratio': (KeyStatsFundObjectExpenseRatio,),  # noqa: E501
            'distribution_yield': (KeyStatsFundObjectDistributionYield,),  # noqa: E501
            'aum_share_daily': (KeyStatsFundObjectAumShareDaily,),  # noqa: E501
            'aum_fund_month': (KeyStatsFundObjectAumFundMonth,),  # noqa: E501
            'outstanding_share': (KeyStatsFundObjectOutstandingShare,),  # noqa: E501
            'fund_flow_ytd': (KeyStatsFundObjectFundFlowYTD,),  # noqa: E501
            'first_nav_record': (KeyStatsFundObjectFirstNavRecord,),  # noqa: E501
            'daily_trading_vol': (KeyStatsFundObjectDailyTradingVol,),  # noqa: E501
            'average_spread': (KeyStatsFundObjectAverageSpread,),  # noqa: E501
            'inception_date_share': (KeyStatsFundObjectInceptionDateShare,),  # noqa: E501
            'inception_date_fund': (KeyStatsFundObjectInceptionDateFund,),  # noqa: E501
            'available_for_sale': (KeyStatsFundObjectAvailableForSale,),  # noqa: E501
            'currency_iso': (KeyStatsFundObjectCurrencyIso,),  # noqa: E501
            'esg_compliance': (KeyStatsFundObjectEsgCompliance,),  # noqa: E501
            'sfdr_classification': (KeyStatsFundObjectSfdrClassification,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'range52_week': 'range52Week',  # noqa: E501
        'average_daily_vol': 'averageDailyVol',  # noqa: E501
        'basic_shares': 'basicShares',  # noqa: E501
        'market_cap': 'marketCap',  # noqa: E501
        'dividend_yield': 'dividendYield',  # noqa: E501
        'first_date': 'firstDate',  # noqa: E501
        'diluted_shares': 'dilutedShares',  # noqa: E501
        'diluted_market_cap': 'dilutedMarketCap',  # noqa: E501
        'enterprise_value': 'enterpriseValue',  # noqa: E501
        'wacc': 'wacc',  # noqa: E501
        'float': 'float',  # noqa: E501
        'institutional': 'institutional',  # noqa: E501
        'top10_institutional_holders': 'top10InstitutionalHolders',  # noqa: E501
        'broker_contributors': 'brokerContributors',  # noqa: E501
        'average_rating': 'averageRating',  # noqa: E501
        'target_price': 'targetPrice',  # noqa: E501
        'lt_growth_rate': 'ltGrowthRate',  # noqa: E501
        'revenue': 'revenue',  # noqa: E501
        'employees': 'employees',  # noqa: E501
        'funding_rounds': 'fundingRounds',  # noqa: E501
        'estimated_vc_raised': 'estimatedVcRaised',  # noqa: E501
        'last_funding': 'lastFunding',  # noqa: E501
        'first_funding': 'firstFunding',  # noqa: E501
        'latest_post_money_valuation': 'latestPostMoneyValuation',  # noqa: E501
        'active_investors': 'activeInvestors',  # noqa: E501
        'total_investors': 'totalInvestors',  # noqa: E501
        'premiums': 'premiums',  # noqa: E501
        'gross_premiums': 'grossPremiums',  # noqa: E501
        'gross_assets': 'grossAssets',  # noqa: E501
        'total_deposits': 'totalDeposits',  # noqa: E501
        'branches': 'branches',  # noqa: E501
        'net_interest_income': 'netInterestIncome',  # noqa: E501
        'meta': 'meta',  # noqa: E501
        'expense_ratio': 'expenseRatio',  # noqa: E501
        'distribution_yield': 'distributionYield',  # noqa: E501
        'aum_share_daily': 'aumShareDaily',  # noqa: E501
        'aum_fund_month': 'aumFundMonth',  # noqa: E501
        'outstanding_share': 'outstandingShare',  # noqa: E501
        'fund_flow_ytd': 'fundFlowYTD',  # noqa: E501
        'first_nav_record': 'firstNavRecord',  # noqa: E501
        'daily_trading_vol': 'dailyTradingVol',  # noqa: E501
        'average_spread': 'averageSpread',  # noqa: E501
        'inception_date_share': 'inceptionDateShare',  # noqa: E501
        'inception_date_fund': 'inceptionDateFund',  # noqa: E501
        'available_for_sale': 'availableForSale',  # noqa: E501
        'currency_iso': 'currencyIso',  # noqa: E501
        'esg_compliance': 'esgCompliance',  # noqa: E501
        'sfdr_classification': 'sfdrClassification',  # noqa: E501
    }

    read_only_vars = {
    }

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, *args, **kwargs):  # noqa: E501
        """KeyStatsObject - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            range52_week (KeyStatsEntityObjectRange52Week): [optional]  # noqa: E501
            average_daily_vol (KeyStatsEntityObjectAverageDailyVol): [optional]  # noqa: E501
            basic_shares (KeyStatsEntityObjectBasicShares): [optional]  # noqa: E501
            market_cap (KeyStatsEntityObjectMarketCap): [optional]  # noqa: E501
            dividend_yield (KeyStatsEntityObjectDividendYield): [optional]  # noqa: E501
            first_date (KeyStatsEntityObjectFirstDate): [optional]  # noqa: E501
            diluted_shares (KeyStatsEntityObjectDilutedShares): [optional]  # noqa: E501
            diluted_market_cap (KeyStatsEntityObjectDilutedMarketCap): [optional]  # noqa: E501
            enterprise_value (KeyStatsEntityObjectEnterpriseValue): [optional]  # noqa: E501
            wacc (KeyStatsEntityObjectWacc): [optional]  # noqa: E501
            float (KeyStatsEntityObjectFloat): [optional]  # noqa: E501
            institutional (KeyStatsEntityObjectInstitutional): [optional]  # noqa: E501
            top10_institutional_holders (KeyStatsEntityObjectTop10InstitutionalHolders): [optional]  # noqa: E501
            broker_contributors (KeyStatsEntityObjectBrokerContributors): [optional]  # noqa: E501
            average_rating (KeyStatsEntityObjectAverageRating): [optional]  # noqa: E501
            target_price (KeyStatsEntityObjectTargetPrice): [optional]  # noqa: E501
            lt_growth_rate (KeyStatsEntityObjectLtGrowthRate): [optional]  # noqa: E501
            revenue (KeyStatsEntityObjectRevenue): [optional]  # noqa: E501
            employees (KeyStatsEntityObjectEmployees): [optional]  # noqa: E501
            funding_rounds (KeyStatsEntityObjectFundingRounds): [optional]  # noqa: E501
            estimated_vc_raised (KeyStatsEntityObjectEstimatedVcRaised): [optional]  # noqa: E501
            last_funding (KeyStatsEntityObjectLastFunding): [optional]  # noqa: E501
            first_funding (KeyStatsEntityObjectFirstFunding): [optional]  # noqa: E501
            latest_post_money_valuation (KeyStatsEntityObjectLatestPostMoneyValuation): [optional]  # noqa: E501
            active_investors (KeyStatsEntityObjectActiveInvestors): [optional]  # noqa: E501
            total_investors (KeyStatsEntityObjectTotalInvestors): [optional]  # noqa: E501
            premiums (KeyStatsEntityObjectPremiums): [optional]  # noqa: E501
            gross_premiums (KeyStatsEntityObjectGrossPremiums): [optional]  # noqa: E501
            gross_assets (KeyStatsEntityObjectGrossAssets): [optional]  # noqa: E501
            total_deposits (KeyStatsEntityObjectTotalDeposits): [optional]  # noqa: E501
            branches (KeyStatsEntityObjectBranches): [optional]  # noqa: E501
            net_interest_income (KeyStatsEntityObjectNetInterestIncome): [optional]  # noqa: E501
            meta (KeyStatsFundObjectMeta): [optional]  # noqa: E501
            expense_ratio (KeyStatsFundObjectExpenseRatio): [optional]  # noqa: E501
            distribution_yield (KeyStatsFundObjectDistributionYield): [optional]  # noqa: E501
            aum_share_daily (KeyStatsFundObjectAumShareDaily): [optional]  # noqa: E501
            aum_fund_month (KeyStatsFundObjectAumFundMonth): [optional]  # noqa: E501
            outstanding_share (KeyStatsFundObjectOutstandingShare): [optional]  # noqa: E501
            fund_flow_ytd (KeyStatsFundObjectFundFlowYTD): [optional]  # noqa: E501
            first_nav_record (KeyStatsFundObjectFirstNavRecord): [optional]  # noqa: E501
            daily_trading_vol (KeyStatsFundObjectDailyTradingVol): [optional]  # noqa: E501
            average_spread (KeyStatsFundObjectAverageSpread): [optional]  # noqa: E501
            inception_date_share (KeyStatsFundObjectInceptionDateShare): [optional]  # noqa: E501
            inception_date_fund (KeyStatsFundObjectInceptionDateFund): [optional]  # noqa: E501
            available_for_sale (KeyStatsFundObjectAvailableForSale): [optional]  # noqa: E501
            currency_iso (KeyStatsFundObjectCurrencyIso): [optional]  # noqa: E501
            esg_compliance (KeyStatsFundObjectEsgCompliance): [optional]  # noqa: E501
            sfdr_classification (KeyStatsFundObjectSfdrClassification): [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        constant_args = {
            '_check_type': _check_type,
            '_path_to_item': _path_to_item,
            '_spec_property_naming': _spec_property_naming,
            '_configuration': _configuration,
            '_visited_composed_classes': self._visited_composed_classes,
        }
        composed_info = validate_get_composed_info(
            constant_args, kwargs, self)
        self._composed_instances = composed_info[0]
        self._var_name_to_model_instances = composed_info[1]
        self._additional_properties_model_instances = composed_info[2]
        discarded_args = composed_info[3]

        for var_name, var_value in kwargs.items():
            if var_name in discarded_args and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self._additional_properties_model_instances:
                # discard variable.
                continue
            setattr(self, var_name, var_value)

        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
        '_composed_instances',
        '_var_name_to_model_instances',
        '_additional_properties_model_instances',
    ])

    @convert_js_args_to_python_args
    def __init__(self, *args, **kwargs):  # noqa: E501
        """KeyStatsObject - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            range52_week (KeyStatsEntityObjectRange52Week): [optional]  # noqa: E501
            average_daily_vol (KeyStatsEntityObjectAverageDailyVol): [optional]  # noqa: E501
            basic_shares (KeyStatsEntityObjectBasicShares): [optional]  # noqa: E501
            market_cap (KeyStatsEntityObjectMarketCap): [optional]  # noqa: E501
            dividend_yield (KeyStatsEntityObjectDividendYield): [optional]  # noqa: E501
            first_date (KeyStatsEntityObjectFirstDate): [optional]  # noqa: E501
            diluted_shares (KeyStatsEntityObjectDilutedShares): [optional]  # noqa: E501
            diluted_market_cap (KeyStatsEntityObjectDilutedMarketCap): [optional]  # noqa: E501
            enterprise_value (KeyStatsEntityObjectEnterpriseValue): [optional]  # noqa: E501
            wacc (KeyStatsEntityObjectWacc): [optional]  # noqa: E501
            float (KeyStatsEntityObjectFloat): [optional]  # noqa: E501
            institutional (KeyStatsEntityObjectInstitutional): [optional]  # noqa: E501
            top10_institutional_holders (KeyStatsEntityObjectTop10InstitutionalHolders): [optional]  # noqa: E501
            broker_contributors (KeyStatsEntityObjectBrokerContributors): [optional]  # noqa: E501
            average_rating (KeyStatsEntityObjectAverageRating): [optional]  # noqa: E501
            target_price (KeyStatsEntityObjectTargetPrice): [optional]  # noqa: E501
            lt_growth_rate (KeyStatsEntityObjectLtGrowthRate): [optional]  # noqa: E501
            revenue (KeyStatsEntityObjectRevenue): [optional]  # noqa: E501
            employees (KeyStatsEntityObjectEmployees): [optional]  # noqa: E501
            funding_rounds (KeyStatsEntityObjectFundingRounds): [optional]  # noqa: E501
            estimated_vc_raised (KeyStatsEntityObjectEstimatedVcRaised): [optional]  # noqa: E501
            last_funding (KeyStatsEntityObjectLastFunding): [optional]  # noqa: E501
            first_funding (KeyStatsEntityObjectFirstFunding): [optional]  # noqa: E501
            latest_post_money_valuation (KeyStatsEntityObjectLatestPostMoneyValuation): [optional]  # noqa: E501
            active_investors (KeyStatsEntityObjectActiveInvestors): [optional]  # noqa: E501
            total_investors (KeyStatsEntityObjectTotalInvestors): [optional]  # noqa: E501
            premiums (KeyStatsEntityObjectPremiums): [optional]  # noqa: E501
            gross_premiums (KeyStatsEntityObjectGrossPremiums): [optional]  # noqa: E501
            gross_assets (KeyStatsEntityObjectGrossAssets): [optional]  # noqa: E501
            total_deposits (KeyStatsEntityObjectTotalDeposits): [optional]  # noqa: E501
            branches (KeyStatsEntityObjectBranches): [optional]  # noqa: E501
            net_interest_income (KeyStatsEntityObjectNetInterestIncome): [optional]  # noqa: E501
            meta (KeyStatsFundObjectMeta): [optional]  # noqa: E501
            expense_ratio (KeyStatsFundObjectExpenseRatio): [optional]  # noqa: E501
            distribution_yield (KeyStatsFundObjectDistributionYield): [optional]  # noqa: E501
            aum_share_daily (KeyStatsFundObjectAumShareDaily): [optional]  # noqa: E501
            aum_fund_month (KeyStatsFundObjectAumFundMonth): [optional]  # noqa: E501
            outstanding_share (KeyStatsFundObjectOutstandingShare): [optional]  # noqa: E501
            fund_flow_ytd (KeyStatsFundObjectFundFlowYTD): [optional]  # noqa: E501
            first_nav_record (KeyStatsFundObjectFirstNavRecord): [optional]  # noqa: E501
            daily_trading_vol (KeyStatsFundObjectDailyTradingVol): [optional]  # noqa: E501
            average_spread (KeyStatsFundObjectAverageSpread): [optional]  # noqa: E501
            inception_date_share (KeyStatsFundObjectInceptionDateShare): [optional]  # noqa: E501
            inception_date_fund (KeyStatsFundObjectInceptionDateFund): [optional]  # noqa: E501
            available_for_sale (KeyStatsFundObjectAvailableForSale): [optional]  # noqa: E501
            currency_iso (KeyStatsFundObjectCurrencyIso): [optional]  # noqa: E501
            esg_compliance (KeyStatsFundObjectEsgCompliance): [optional]  # noqa: E501
            sfdr_classification (KeyStatsFundObjectSfdrClassification): [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        constant_args = {
            '_check_type': _check_type,
            '_path_to_item': _path_to_item,
            '_spec_property_naming': _spec_property_naming,
            '_configuration': _configuration,
            '_visited_composed_classes': self._visited_composed_classes,
        }
        composed_info = validate_get_composed_info(
            constant_args, kwargs, self)
        self._composed_instances = composed_info[0]
        self._var_name_to_model_instances = composed_info[1]
        self._additional_properties_model_instances = composed_info[2]
        discarded_args = composed_info[3]

        for var_name, var_value in kwargs.items():
            if var_name in discarded_args and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self._additional_properties_model_instances:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")

    @cached_property
    def _composed_schemas():
        # we need this here to make our import statements work
        # we must store _composed_schemas in here so the code is only run
        # when we invoke this method. If we kept this at the class
        # level we would get an error because the class level
        # code would be run when this module is imported, and these composed
        # classes don't exist yet because their module has not finished
        # loading
        lazy_import()
        return {
          'anyOf': [
          ],
          'allOf': [
          ],
          'oneOf': [
              KeyStatsEntityObject,
              KeyStatsFundObject,
          ],
        }
