{"version":3,"file":"elkexporter.b4bec61d5f2d99a49f29.js?v=b4bec61d5f2d99a49f29","mappings":"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","sources":["webpack://@jupyrdf/jupyter-elk/./js/exporter.ts"],"sourcesContent":["/**\n * Copyright (c) 2024 ipyelk contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { WidgetModel, WidgetView } from '@jupyter-widgets/base';\nimport { unpack_models as deserialize } from '@jupyter-widgets/base';\n\nimport { ELKViewerModel } from './display_widget';\nimport { ELK_DEBUG, NAME, VERSION } from './tokens';\n\nimport elkRawCSS from '!!raw-loader!../style/diagram.css';\nimport materialRawCss from '!!raw-loader!@jupyterlab/apputils/style/materialcolors.css';\nimport labRawCss from '!!raw-loader!@jupyterlab/theme-light-extension/style/variables.css';\n\nconst STANDALONE_CSS = `\n  ${materialRawCss}\n  ${labRawCss}\n  ${elkRawCSS}\n`\n  .replace(/\\/\\*(.|\\n)*?\\*\\//gm, ' ')\n  .replace(/.jp-ElkView /g, '')\n  .replace(/\\n/g, ' ')\n  .replace(/\\s+/g, ' ')\n  .replace(/\\}/g, '}\\n');\n\nconst XML_HEADER = '<?xml version=\"1.0\" standalone=\"no\"?>';\n\nexport class ELKExporterModel extends WidgetModel {\n  static model_name = 'ELKExporterModel';\n  private _update_timeout: number;\n\n  static serializers = {\n    ...WidgetModel.serializers,\n    viewer: { deserialize },\n    diagram: { deserialize },\n  };\n\n  defaults() {\n    let defaults = {\n      ...super.defaults(),\n\n      _model_name: ELKExporterModel.model_name,\n      _model_module_version: VERSION,\n      _view_module: NAME,\n      _view_name: ELKExporterView.view_name,\n      _view_module_version: VERSION,\n      viewer: null,\n      value: null,\n      enabled: true,\n      extra_css: '',\n      padding: 20,\n      diagram: null,\n      strip_ids: true,\n      add_xml_header: true,\n    };\n    return defaults;\n  }\n\n  get enabled(): boolean {\n    return this.get('enabled') || true;\n  }\n\n  get viewer(): ELKViewerModel {\n    return this.get('viewer');\n  }\n\n  get diagram(): WidgetModel {\n    return this.get('diagram');\n  }\n\n  get diagram_raw_css(): string[] {\n    return this.diagram?.get('raw_css') || [];\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n    this.on('change:viewer', this._on_viewer_changed, this);\n    this.on('change:diagram', this._on_diagram_changed, this);\n    this._on_viewer_changed();\n    this._on_diagram_changed();\n  }\n\n  _on_viewer_changed() {\n    ELK_DEBUG && console.warn('[export] viewer changed', arguments);\n    if (this.viewer?.diagramUpdated == null) {\n      return;\n    }\n    this.viewer.diagramUpdated.connect(this._schedule_update, this);\n    if (!this.enabled) {\n      return;\n    }\n    this._schedule_update();\n  }\n\n  is_an_elkmodel(model: WidgetModel) {\n    return model instanceof ELKViewerModel;\n  }\n\n  _on_diagram_changed() {\n    ELK_DEBUG && console.warn('[export] diagram changed', arguments);\n    const { diagram } = this;\n    if (diagram?.on != null) {\n      diagram.on('change:raw_css', this._schedule_update, this);\n      const children: WidgetModel[] = diagram.get('children') || [];\n      const viewers = children.filter(this.is_an_elkmodel) as ELKViewerModel[];\n      if (viewers.length && viewers[0].diagramUpdated) {\n        viewers[0].diagramUpdated.connect(this._schedule_update, this);\n      } else {\n        ELK_DEBUG && console.warn('[export] no diagram ready', children);\n      }\n    }\n  }\n\n  async a_view(): Promise<WidgetView | null> {\n    if (!this.enabled) {\n      return;\n    }\n    let views = this.viewer.views;\n\n    if (this.diagram?.views) {\n      views = { ...views, ...this.diagram.views };\n    }\n\n    if (!Object.keys(views).length) {\n      return;\n    }\n\n    for (const promise of Object.values(views)) {\n      const view = (await promise) as WidgetView;\n      if (view.el) {\n        await view.displayed;\n        return view;\n      }\n    }\n  }\n\n  _schedule_update() {\n    if (!this.enabled) {\n      return;\n    }\n    if (this._update_timeout != null) {\n      window.clearInterval(this._update_timeout);\n      this._update_timeout = null;\n    }\n    // does weird stuff with `this` apparently\n    this._update_timeout = setTimeout(() => this._on_layout_updated(), 1000);\n  }\n\n  async _on_layout_updated() {\n    if (!this.enabled) {\n      return;\n    }\n    const view = await this.a_view();\n    const svg: SVGElement = view?.el?.querySelector('svg');\n    if (svg == null) {\n      this._schedule_update();\n      return;\n    }\n    const { outerHTML } = svg;\n    const padding = this.get('padding');\n    const strip_ids = this.get('strip_ids');\n    const add_xml_header = this.get('add_xml_header');\n    const raw_diagram_css = this.diagram_raw_css;\n    const rawStyle = `\n        ${STANDALONE_CSS}\n        ${raw_diagram_css.join('\\n')}\n        ${this.get('extra_css') || ''}\n    `;\n    const style = `\n      <style type=\"text/css\">\n        <![CDATA[\n          ${rawStyle}\n        ]]>\n      </style>`;\n    const g: SVGGElement = svg.querySelector('g');\n    if (g == null) {\n      // bail if not g\n      return;\n    }\n    const transform = g.attributes['transform'].value;\n    let scaleFactor = 1.0;\n    const scale = transform.match(/scale\\((.*?)\\)/);\n    if (scale != null) {\n      scaleFactor = parseFloat(scale[1]);\n    }\n    const { width, height } = g.getBoundingClientRect();\n\n    let withCSS = outerHTML\n      .replace(\n        /<svg([^>]+)>/,\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${\n          width / scaleFactor + padding\n        } ${height / scaleFactor + padding}\" $1>\n          ${style}\n        `,\n      )\n      .replace(/ transform=\".*?\"/, '');\n\n    if (strip_ids) {\n      withCSS = withCSS.replace(/\\s*id=\"[^\"]*\"\\s*/g, ' ');\n    }\n\n    if (add_xml_header) {\n      withCSS = `${XML_HEADER}\\n${withCSS}`;\n    }\n\n    this.set({ value: withCSS });\n\n    this.save_changes(view.callbacks);\n  }\n}\n\nexport class ELKExporterView extends WidgetView {\n  static view_name = 'ELKExporterView';\n  model: ELKExporterModel;\n}\n"],"names":["STANDALONE_CSS","replace","ELKExporterModel","WidgetModel","defaults","super","_model_name","model_name","_model_module_version","_view_module","_view_name","ELKExporterView","view_name","_view_module_version","viewer","value","enabled","extra_css","padding","diagram","strip_ids","add_xml_header","this","get","diagram_raw_css","initialize","attributes","options","on","_on_viewer_changed","_on_diagram_changed","console","warn","arguments","diagramUpdated","connect","_schedule_update","is_an_elkmodel","model","ELKViewerModel","children","viewers","filter","length","a_view","views","Object","keys","promise","values","view","el","displayed","_update_timeout","window","clearInterval","setTimeout","_on_layout_updated","svg","querySelector","outerHTML","raw_diagram_css","style","join","g","scaleFactor","scale","match","parseFloat","width","height","getBoundingClientRect","withCSS","set","save_changes","callbacks","serializers","deserialize","WidgetView"],"sourceRoot":""}