.TH HCLI_CORE 1 "JUNE 2019" Linux "User Manuals"
.SH NAME
hcli_core \- An HCLI Connector that can be used to expose a REST API with a built-in CLI, via hypertext command line interface (HCLI) semantics.
.SH SYNOPSIS
.B hcli_core
[
.I option
|
.I command
]
.SH DESCRIPTION
.B hcli_core
is a Web Service Gateway Interface (WSGI; PEP 3333) application that provides a way for developers to expose a CLI via HCLI v1.0 semantics
while providing dynamic and up to date in-band access to man page style API/CLI documentation.
.SH CONFIGURATION
HCLI Core relies on the use of a configuration file. If none is provided as a file path, the default configuration included with hcli_core
is used.
.PP
The configuration file is expected to be formatted in the configparser format which defines sections and assigned name = value pairs. See
the EXAMPLE section for details on how to submit a custom configuration file path to hcli_core at launch.
.PP
The configuration supports:
.PP
- No authentication (auth = None)
.br
- HTTP Basic Authentication (auth = Basic)
.PP
.I
.SS CONFIGURATION FILE FORMAT
[default]
.br
auth = None (auth = <None | Basic>)
.SH HTTP BASIC AUTHENTICATION
If Basic auth is configured, HCLI Core expects to use a credentials file, called "credentials", located in the same folder as the configuration file.
The default included configuration file and credentials file provided with HCLI Core MUST NOT be used but provides an included example file format.
.PP
The default included admin's user password is: admin (sha512 hashed)
.PP
The provided custom credentials file MUST minimally contain a [default] section and admin user.
.PP
The default username should be admin and should have a password that's a hexdigest of a sha512 hashed password; without a trailing \\n. Note that usernames and passwords can't contain a ":", as is also the
case under HTTP Basic Authentication.
.PP
The credentials file MAY contain as many additional users, one user per section, under as many additional sections as is desired.
.PP
HTTP Basic Authenthentication SHOULD NOT be used without HTTPS and SHOULD NOT generally be considered secure in any way. This is provided as a bare convenience if authentication capabilities are found useful, however,
.I other authorization schemes should be preferred.
.PP
The service does not support stored cleartext passwords and instead expects to see stored passwords as sha512 hexdigests to help provide a minimum of password protection if the stored credentials file becomes compromised.
.PP
The CREDENTIALS FILE FORMAT section provides an example command line to use to generate a sha512 digest of a password without exposing it on the command line.
.PP
.SS CREDENTIALS FILE FORMAT
[default]
.br
auth = Basic
.br
username = admin
.br
password = <echo -n $(cat somefile) | sha512sum>
.PP
[<someothersection>]
.br
auth = Basic
.br
username = <someotheruser>
.br
password = <echo -n $(cat someotherpasswordfile) | sha512sum>
.PP
.SH COMMANDS
.IP "path"
Provides the installation path of hcli_core, which can be used to help locate the path of the WSGI app to use in a WSGI server.
.IP "sample hub"
Provides the path of a sample HCLI that can be used for service discovery.
.IP "sample hfm"
Provides the path of a sample HCLI that can be used to stream upload, download and otherwise remotely manage files.
.IP "sample nw"
Provides the path of a sample HCLI that can be used as an IPAM to manage private network CIDR ranges.
.IP "sample hptt"
Provides the path of a sample HCLI that can be used to manage PTT streaming channels to link disjointed radio networks.
.IP help
This help file.
.SH OPTIONS
.IP --version
.B hcli_core
version and the version of it's dependencies.
.SH EXAMPLE
hcli_core path
.PP
hcli_core --version
.PP
gunicorn --workers=5 --threads=2 "hcli_core:connector()"
.PP
gunicorn --workers=5 --threads=2 "hcli_core:connector(\\"`hcli_core sample hfm`\\")"
.PP
gunicorn --workers=5 --threads=2 "hcli_core:connector(\\"`hcli_core sample hfm`\\", \\"./custom.config\\")"
