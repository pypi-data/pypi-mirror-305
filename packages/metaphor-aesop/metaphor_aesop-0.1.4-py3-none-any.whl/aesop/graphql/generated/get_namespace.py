# Generated by ariadne-codegen
# Source: aesop/graphql/queries

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetNamespace(BaseModel):
    namespaces: "GetNamespaceNamespaces"


class GetNamespaceNamespaces(BaseModel):
    edges: List[Optional["GetNamespaceNamespacesEdges"]]
    page_info: "GetNamespaceNamespacesPageInfo" = Field(alias="pageInfo")


class GetNamespaceNamespacesEdges(BaseModel):
    node: "GetNamespaceNamespacesEdgesNode"


class GetNamespaceNamespacesEdgesNode(BaseModel):
    id: str
    namespace_info: Optional["GetNamespaceNamespacesEdgesNodeNamespaceInfo"] = Field(
        alias="namespaceInfo"
    )


class GetNamespaceNamespacesEdgesNodeNamespaceInfo(BaseModel):
    name: str


class GetNamespaceNamespacesPageInfo(BaseModel):
    has_next_page: Optional[bool] = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")


GetNamespace.model_rebuild()
GetNamespaceNamespaces.model_rebuild()
GetNamespaceNamespacesEdges.model_rebuild()
GetNamespaceNamespacesEdgesNode.model_rebuild()
