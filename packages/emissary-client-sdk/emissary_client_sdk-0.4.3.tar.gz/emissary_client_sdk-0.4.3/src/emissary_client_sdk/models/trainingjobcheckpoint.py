"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from emissary_client_sdk.types import BaseModel
from typing import Dict, Optional
from typing_extensions import NotRequired, TypedDict


class TestResultsTypedDict(TypedDict):
    __test__ = False  # pyright: ignore[reportGeneralTypeIssues]

    general_test_result: NotRequired[str]
    aggregated_test_result: NotRequired[Dict[str, str]]


class TestResults(BaseModel):
    __test__ = False

    general_test_result: Optional[str] = None

    aggregated_test_result: Optional[Dict[str, str]] = None


class TrainingJobCheckpointTypedDict(TypedDict):
    r"""Training Job Checkpoint Object"""

    checkpoint: NotRequired[int]
    r"""The checkpoint number"""
    model_download_url: NotRequired[str]
    r"""The URL to download the model checkpoint"""
    test_results: NotRequired[TestResultsTypedDict]
    created_at: NotRequired[int]
    r"""The timestamp when the checkpoint was created"""
    updated_at: NotRequired[int]
    r"""The timestamp when the checkpoint was created"""


class TrainingJobCheckpoint(BaseModel):
    r"""Training Job Checkpoint Object"""

    checkpoint: Optional[int] = None
    r"""The checkpoint number"""

    model_download_url: Optional[str] = None
    r"""The URL to download the model checkpoint"""

    test_results: Optional[TestResults] = None

    created_at: Optional[int] = None
    r"""The timestamp when the checkpoint was created"""

    updated_at: Optional[int] = None
    r"""The timestamp when the checkpoint was created"""
