[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "plxcontroller"
version = "0.7.0"
description = "Controllers to create and modify Plaxis 2D and 3D models with enhanced functionalities."
requires-python = ">=3.9"
dependencies = [
    "plxscripting>=1.0.4,<2.0.0",
    "numpy>=1.24.2,<2.0",
    "shapely>=2.0.1,<3.0",
    "matplotlib==3.7.1",
    "scikit-spatial>=7.0.0,<8.0.0",
]
license = { file = "LICENSE" }
readme = "README.md"
keywords = ["plxcontroller", "CEMS", "PLAXIS automation"]

[project.urls]
repository = "https://github.com/cemsbv/plxcontroller"

[project.optional-dependencies]
test = ["coveralls", "pytest"]

# lint dependencies from github super-linter v5
# See https://github.com/super-linter/super-linter/tree/main/dependencies/python
lint = [
    "mypy==1.6.1",
    "mypy-extensions==1.0.0",
    "tomli==2.0.1",
    "typing_extensions==4.7.1",
    "black[jupyter]==23.10.1",
    "click==8.1.3",
    "packaging==23.2",
    "pathspec==0.11.1",
    "platformdirs==3.5.1",
    "tomli==2.0.1,",
    "isort==5.12.0",
    "flake8==6.0.0",
    "mccabe==0.7.0",
    "pycodestyle==2.10.0",
    "pyflakes==3.0.1",
    'pandas-stubs>2,<3',
    'types-tqdm>4,<5',
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
files = ["src/plxcontroller"]
mypy_path = 'src'
namespace_packages = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
disallow_subclassing_any = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_any_generics = false
disallow_untyped_calls = true
warn_return_any = false
no_implicit_reexport = true
strict_equality = true
install_types = true

[[tool.mypy.overrides]]
module = [
    "plxscripting.*",
    "skspatial.*",
    "numpy.*",
    "scipy.*",
    "matplotlib.*",
    "requests.*",
    "nuclei.*",
    "pygef.*",
    "natsort.*",
    "shapely.*",
    "pytest.*",
]
ignore_missing_imports = true
