[tool.poetry]
name = "awhere"
version = "0.0.1"
description = "Agents Anywhere - An agentic workflow framework"
authors = ["Al Wonder <al@yiwonder.com>"]
readme = "README.md"

packages = [
    { include = "awhere" },
    { include = "awhere/py.typed" },
]

[tool.poetry.dependencies]
python = "^3.10"
dynaconf = "^3.2.6"
pydantic = "^2.9.2"
fastapi = "^0.115.4"
uvicorn = "^0.32.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.docs]
optional = true


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
tox = "^4.23.2"
mypy = "^1.13.0"
ruff = "^0.7.1"
types-markdown = "^3.7.0.20240822"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.43"
mkdocs-minify-plugin = "^0.8.0"
mkdocstrings = "^0.26.2"
pydocstyle = "^6.3.0"

[tool.poetry.extras]
all = []

# Tool specific configs


[tool.mypy]
plugins = [
  "pydantic.mypy"
]
exclude = [
    "^test",
    "tests/"
]
strict = true
follow_imports = "silent"
warn_unused_ignores = false
# warn_redundant_casts = true
# disallow_any_generics = true
# check_untyped_defs = true
# no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
# disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
#testpaths = ["tests"]

[tool.coverage.report]
omit = [
    "*/tests/*",
    "test_*"
]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug",
    "if settings.DEBUG",
    "if TYPE_CHECKING",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "pass"
]

[tool.ruff]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.format]
# Changed to single quotes (default is double)
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"