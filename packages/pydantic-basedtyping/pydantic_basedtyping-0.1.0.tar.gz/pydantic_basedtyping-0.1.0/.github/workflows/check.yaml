name: check

on: push

env:
  # Configure a constant location for the uv cache
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install the project
        run: ./pw install

      - name: Install the project
        if: ${{ matrix.python-version == '3.13' }}
        run: ./pw install
      - name: lint
        if: ${{ matrix.python-version == '3.13' }}
        run: ./pw uv run ruff check --output-format github
      - name: format
        if: ${{ matrix.python-version == '3.13' }}
        run: ./pw uv run ruff format --check --diff

      - name: Run tests
        run: ./pw uv run pytest tests
      - name: typecheck
        run: ./pw uv run mypy

      - name: set minimum deps
        if: ${{ matrix.python-version != '3.13' }}  # no wheels
        run: ./pw uv pip install pydantic==2.4.2
      - name: Run tests
        if: ${{ matrix.python-version != '3.13' }}  # no wheels
        run: ./pw uv run pytest tests
      - name: typecheck
        if: ${{ matrix.python-version != '3.13' }}  # no wheels
        run: ./pw uv run mypy

      - name: Minimize uv cache
        run: ./pw uv cache prune --ci
