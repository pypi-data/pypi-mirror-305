[project]
name = "po2dataset"
version = "0.5.0"
authors = [
  {name = "Urtzi Odriozola", email = "urtzi.odriozola@gmail.com"},
]
description = "Python tool to extract sentences from po files and create language datasets for NLP machine learning"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["po", "dataset", "NLP", "argostranslate", "libretranslate", "language", "translation"]
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish (see also "license" above)
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dynamic = ["dependencies"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[project.scripts]
po2dataset = "po2dataset.po2dataset:main"

[project.urls]
Homepage = "https://github.com/urtzai/po2dataset"
Documentation = "https://github.com/urtzai/po2dataset/blob/main/README.md"
Repository = "https://github.com/urtzai/po2dataset"
"Bug Tracker" = "https://github.com/urtzai/po2dataset/issues"
Changelog = "https://github.com/urtzai/po2dataset/blob/main/CHANGELOG.md"

[tool.semantic_release]
assets = []
build_command_env = []
build_command = "python3 -m pip install build && python3 -m build --sdist --wheel"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_variables = ["pyproject.toml:version"]

[tool.semantic_release.branches.main]
match = "(main|dev)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
output_format = "md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["breaking","build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["fix", "style", "test", "docs","ci","build", "chore"]
patch_tags = ["feat", "perf"]
major_tags = ["breaking"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

